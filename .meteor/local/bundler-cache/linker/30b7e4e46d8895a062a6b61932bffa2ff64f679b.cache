[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/jortizsao_isteven-angular-multiselect/packages/jortizsao //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {                                                       // 1\n                                                                     // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jortizsao:isteven-angular-multiselect/isteven-multi-select.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n * Angular JS Multi Select                                                                                             // 2\n * Creates a dropdown-like button with checkboxes.                                                                     // 3\n *                                                                                                                     // 4\n * Project started on: Tue, 14 Jan 2014 - 5:18:02 PM                                                                   // 5\n * Current version: 4.0.0                                                                                              // 6\n *                                                                                                                     // 7\n * Released under the MIT License                                                                                      // 8\n * --------------------------------------------------------------------------------                                    // 9\n * The MIT License (MIT)                                                                                               // 10\n *                                                                                                                     // 11\n * Copyright (c) 2014 Ignatius Steven (https://github.com/isteven)                                                     // 12\n *                                                                                                                     // 13\n * Permission is hereby granted, free of charge, to any person obtaining a copy                                        // 14\n * of this software and associated documentation files (the \"Software\"), to deal                                       // 15\n * in the Software without restriction, including without limitation the rights                                        // 16\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell                                           // 17\n * copies of the Software, and to permit persons to whom the Software is                                               // 18\n * furnished to do so, subject to the following conditions:                                                            // 19\n *                                                                                                                     // 20\n * The above copyright notice and this permission notice shall be included in all                                      // 21\n * copies or substantial portions of the Software.                                                                     // 22\n *                                                                                                                     // 23\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR                                          // 24\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,                                            // 25\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE                                         // 26\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER                                              // 27\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,                                       // 28\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE                                       // 29\n * SOFTWARE.                                                                                                           // 30\n * --------------------------------------------------------------------------------                                    // 31\n */                                                                                                                    // 32\n                                                                                                                       // 33\n'use strict'                                                                                                           // 34\n                                                                                                                       // 35\nangular.module( 'isteven-multi-select', ['ng'] ).directive( 'istevenMultiSelect' , [ '$sce', '$timeout', '$templateCache', function ( $sce, $timeout, $templateCache ) {\n    return {                                                                                                           // 37\n        restrict:                                                                                                      // 38\n            'AE',                                                                                                      // 39\n                                                                                                                       // 40\n        scope:                                                                                                         // 41\n        {                                                                                                              // 42\n            // models                                                                                                  // 43\n            inputModel      : '=',                                                                                     // 44\n            outputModel     : '=',                                                                                     // 45\n                                                                                                                       // 46\n            // settings based on attribute                                                                             // 47\n            isDisabled      : '=',                                                                                     // 48\n                                                                                                                       // 49\n            // callbacks                                                                                               // 50\n            onClear         : '&',                                                                                     // 51\n            onClose         : '&',                                                                                     // 52\n            onSearchChange  : '&',                                                                                     // 53\n            onItemClick     : '&',                                                                                     // 54\n            onOpen          : '&',                                                                                     // 55\n            onReset         : '&',                                                                                     // 56\n            onSelectAll     : '&',                                                                                     // 57\n            onSelectNone    : '&',                                                                                     // 58\n                                                                                                                       // 59\n            // i18n                                                                                                    // 60\n            translation     : '='                                                                                      // 61\n        },                                                                                                             // 62\n                                                                                                                       // 63\n        /*                                                                                                             // 64\n         * The rest are attributes. They don't need to be parsed / binded, so we can safely access them by value.      // 65\n         * - buttonLabel, directiveId, helperElements, itemLabel, maxLabels, orientation, selectionMode, minSearchLength,\n         *   tickProperty, disableProperty, groupProperty, searchProperty, maxHeight, outputProperties                 // 67\n         */                                                                                                            // 68\n                                                                                                                       // 69\n         templateUrl:                                                                                                  // 70\n            'isteven-multi-select.htm',                                                                                // 71\n                                                                                                                       // 72\n        link: function ( $scope, element, attrs ) {                                                                    // 73\n                                                                                                                       // 74\n            $scope.backUp           = [];                                                                              // 75\n            $scope.varButtonLabel   = '';                                                                              // 76\n            $scope.spacingProperty  = '';                                                                              // 77\n            $scope.indexProperty    = '';                                                                              // 78\n            $scope.orientationH     = false;                                                                           // 79\n            $scope.orientationV     = true;                                                                            // 80\n            $scope.filteredModel    = [];                                                                              // 81\n            $scope.inputLabel       = { labelFilter: '' };                                                             // 82\n            $scope.tabIndex         = 0;                                                                               // 83\n            $scope.lang             = {};                                                                              // 84\n            $scope.helperStatus     = {                                                                                // 85\n                all     : true,                                                                                        // 86\n                none    : true,                                                                                        // 87\n                reset   : true,                                                                                        // 88\n                filter  : true                                                                                         // 89\n            };                                                                                                         // 90\n                                                                                                                       // 91\n            var                                                                                                        // 92\n                prevTabIndex        = 0,                                                                               // 93\n                helperItems         = [],                                                                              // 94\n                helperItemsLength   = 0,                                                                               // 95\n                checkBoxLayer       = '',                                                                              // 96\n                scrolled            = false,                                                                           // 97\n                selectedItems       = [],                                                                              // 98\n                formElements        = [],                                                                              // 99\n                vMinSearchLength    = 0,                                                                               // 100\n                clickedItem         = null                                                                             // 101\n                                                                                                                       // 102\n            // v3.0.0                                                                                                  // 103\n            // clear button clicked                                                                                    // 104\n            $scope.clearClicked = function( e ) {                                                                      // 105\n                $scope.inputLabel.labelFilter = '';                                                                    // 106\n                $scope.updateFilter();                                                                                 // 107\n                $scope.select( 'clear', e );                                                                           // 108\n            }                                                                                                          // 109\n                                                                                                                       // 110\n            // A little hack so that AngularJS ng-repeat can loop using start and end index like a normal loop         // 111\n            // http://stackoverflow.com/questions/16824853/way-to-ng-repeat-defined-number-of-times-instead-of-repeating-over-array\n            $scope.numberToArray = function( num ) {                                                                   // 113\n                return new Array( num );                                                                               // 114\n            }                                                                                                          // 115\n                                                                                                                       // 116\n            // Call this function when user type on the filter field                                                   // 117\n            $scope.searchChanged = function() {                                                                        // 118\n                if ( $scope.inputLabel.labelFilter.length < vMinSearchLength && $scope.inputLabel.labelFilter.length > 0 ) {\n                    return false;                                                                                      // 120\n                }                                                                                                      // 121\n                $scope.updateFilter();                                                                                 // 122\n            }                                                                                                          // 123\n                                                                                                                       // 124\n            $scope.updateFilter = function()                                                                           // 125\n            {                                                                                                          // 126\n                // we check by looping from end of input-model                                                         // 127\n                $scope.filteredModel = [];                                                                             // 128\n                var i = 0;                                                                                             // 129\n                                                                                                                       // 130\n                if ( typeof $scope.inputModel === 'undefined' ) {                                                      // 131\n                    return false;                                                                                      // 132\n                }                                                                                                      // 133\n                                                                                                                       // 134\n                for( i = $scope.inputModel.length - 1; i >= 0; i-- ) {                                                 // 135\n                                                                                                                       // 136\n                    // if it's group end, we push it to filteredModel[];                                               // 137\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.inputModel[ i ][ attrs.groupProperty ] === false ) {\n                        $scope.filteredModel.push( $scope.inputModel[ i ] );                                           // 139\n                    }                                                                                                  // 140\n                                                                                                                       // 141\n                    // if it's data                                                                                    // 142\n                    var gotData = false;                                                                               // 143\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] === 'undefined' ) {                        \n                                                                                                                       // 145\n                        // If we set the search-key attribute, we use this loop.                                       // 146\n                        if ( typeof attrs.searchProperty !== 'undefined' && attrs.searchProperty !== '' ) {            // 147\n                                                                                                                       // 148\n                            for (var key in $scope.inputModel[ i ]  ) {                                                // 149\n                                if (                                                                                   // 150\n                                    typeof $scope.inputModel[ i ][ key ] !== 'boolean'                                 // 151\n                                    && String( $scope.inputModel[ i ][ key ] ).toUpperCase().indexOf( $scope.inputLabel.labelFilter.toUpperCase() ) >= 0                                     \n                                    && attrs.searchProperty.indexOf( key ) > -1                                        // 153\n                                ) {                                                                                    // 154\n                                    gotData = true;                                                                    // 155\n                                    break;                                                                             // 156\n                                }                                                                                      // 157\n                            }                                                                                          // 158\n                        }                                                                                              // 159\n                        // if there's no search-key attribute, we use this one. Much better on performance.            // 160\n                        else {                                                                                         // 161\n                            for ( var key in $scope.inputModel[ i ]  ) {                                               // 162\n                                if (                                                                                   // 163\n                                    typeof $scope.inputModel[ i ][ key ] !== 'boolean'                                 // 164\n                                    && String( $scope.inputModel[ i ][ key ] ).toUpperCase().indexOf( $scope.inputLabel.labelFilter.toUpperCase() ) >= 0                                     \n                                ) {                                                                                    // 166\n                                    gotData = true;                                                                    // 167\n                                    break;                                                                             // 168\n                                }                                                                                      // 169\n                            }                                                                                          // 170\n                        }                                                                                              // 171\n                                                                                                                       // 172\n                        if ( gotData === true ) {                                                                      // 173\n                            // push                                                                                    // 174\n                            $scope.filteredModel.push( $scope.inputModel[ i ] );                                       // 175\n                        }                                                                                              // 176\n                    }                                                                                                  // 177\n                                                                                                                       // 178\n                    // if it's group start                                                                             // 179\n                    if ( typeof $scope.inputModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.inputModel[ i ][ attrs.groupProperty ] === true ) {\n                                                                                                                       // 181\n                        if ( typeof $scope.filteredModel[ $scope.filteredModel.length - 1 ][ attrs.groupProperty ] !== 'undefined' \n                                && $scope.filteredModel[ $scope.filteredModel.length - 1 ][ attrs.groupProperty ] === false ) {\n                            $scope.filteredModel.pop();                                                                // 184\n                        }                                                                                              // 185\n                        else {                                                                                         // 186\n                            $scope.filteredModel.push( $scope.inputModel[ i ] );                                       // 187\n                        }                                                                                              // 188\n                    }                                                                                                  // 189\n                }                                                                                                      // 190\n                                                                                                                       // 191\n                $scope.filteredModel.reverse();                                                                        // 192\n                                                                                                                       // 193\n                $timeout( function() {                                                                                 // 194\n                                                                                                                       // 195\n                    $scope.getFormElements();                                                                          // 196\n                                                                                                                       // 197\n                    // Callback: on filter change                                                                      // 198\n                    if ( $scope.inputLabel.labelFilter.length > vMinSearchLength ) {                                   // 199\n                                                                                                                       // 200\n                        var filterObj = [];                                                                            // 201\n                                                                                                                       // 202\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                                // 203\n                            if ( typeof value !== 'undefined' ) {                                                      // 204\n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                                                    \n                                    var tempObj = angular.copy( value );                                               // 206\n                                    var index = filterObj.push( tempObj );                                             // 207\n                                    delete filterObj[ index - 1 ][ $scope.indexProperty ];                             // 208\n                                    delete filterObj[ index - 1 ][ $scope.spacingProperty ];                           // 209\n                                }                                                                                      // 210\n                            }                                                                                          // 211\n                        });                                                                                            // 212\n                                                                                                                       // 213\n                        $scope.onSearchChange({                                                                        // 214\n                            data:                                                                                      // 215\n                            {                                                                                          // 216\n                                keyword: $scope.inputLabel.labelFilter,                                                // 217\n                                result: filterObj                                                                      // 218\n                            }                                                                                          // 219\n                        });                                                                                            // 220\n                    }                                                                                                  // 221\n                },0);                                                                                                  // 222\n            };                                                                                                         // 223\n                                                                                                                       // 224\n            // List all the input elements. We need this for our keyboard navigation.                                  // 225\n            // This function will be called everytime the filter is updated.                                           // 226\n            // Depending on the size of filtered mode, might not good for performance, but oh well..                   // 227\n            $scope.getFormElements = function() {                                                                      // 228\n                formElements = [];                                                                                     // 229\n                                                                                                                       // 230\n                var                                                                                                    // 231\n                    selectButtons   = [],                                                                              // 232\n                    inputField      = [],                                                                              // 233\n                    checkboxes      = [],                                                                              // 234\n                    clearButton     = [];                                                                              // 235\n                                                                                                                       // 236\n                // If available, then get select all, select none, and reset buttons                                   // 237\n                if ( $scope.helperStatus.all || $scope.helperStatus.none || $scope.helperStatus.reset ) {                                                       \n                    selectButtons = element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'button' );                    \n                    // If available, then get the search box and the clear button                                      // 240\n                    if ( $scope.helperStatus.filter ) {                                                                // 241\n                        // Get helper - search and clear button.                                                       // 242\n                        inputField =    element.children().children().next().children().children().next()[ 0 ].getElementsByTagName( 'input' );                    \n                        clearButton =   element.children().children().next().children().children().next()[ 0 ].getElementsByTagName( 'button' );                        \n                    }                                                                                                  // 245\n                }                                                                                                      // 246\n                else {                                                                                                 // 247\n                    if ( $scope.helperStatus.filter ) {                                                                // 248\n                        // Get helper - search and clear button.                                                       // 249\n                        inputField =    element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'input' );                    \n                        clearButton =   element.children().children().next().children().children()[ 0 ].getElementsByTagName( 'button' );\n                    }                                                                                                  // 252\n                }                                                                                                      // 253\n                                                                                                                       // 254\n                // Get checkboxes                                                                                      // 255\n                if ( !$scope.helperStatus.all && !$scope.helperStatus.none && !$scope.helperStatus.reset && !$scope.helperStatus.filter ) {\n                    checkboxes = element.children().children().next()[ 0 ].getElementsByTagName( 'input' );            // 257\n                }                                                                                                      // 258\n                else {                                                                                                 // 259\n                    checkboxes = element.children().children().next().children().next()[ 0 ].getElementsByTagName( 'input' );\n                }                                                                                                      // 261\n                                                                                                                       // 262\n                // Push them into global array formElements[]                                                          // 263\n                for ( var i = 0; i < selectButtons.length ; i++ )   { formElements.push( selectButtons[ i ] );  }      // 264\n                for ( var i = 0; i < inputField.length ; i++ )      { formElements.push( inputField[ i ] );     }      // 265\n                for ( var i = 0; i < clearButton.length ; i++ )     { formElements.push( clearButton[ i ] );    }      // 266\n                for ( var i = 0; i < checkboxes.length ; i++ )      { formElements.push( checkboxes[ i ] );     }                                \n            }                                                                                                          // 268\n                                                                                                                       // 269\n            // check if an item has attrs.groupProperty (be it true or false)                                          // 270\n            $scope.isGroupMarker = function( item , type ) {                                                           // 271\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === type ) return true; \n                return false;                                                                                          // 273\n            }                                                                                                          // 274\n                                                                                                                       // 275\n            $scope.removeGroupEndMarker = function( item ) {                                                           // 276\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === false ) return false; \n                return true;                                                                                           // 278\n            }                                                                                                          // 279\n                                                                                                                       // 280\n            // call this function when an item is clicked                                                              // 281\n            $scope.syncItems = function( item, e, ng_repeat_index ) {                                                  // 282\n                                                                                                                       // 283\n                e.preventDefault();                                                                                    // 284\n                e.stopPropagation();                                                                                   // 285\n                                                                                                                       // 286\n                // if the directive is globaly disabled, do nothing                                                    // 287\n                if ( typeof attrs.disableProperty !== 'undefined' && item[ attrs.disableProperty ] === true ) {                                        \n                    return false;                                                                                      // 289\n                }                                                                                                      // 290\n                                                                                                                       // 291\n                // if item is disabled, do nothing                                                                     // 292\n                if ( typeof attrs.isDisabled !== 'undefined' && $scope.isDisabled === true ) {                         // 293\n                    return false;                                                                                      // 294\n                }                                                                                                      // 295\n                                                                                                                       // 296\n                // if end group marker is clicked, do nothing                                                          // 297\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === false ) {   // 298\n                    return false;                                                                                      // 299\n                }                                                                                                      // 300\n                                                                                                                       // 301\n                var index = $scope.filteredModel.indexOf( item );                                                      // 302\n                                                                                                                       // 303\n                // if the start of group marker is clicked ( only for multiple selection! )                            // 304\n                // how it works:                                                                                       // 305\n                // - if, in a group, there are items which are not selected, then they all will be selected            // 306\n                // - if, in a group, all items are selected, then they all will be de-selected                         // 307\n                if ( typeof item[ attrs.groupProperty ] !== 'undefined' && item[ attrs.groupProperty ] === true ) {                                  \n                                                                                                                       // 309\n                    // this is only for multiple selection, so if selection mode is single, do nothing                 // 310\n                    if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {\n                        return false;                                                                                  // 312\n                    }                                                                                                  // 313\n                                                                                                                       // 314\n                    var i,j,k;                                                                                         // 315\n                    var startIndex = 0;                                                                                // 316\n                    var endIndex = $scope.filteredModel.length - 1;                                                    // 317\n                    var tempArr = [];                                                                                  // 318\n                                                                                                                       // 319\n                    // nest level is to mark the depth of the group.                                                   // 320\n                    // when you get into a group (start group marker), nestLevel++                                     // 321\n                    // when you exit a group (end group marker), nextLevel--                                           // 322\n                    var nestLevel = 0;                                                                                 // 323\n                                                                                                                       // 324\n                    // we loop throughout the filtered model (not whole model)                                         // 325\n                    for( i = index ; i < $scope.filteredModel.length ; i++) {                                          // 326\n                                                                                                                       // 327\n                        // this break will be executed when we're done processing each group                           // 328\n                        if ( nestLevel === 0 && i > index )                                                            // 329\n                        {                                                                                              // 330\n                            break;                                                                                     // 331\n                        }                                                                                              // 332\n                                                                                                                       // 333\n                        if ( typeof $scope.filteredModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.filteredModel[ i ][ attrs.groupProperty ] === true ) {\n                                                                                                                       // 335\n                            // To cater multi level grouping                                                           // 336\n                            if ( tempArr.length === 0 ) {                                                              // 337\n                                startIndex = i + 1;                                                                    // 338\n                            }                                                                                          // 339\n                            nestLevel = nestLevel + 1;                                                                 // 340\n                        }                                                                                              // 341\n                                                                                                                       // 342\n                        // if group end                                                                                // 343\n                        else if ( typeof $scope.filteredModel[ i ][ attrs.groupProperty ] !== 'undefined' && $scope.filteredModel[ i ][ attrs.groupProperty ] === false ) {\n                                                                                                                       // 345\n                            nestLevel = nestLevel - 1;                                                                 // 346\n                                                                                                                       // 347\n                            // cek if all are ticked or not                                                            // 348\n                            if ( tempArr.length > 0 && nestLevel === 0 ) {                                             // 349\n                                                                                                                       // 350\n                                var allTicked = true;                                                                  // 351\n                                                                                                                       // 352\n                                endIndex = i;                                                                          // 353\n                                                                                                                       // 354\n                                for ( j = 0; j < tempArr.length ; j++ ) {                                              // 355\n                                    if ( typeof tempArr[ j ][ $scope.tickProperty ] !== 'undefined' &&  tempArr[ j ][ $scope.tickProperty ] === false ) {\n                                        allTicked = false;                                                             // 357\n                                        break;                                                                         // 358\n                                    }                                                                                  // 359\n                                }                                                                                      // 360\n                                                                                                                       // 361\n                                if ( allTicked === true ) {                                                            // 362\n                                    for ( j = startIndex; j <= endIndex ; j++ ) {                                      // 363\n                                        if ( typeof $scope.filteredModel[ j ][ attrs.groupProperty ] === 'undefined' ) {\n                                            if ( typeof attrs.disableProperty === 'undefined' ) {                      // 365\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = false;              // 366\n                                                // we refresh input model as well                                      // 367\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];   // 368\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = false;   // 369\n                                            }                                                                          // 370\n                                            else if ( $scope.filteredModel[ j ][ attrs.disableProperty ] !== true ) {  // 371\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = false;              // 372\n                                                // we refresh input model as well                                      // 373\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];   // 374\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = false;   // 375\n                                            }                                                                          // 376\n                                        }                                                                              // 377\n                                    }                                                                                  // 378\n                                }                                                                                      // 379\n                                                                                                                       // 380\n                                else {                                                                                 // 381\n                                    for ( j = startIndex; j <= endIndex ; j++ ) {                                      // 382\n                                        if ( typeof $scope.filteredModel[ j ][ attrs.groupProperty ] === 'undefined' ) {\n                                            if ( typeof attrs.disableProperty === 'undefined' ) {                      // 384\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = true;                                                \n                                                // we refresh input model as well                                      // 386\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];   // 387\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = true;    // 388\n                                                                                                                       // 389\n                                            }                                                                          // 390\n                                            else if ( $scope.filteredModel[ j ][ attrs.disableProperty ] !== true ) {  // 391\n                                                $scope.filteredModel[ j ][ $scope.tickProperty ] = true;               // 392\n                                                // we refresh input model as well                                      // 393\n                                                inputModelIndex = $scope.filteredModel[ j ][ $scope.indexProperty ];   // 394\n                                                $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = true;    // 395\n                                            }                                                                          // 396\n                                        }                                                                              // 397\n                                    }                                                                                  // 398\n                                }                                                                                      // 399\n                            }                                                                                          // 400\n                        }                                                                                              // 401\n                                                                                                                       // 402\n                        // if data                                                                                     // 403\n                        else {                                                                                         // 404\n                            tempArr.push( $scope.filteredModel[ i ] );                                                                                    \n                        }                                                                                              // 406\n                    }                                                                                                  // 407\n                }                                                                                                      // 408\n                                                                                                                       // 409\n                // if an item (not group marker) is clicked                                                            // 410\n                else {                                                                                                 // 411\n                                                                                                                       // 412\n                    // If it's single selection mode                                                                   // 413\n                    if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {\n                                                                                                                       // 415\n                        // first, set everything to false                                                              // 416\n                        for( i=0 ; i < $scope.filteredModel.length ; i++) {                                            // 417\n                            $scope.filteredModel[ i ][ $scope.tickProperty ] = false;                                  // 418\n                        }                                                                                              // 419\n                        for( i=0 ; i < $scope.inputModel.length ; i++) {                                               // 420\n                            $scope.inputModel[ i ][ $scope.tickProperty ] = false;                                     // 421\n                        }                                                                                              // 422\n                                                                                                                       // 423\n                        // then set the clicked item to true                                                           // 424\n                        $scope.filteredModel[ index ][ $scope.tickProperty ] = true;                                                                 \n                    }                                                                                                  // 426\n                                                                                                                       // 427\n                    // Multiple                                                                                        // 428\n                    else {                                                                                             // 429\n                        $scope.filteredModel[ index ][ $scope.tickProperty ]   = !$scope.filteredModel[ index ][ $scope.tickProperty ];\n                    }                                                                                                  // 431\n                                                                                                                       // 432\n                    // we refresh input model as well                                                                  // 433\n                    var inputModelIndex = $scope.filteredModel[ index ][ $scope.indexProperty ];                                        \n                    $scope.inputModel[ inputModelIndex ][ $scope.tickProperty ] = $scope.filteredModel[ index ][ $scope.tickProperty ];                    \n                }                                                                                                      // 436\n                                                                                                                       // 437\n                // we execute the callback function here                                                               // 438\n                clickedItem = angular.copy( item );                                                                    // 439\n                if ( clickedItem !== null ) {                                                                          // 440\n                    $timeout( function() {                                                                             // 441\n                        delete clickedItem[ $scope.indexProperty ];                                                    // 442\n                        delete clickedItem[ $scope.spacingProperty ];                                                  // 443\n                        $scope.onItemClick( { data: clickedItem } );                                                   // 444\n                        clickedItem = null;                                                                            // 445\n                    }, 0 );                                                                                            // 446\n                }                                                                                                      // 447\n                                                                                                                       // 448\n                $scope.refreshOutputModel();                                                                           // 449\n                $scope.refreshButton();                                                                                // 450\n                                                                                                                       // 451\n                // We update the index here                                                                            // 452\n                prevTabIndex = $scope.tabIndex;                                                                        // 453\n                $scope.tabIndex = ng_repeat_index + helperItemsLength;                                                 // 454\n                                                                                                                       // 455\n                // Set focus on the hidden checkbox                                                                    // 456\n                e.target.focus();                                                                                      // 457\n                                                                                                                       // 458\n                // set & remove CSS style                                                                              // 459\n                $scope.removeFocusStyle( prevTabIndex );                                                               // 460\n                $scope.setFocusStyle( $scope.tabIndex );                                                               // 461\n                                                                                                                       // 462\n                if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' ) {  // 463\n                    // on single selection mode, we then hide the checkbox layer                                       // 464\n                    $scope.toggleCheckboxes( e );                                                                      // 465\n                }                                                                                                      // 466\n            }                                                                                                          // 467\n                                                                                                                       // 468\n            // update $scope.outputModel                                                                               // 469\n            $scope.refreshOutputModel = function() {                                                                   // 470\n                                                                                                                       // 471\n                $scope.outputModel  = [];                                                                              // 472\n                var                                                                                                    // 473\n                    outputProps     = [],                                                                              // 474\n                    tempObj         = {};                                                                              // 475\n                                                                                                                       // 476\n                // v4.0.0                                                                                              // 477\n                if ( typeof attrs.outputProperties !== 'undefined' ) {                                                 // 478\n                    outputProps = attrs.outputProperties.split(' ');                                                   // 479\n                    angular.forEach( $scope.inputModel, function( value, key ) {                                       // 480\n                        if (                                                                                           // 481\n                            typeof value !== 'undefined'                                                               // 482\n                            && typeof value[ attrs.groupProperty ] === 'undefined'                                     // 483\n                            && value[ $scope.tickProperty ] === true                                                   // 484\n                        ) {                                                                                            // 485\n                            tempObj         = {};                                                                      // 486\n                            angular.forEach( value, function( value1, key1 ) {                                         // 487\n                                if ( outputProps.indexOf( key1 ) > -1 ) {                                                                         \n                                    tempObj[ key1 ] = value1;                                                          // 489\n                                }                                                                                      // 490\n                            });                                                                                        // 491\n                            var index = $scope.outputModel.push( tempObj );                                                               \n                            delete $scope.outputModel[ index - 1 ][ $scope.indexProperty ];                            // 493\n                            delete $scope.outputModel[ index - 1 ][ $scope.spacingProperty ];                                      \n                        }                                                                                              // 495\n                    });                                                                                                // 496\n                }                                                                                                      // 497\n                else {                                                                                                 // 498\n                    angular.forEach( $scope.inputModel, function( value, key ) {                                       // 499\n                        if (                                                                                           // 500\n                            typeof value !== 'undefined'                                                               // 501\n                            && typeof value[ attrs.groupProperty ] === 'undefined'                                     // 502\n                            && value[ $scope.tickProperty ] === true                                                   // 503\n                        ) {                                                                                            // 504\n                            var temp = angular.copy( value );                                                          // 505\n                            var index = $scope.outputModel.push( temp );                                                               \n                            delete $scope.outputModel[ index - 1 ][ $scope.indexProperty ];                            // 507\n                            delete $scope.outputModel[ index - 1 ][ $scope.spacingProperty ];                                      \n                        }                                                                                              // 509\n                    });                                                                                                // 510\n                }                                                                                                      // 511\n            }                                                                                                          // 512\n                                                                                                                       // 513\n            // refresh button label                                                                                    // 514\n            $scope.refreshButton = function() {                                                                        // 515\n                                                                                                                       // 516\n                $scope.varButtonLabel   = '';                                                                          // 517\n                var ctr                 = 0;                                                                           // 518\n                                                                                                                       // 519\n                // refresh button label...                                                                             // 520\n                if ( $scope.outputModel.length === 0 ) {                                                               // 521\n                    // https://github.com/isteven/angular-multi-select/pull/19                                         // 522\n                    $scope.varButtonLabel = $scope.lang.nothingSelected;                                               // 523\n                }                                                                                                      // 524\n                else {                                                                                                 // 525\n                    var tempMaxLabels = $scope.outputModel.length;                                                     // 526\n                    if ( typeof attrs.maxLabels !== 'undefined' && attrs.maxLabels !== '' ) {                          // 527\n                        tempMaxLabels = attrs.maxLabels;                                                               // 528\n                    }                                                                                                  // 529\n                                                                                                                       // 530\n                    // if max amount of labels displayed..                                                             // 531\n                    if ( $scope.outputModel.length > tempMaxLabels ) {                                                 // 532\n                        $scope.more = true;                                                                            // 533\n                    }                                                                                                  // 534\n                    else {                                                                                             // 535\n                        $scope.more = false;                                                                           // 536\n                    }                                                                                                  // 537\n                                                                                                                       // 538\n                    angular.forEach( $scope.inputModel, function( value, key ) {                                       // 539\n                        if ( typeof value !== 'undefined' && value[ attrs.tickProperty ] === true ) {                        \n                            if ( ctr < tempMaxLabels ) {                                                               // 541\n                                $scope.varButtonLabel += ( $scope.varButtonLabel.length > 0 ? '</div>, <div class=\"buttonLabel\">' : '<div class=\"buttonLabel\">') + $scope.writeLabel( value, 'buttonLabel' );\n                            }                                                                                          // 543\n                            ctr++;                                                                                     // 544\n                        }                                                                                              // 545\n                    });                                                                                                // 546\n                                                                                                                       // 547\n                    if ( $scope.more === true ) {                                                                      // 548\n                        // https://github.com/isteven/angular-multi-select/pull/16                                     // 549\n                        if (tempMaxLabels > 0) {                                                                       // 550\n                            $scope.varButtonLabel += ', ... ';                                                         // 551\n                        }                                                                                              // 552\n                        $scope.varButtonLabel += '(' + $scope.outputModel.length + ')';                                // 553\n                    }                                                                                                  // 554\n                }                                                                                                      // 555\n                $scope.varButtonLabel = $sce.trustAsHtml( $scope.varButtonLabel + '<span class=\"caret\"></span>' );                \n            }                                                                                                          // 557\n                                                                                                                       // 558\n            // Check if a checkbox is disabled or enabled. It will check the granular control (disableProperty) and global control (isDisabled)\n            // Take note that the granular control has higher priority.                                                // 560\n            $scope.itemIsDisabled = function( item ) {                                                                 // 561\n                                                                                                                       // 562\n                if ( typeof attrs.disableProperty !== 'undefined' && item[ attrs.disableProperty ] === true ) {                                        \n                    return true;                                                                                       // 564\n                }                                                                                                      // 565\n                else {                                                                                                 // 566\n                    if ( $scope.isDisabled === true ) {                                                                // 567\n                        return true;                                                                                   // 568\n                    }                                                                                                  // 569\n                    else {                                                                                             // 570\n                        return false;                                                                                  // 571\n                    }                                                                                                  // 572\n                }                                                                                                      // 573\n                                                                                                                       // 574\n            }                                                                                                          // 575\n                                                                                                                       // 576\n            // A simple function to parse the item label settings. Used on the buttons and checkbox labels.            // 577\n            $scope.writeLabel = function( item, type ) {                                                               // 578\n                                                                                                                       // 579\n                // type is either 'itemLabel' or 'buttonLabel'                                                         // 580\n                var temp    = attrs[ type ].split( ' ' );                                                              // 581\n                var label   = '';                                                                                      // 582\n                                                                                                                       // 583\n                angular.forEach( temp, function( value, key ) {                                                        // 584\n                    item[ value ] && ( label += '&nbsp;' + value.split( '.' ).reduce( function( prev, current ) {      // 585\n                        return prev[ current ];                                                                        // 586\n                    }, item ));                                                                                        // 587\n                });                                                                                                    // 588\n                                                                                                                       // 589\n                if ( type.toUpperCase() === 'BUTTONLABEL' ) {                                                          // 590\n                    return label;                                                                                      // 591\n                }                                                                                                      // 592\n                return $sce.trustAsHtml( label );                                                                      // 593\n            }                                                                                                          // 594\n                                                                                                                       // 595\n            // UI operations to show/hide checkboxes based on click event..                                            // 596\n            $scope.toggleCheckboxes = function( e ) {                                                                  // 597\n                                                                                                                       // 598\n                // We grab the button                                                                                  // 599\n                var clickedEl = element.children()[0];                                                                 // 600\n                                                                                                                       // 601\n                // Just to make sure.. had a bug where key events were recorded twice                                  // 602\n                angular.element( document ).off( 'click', $scope.externalClickListener );                              // 603\n                angular.element( document ).off( 'keydown', $scope.keyboardListener );                                 // 604\n                                                                                                                       // 605\n                // The idea below was taken from another multi-select directive - https://github.com/amitava82/angular-multiselect \n                // His version is awesome if you need a more simple multi-select approach.                                \n                                                                                                                       // 608\n                // close                                                                                               // 609\n                if ( angular.element( checkBoxLayer ).hasClass( 'show' )) {                                            // 610\n                                                                                                                       // 611\n                    angular.element( checkBoxLayer ).removeClass( 'show' );                                            // 612\n                    angular.element( clickedEl ).removeClass( 'buttonClicked' );                                       // 613\n                    angular.element( document ).off( 'click', $scope.externalClickListener );                          // 614\n                    angular.element( document ).off( 'keydown', $scope.keyboardListener );                                    \n                                                                                                                       // 616\n                    // clear the focused element;                                                                      // 617\n                    $scope.removeFocusStyle( $scope.tabIndex );                                                        // 618\n                    if ( typeof formElements[ $scope.tabIndex ] !== 'undefined' ) {                                    // 619\n                        formElements[ $scope.tabIndex ].blur();                                                        // 620\n                    }                                                                                                  // 621\n                                                                                                                       // 622\n                    // close callback                                                                                  // 623\n                    $timeout( function() {                                                                             // 624\n                        $scope.onClose();                                                                              // 625\n                    }, 0 );                                                                                            // 626\n                                                                                                                       // 627\n                    // set focus on button again                                                                       // 628\n                    element.children().children()[ 0 ].focus();                                                        // 629\n                }                                                                                                      // 630\n                // open                                                                                                // 631\n                else                                                                                                   // 632\n                {                                                                                                      // 633\n                    // clear filter                                                                                    // 634\n                    $scope.inputLabel.labelFilter = '';                                                                // 635\n                    $scope.updateFilter();                                                                             // 636\n                                                                                                                       // 637\n                    helperItems = [];                                                                                  // 638\n                    helperItemsLength = 0;                                                                             // 639\n                                                                                                                       // 640\n                    angular.element( checkBoxLayer ).addClass( 'show' );                                               // 641\n                    angular.element( clickedEl ).addClass( 'buttonClicked' );                                          // 642\n                                                                                                                       // 643\n                    // Attach change event listener on the input filter.                                               // 644\n                    // We need this because ng-change is apparently not an event listener.                             // 645\n                    angular.element( document ).on( 'click', $scope.externalClickListener );                           // 646\n                    angular.element( document ).on( 'keydown', $scope.keyboardListener );                              // 647\n                                                                                                                       // 648\n                    // to get the initial tab index, depending on how many helper elements we have.                    // 649\n                    // priority is to always focus it on the input filter                                                                \n                    $scope.getFormElements();                                                                          // 651\n                    $scope.tabIndex = 0;                                                                               // 652\n                                                                                                                       // 653\n                    var helperContainer = angular.element( element[ 0 ].querySelector( '.helperContainer' ) )[0];                \n                                                                                                                       // 655\n                    if ( typeof helperContainer !== 'undefined' ) {                                                    // 656\n                        for ( var i = 0; i < helperContainer.getElementsByTagName( 'BUTTON' ).length ; i++ ) {         // 657\n                            helperItems[ i ] = helperContainer.getElementsByTagName( 'BUTTON' )[ i ];                  // 658\n                        }                                                                                              // 659\n                        helperItemsLength = helperItems.length + helperContainer.getElementsByTagName( 'INPUT' ).length;\n                    }                                                                                                  // 661\n                                                                                                                       // 662\n                    // focus on the filter element on open.                                                            // 663\n                    if ( element[ 0 ].querySelector( '.inputFilter' ) ) {                                              // 664\n                        element[ 0 ].querySelector( '.inputFilter' ).focus();                                          // 665\n                        $scope.tabIndex = $scope.tabIndex + helperItemsLength - 2;                                     // 666\n                        // blur button in vain                                                                         // 667\n                        angular.element( element ).children()[ 0 ].blur();                                             // 668\n                    }                                                                                                  // 669\n                    // if there's no filter then just focus on the first checkbox item                                 // 670\n                    else {                                                                                             // 671\n                        if ( !$scope.isDisabled ) {                                                                    // 672\n                            $scope.tabIndex = $scope.tabIndex + helperItemsLength;                                     // 673\n                            if ( $scope.inputModel.length > 0 ) {                                                      // 674\n                                formElements[ $scope.tabIndex ].focus();                                               // 675\n                                $scope.setFocusStyle( $scope.tabIndex );                                               // 676\n                                // blur button in vain                                                                 // 677\n                                angular.element( element ).children()[ 0 ].blur();                                     // 678\n                            }                                                                                          // 679\n                        }                                                                                              // 680\n                    }                                                                                                  // 681\n                                                                                                                       // 682\n                    // open callback                                                                                   // 683\n                    $scope.onOpen();                                                                                   // 684\n                }                                                                                                      // 685\n            }                                                                                                          // 686\n                                                                                                                       // 687\n            // handle clicks outside the button / multi select layer                                                   // 688\n            $scope.externalClickListener = function( e ) {                                                             // 689\n                                                                                                                       // 690\n                var targetsArr = element.find( e.target.tagName );                                                     // 691\n                for (var i = 0; i < targetsArr.length; i++) {                                                          // 692\n                    if ( e.target == targetsArr[i] ) {                                                                 // 693\n                        return;                                                                                        // 694\n                    }                                                                                                  // 695\n                }                                                                                                      // 696\n                                                                                                                       // 697\n                angular.element( checkBoxLayer.previousSibling ).removeClass( 'buttonClicked' );                       // 698\n                angular.element( checkBoxLayer ).removeClass( 'show' );                                                // 699\n                angular.element( document ).off( 'click', $scope.externalClickListener );                              // 700\n                angular.element( document ).off( 'keydown', $scope.keyboardListener );                                 // 701\n                                                                                                                       // 702\n                // close callback                                                                                      // 703\n                $timeout( function() {                                                                                 // 704\n                    $scope.onClose();                                                                                  // 705\n                }, 0 );                                                                                                // 706\n                                                                                                                       // 707\n                // set focus on button again                                                                           // 708\n                element.children().children()[ 0 ].focus();                                                            // 709\n            }                                                                                                          // 710\n                                                                                                                       // 711\n            // select All / select None / reset buttons                                                                // 712\n            $scope.select = function( type, e ) {                                                                      // 713\n                                                                                                                       // 714\n                var helperIndex = helperItems.indexOf( e.target );                                                     // 715\n                $scope.tabIndex = helperIndex;                                                                         // 716\n                                                                                                                       // 717\n                switch( type.toUpperCase() ) {                                                                         // 718\n                    case 'ALL':                                                                                        // 719\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                                // 720\n                            if ( typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                                \n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                \n                                    value[ $scope.tickProperty ] = true;                                               // 723\n                                }                                                                                      // 724\n                            }                                                                                          // 725\n                        });                                                                                            // 726\n                        $scope.refreshOutputModel();                                                                   // 727\n                        $scope.refreshButton();                                                                        // 728\n                        $scope.onSelectAll();                                                                          // 729\n                        break;                                                                                         // 730\n                    case 'NONE':                                                                                       // 731\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                                // 732\n                            if ( typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                        \n                                if ( typeof value[ attrs.groupProperty ] === 'undefined' ) {                                \n                                    value[ $scope.tickProperty ] = false;                                              // 735\n                                }                                                                                      // 736\n                            }                                                                                          // 737\n                        });                                                                                            // 738\n                        $scope.refreshOutputModel();                                                                   // 739\n                        $scope.refreshButton();                                                                          \n                        $scope.onSelectNone();                                                                         // 741\n                        break;                                                                                         // 742\n                    case 'RESET':                                                                                      // 743\n                        angular.forEach( $scope.filteredModel, function( value, key ) {                                // 744\n                            if ( typeof value[ attrs.groupProperty ] === 'undefined' && typeof value !== 'undefined' && value[ attrs.disableProperty ] !== true ) {                        \n                                var temp = value[ $scope.indexProperty ];                                              // 746\n                                value[ $scope.tickProperty ] = $scope.backUp[ temp ][ $scope.tickProperty ];           // 747\n                            }                                                                                          // 748\n                        });                                                                                            // 749\n                        $scope.refreshOutputModel();                                                                   // 750\n                        $scope.refreshButton();                                                                          \n                        $scope.onReset();                                                                              // 752\n                        break;                                                                                         // 753\n                    case 'CLEAR':                                                                                      // 754\n                        $scope.tabIndex = $scope.tabIndex + 1;                                                         // 755\n                        $scope.onClear();                                                                              // 756\n                        break;                                                                                         // 757\n                    case 'FILTER':                                                                                     // 758\n                        $scope.tabIndex = helperItems.length - 1;                                                      // 759\n                        break;                                                                                         // 760\n                    default:                                                                                           // 761\n                }                                                                                                      // 762\n            }                                                                                                          // 763\n                                                                                                                       // 764\n            // just to create a random variable name                                                                   // 765\n            function genRandomString( length ) {                                                                       // 766\n                var possible    = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';                              // 767\n                var temp        = '';                                                                                  // 768\n                for( var i=0; i < length; i++ ) {                                                                      // 769\n                     temp += possible.charAt( Math.floor( Math.random() * possible.length ));                          // 770\n                }                                                                                                      // 771\n                return temp;                                                                                           // 772\n            }                                                                                                          // 773\n                                                                                                                       // 774\n            // count leading spaces                                                                                    // 775\n            $scope.prepareGrouping = function() {                                                                      // 776\n                var spacing     = 0;                                                                                   // 777\n                angular.forEach( $scope.filteredModel, function( value, key ) {                                        // 778\n                    value[ $scope.spacingProperty ] = spacing;                                                         // 779\n                    if ( value[ attrs.groupProperty ] === true ) {                                                     // 780\n                        spacing+=2;                                                                                    // 781\n                    }                                                                                                  // 782\n                    else if ( value[ attrs.groupProperty ] === false ) {                                               // 783\n                        spacing-=2;                                                                                    // 784\n                    }                                                                                                  // 785\n                });                                                                                                    // 786\n            }                                                                                                          // 787\n                                                                                                                       // 788\n            // prepare original index                                                                                  // 789\n            $scope.prepareIndex = function() {                                                                         // 790\n                var ctr = 0;                                                                                           // 791\n                angular.forEach( $scope.filteredModel, function( value, key ) {                                        // 792\n                    value[ $scope.indexProperty ] = ctr;                                                               // 793\n                    ctr++;                                                                                             // 794\n                });                                                                                                    // 795\n            }                                                                                                          // 796\n                                                                                                                       // 797\n            // navigate using up and down arrow                                                                        // 798\n            $scope.keyboardListener = function( e ) {                                                                  // 799\n                                                                                                                       // 800\n                var key = e.keyCode ? e.keyCode : e.which;                                                             // 801\n                var isNavigationKey = false;                                                                           // 802\n                                                                                                                       // 803\n                // ESC key (close)                                                                                     // 804\n                if ( key === 27 ) {                                                                                    // 805\n                    e.preventDefault();                                                                                // 806\n                    e.stopPropagation();                                                                               // 807\n                    $scope.toggleCheckboxes( e );                                                                      // 808\n                }                                                                                                      // 809\n                                                                                                                       // 810\n                                                                                                                       // 811\n                // next element ( tab, down & right key )                                                              // 812\n                else if ( key === 40 || key === 39 || ( !e.shiftKey && key == 9 ) ) {                                  // 813\n                                                                                                                       // 814\n                    isNavigationKey = true;                                                                            // 815\n                    prevTabIndex = $scope.tabIndex;                                                                    // 816\n                    $scope.tabIndex++;                                                                                 // 817\n                    if ( $scope.tabIndex > formElements.length - 1 ) {                                                 // 818\n                        $scope.tabIndex = 0;                                                                           // 819\n                        prevTabIndex = formElements.length - 1;                                                        // 820\n                    }                                                                                                  // 821\n                    while ( formElements[ $scope.tabIndex ].disabled === true ) {                                      // 822\n                        $scope.tabIndex++;                                                                             // 823\n                        if ( $scope.tabIndex > formElements.length - 1 ) {                                             // 824\n                            $scope.tabIndex = 0;                                                                       // 825\n                        }                                                                                              // 826\n                        if ( $scope.tabIndex === prevTabIndex ) {                                                      // 827\n                            break;                                                                                     // 828\n                        }                                                                                              // 829\n                    }                                                                                                  // 830\n                }                                                                                                      // 831\n                                                                                                                       // 832\n                // prev element ( shift+tab, up & left key )                                                           // 833\n                else if ( key === 38 || key === 37 || ( e.shiftKey && key == 9 ) ) {                                   // 834\n                    isNavigationKey = true;                                                                            // 835\n                    prevTabIndex = $scope.tabIndex;                                                                    // 836\n                    $scope.tabIndex--;                                                                                 // 837\n                    if ( $scope.tabIndex < 0 ) {                                                                       // 838\n                        $scope.tabIndex = formElements.length - 1;                                                     // 839\n                        prevTabIndex = 0;                                                                              // 840\n                    }                                                                                                  // 841\n                    while ( formElements[ $scope.tabIndex ].disabled === true ) {                                      // 842\n                        $scope.tabIndex--;                                                                             // 843\n                        if ( $scope.tabIndex === prevTabIndex ) {                                                      // 844\n                            break;                                                                                     // 845\n                        }                                                                                              // 846\n                        if ( $scope.tabIndex < 0 ) {                                                                   // 847\n                            $scope.tabIndex = formElements.length - 1;                                                 // 848\n                        }                                                                                              // 849\n                    }                                                                                                  // 850\n                }                                                                                                      // 851\n                                                                                                                       // 852\n                if ( isNavigationKey === true ) {                                                                      // 853\n                                                                                                                       // 854\n                    e.preventDefault();                                                                                // 855\n                                                                                                                       // 856\n                    // set focus on the checkbox                                                                       // 857\n                    formElements[ $scope.tabIndex ].focus();                                                           // 858\n                    var actEl = document.activeElement;                                                                // 859\n                                                                                                                       // 860\n                    if ( actEl.type.toUpperCase() === 'CHECKBOX' ) {                                                   \n                        $scope.setFocusStyle( $scope.tabIndex );                                                       // 862\n                        $scope.removeFocusStyle( prevTabIndex );                                                       // 863\n                    }                                                                                                  // 864\n                    else {                                                                                             // 865\n                        $scope.removeFocusStyle( prevTabIndex );                                                       // 866\n                        $scope.removeFocusStyle( helperItemsLength );                                                  // 867\n                        $scope.removeFocusStyle( formElements.length - 1 );                                            // 868\n                    }                                                                                                  // 869\n                }                                                                                                      // 870\n                                                                                                                       // 871\n                isNavigationKey = false;                                                                               // 872\n            }                                                                                                          // 873\n                                                                                                                       // 874\n            // set (add) CSS style on selected row                                                                     // 875\n            $scope.setFocusStyle = function( tabIndex ) {                                                              // 876\n                angular.element( formElements[ tabIndex ] ).parent().parent().parent().addClass( 'multiSelectFocus' );                        \n            }                                                                                                          // 878\n                                                                                                                       // 879\n            // remove CSS style on selected row                                                                        // 880\n            $scope.removeFocusStyle = function( tabIndex ) {                                                           // 881\n                angular.element( formElements[ tabIndex ] ).parent().parent().parent().removeClass( 'multiSelectFocus' );\n            }                                                                                                          // 883\n                                                                                                                       // 884\n            /*********************                                                                                     // 885\n             *********************                                                                                     // 886\n             *                                                                                                         // 887\n             * 1) Initializations                                                                                      // 888\n             *                                                                                                         // 889\n             *********************                                                                                     // 890\n             *********************/                                                                                    // 891\n                                                                                                                       // 892\n            // attrs to $scope - attrs-$scope - attrs - $scope                                                         // 893\n            // Copy some properties that will be used on the template. They need to be in the $scope.                  // 894\n            $scope.groupProperty    = attrs.groupProperty;                                                             // 895\n            $scope.tickProperty     = attrs.tickProperty;                                                              // 896\n            $scope.directiveId      = attrs.directiveId;                                                               // 897\n                                                                                                                       // 898\n            // Unfortunately I need to add these grouping properties into the input model                              // 899\n            var tempStr = genRandomString( 5 );                                                                        // 900\n            $scope.indexProperty = 'idx_' + tempStr;                                                                   // 901\n            $scope.spacingProperty = 'spc_' + tempStr;                                                                 // 902\n                                                                                                                       // 903\n            // set orientation css                                                                                     // 904\n            if ( typeof attrs.orientation !== 'undefined' ) {                                                          // 905\n                                                                                                                       // 906\n                if ( attrs.orientation.toUpperCase() === 'HORIZONTAL' ) {                                              // 907\n                    $scope.orientationH = true;                                                                        // 908\n                    $scope.orientationV = false;                                                                       // 909\n                }                                                                                                      // 910\n                else                                                                                                   // 911\n                {                                                                                                      // 912\n                    $scope.orientationH = false;                                                                       // 913\n                    $scope.orientationV = true;                                                                        // 914\n                }                                                                                                      // 915\n            }                                                                                                          // 916\n                                                                                                                       // 917\n            // get elements required for DOM operation                                                                 // 918\n            checkBoxLayer = element.children().children().next()[0];                                                   // 919\n                                                                                                                       // 920\n            // set max-height property if provided                                                                     // 921\n            if ( typeof attrs.maxHeight !== 'undefined' ) {                                                            // 922\n                var layer = element.children().children().children()[0];                                               // 923\n                angular.element( layer ).attr( \"style\", \"height:\" + attrs.maxHeight + \"; overflow-y:scroll;\" );                                \n            }                                                                                                          // 925\n                                                                                                                       // 926\n            // some flags for easier checking                                                                          // 927\n            for ( var property in $scope.helperStatus ) {                                                              // 928\n                if ( $scope.helperStatus.hasOwnProperty( property )) {                                                 // 929\n                    if (                                                                                               // 930\n                        typeof attrs.helperElements !== 'undefined'                                                    // 931\n                        && attrs.helperElements.toUpperCase().indexOf( property.toUpperCase() ) === -1                 // 932\n                    ) {                                                                                                // 933\n                        $scope.helperStatus[ property ] = false;                                                       // 934\n                    }                                                                                                  // 935\n                }                                                                                                      // 936\n            }                                                                                                          // 937\n            if ( typeof attrs.selectionMode !== 'undefined' && attrs.selectionMode.toUpperCase() === 'SINGLE' )  {     // 938\n                $scope.helperStatus[ 'all' ] = false;                                                                  // 939\n                $scope.helperStatus[ 'none' ] = false;                                                                 // 940\n            }                                                                                                          // 941\n                                                                                                                       // 942\n            // helper button icons.. I guess you can use html tag here if you want to.                                 // 943\n            $scope.icon        = {};                                                                                   // 944\n            $scope.icon.selectAll  = '&#10003;';    // a tick icon                                                     // 945\n            $scope.icon.selectNone = '&times;';     // x icon                                                          // 946\n            $scope.icon.reset      = '&#8630;';     // undo icon                                                       // 947\n            // this one is for the selected items                                                                      // 948\n            $scope.icon.tickMark   = '&#10003;';    // a tick icon                                                     // 949\n                                                                                                                       // 950\n            // configurable button labels                                                                              // 951\n            if ( typeof attrs.translation !== 'undefined' ) {                                                          // 952\n                $scope.lang.selectAll       = $sce.trustAsHtml( $scope.icon.selectAll  + '&nbsp;&nbsp;' + $scope.translation.selectAll );\n                $scope.lang.selectNone      = $sce.trustAsHtml( $scope.icon.selectNone + '&nbsp;&nbsp;' + $scope.translation.selectNone );\n                $scope.lang.reset           = $sce.trustAsHtml( $scope.icon.reset      + '&nbsp;&nbsp;' + $scope.translation.reset );\n                $scope.lang.search          = $scope.translation.search;                                               // 956\n                $scope.lang.nothingSelected = $sce.trustAsHtml( $scope.translation.nothingSelected );                  // 957\n            }                                                                                                          // 958\n            else {                                                                                                     // 959\n                $scope.lang.selectAll       = $sce.trustAsHtml( $scope.icon.selectAll  + '&nbsp;&nbsp;Select All' );                \n                $scope.lang.selectNone      = $sce.trustAsHtml( $scope.icon.selectNone + '&nbsp;&nbsp;Select None' );  // 961\n                $scope.lang.reset           = $sce.trustAsHtml( $scope.icon.reset      + '&nbsp;&nbsp;Reset' );        // 962\n                $scope.lang.search          = 'Search...';                                                             // 963\n                $scope.lang.nothingSelected = 'None Selected';                                                         // 964\n            }                                                                                                          // 965\n            $scope.icon.tickMark = $sce.trustAsHtml( $scope.icon.tickMark );                                           // 966\n                                                                                                                       // 967\n            // min length of keyword to trigger the filter function                                                    // 968\n            if ( typeof attrs.MinSearchLength !== 'undefined' && parseInt( attrs.MinSearchLength ) > 0 ) {             // 969\n                vMinSearchLength = Math.floor( parseInt( attrs.MinSearchLength ) );                                    // 970\n            }                                                                                                          // 971\n                                                                                                                       // 972\n            /*******************************************************                                                   // 973\n             *******************************************************                                                   // 974\n             *                                                                                                         // 975\n             * 2) Logic starts here, initiated by watch 1 & watch 2                                                    // 976\n             *                                                                                                         // 977\n             *******************************************************                                                   // 978\n             *******************************************************/                                                  // 979\n                                                                                                                       // 980\n            // watch1, for changes in input model property                                                             // 981\n            // updates multi-select when user select/deselect a single checkbox programatically                        // 982\n            // https://github.com/isteven/angular-multi-select/issues/8                                                // 983\n            $scope.$watch( 'inputModel' , function( newVal ) {                                                         // 984\n                if ( newVal ) {                                                                                        // 985\n                    $scope.refreshOutputModel();                                                                       // 986\n                    $scope.refreshButton();                                                                            // 987\n                }                                                                                                      // 988\n            }, true );                                                                                                 // 989\n                                                                                                                       // 990\n            // watch2 for changes in input model as a whole                                                            // 991\n            // this on updates the multi-select when a user load a whole new input-model. We also update the $scope.backUp variable\n            $scope.$watch( 'inputModel' , function( newVal ) {                                                         // 993\n                if ( newVal ) {                                                                                        // 994\n                    $scope.backUp = angular.copy( $scope.inputModel );                                                 // 995\n                    $scope.updateFilter();                                                                             // 996\n                    $scope.prepareGrouping();                                                                          // 997\n                    $scope.prepareIndex();                                                                             // 998\n                    $scope.refreshOutputModel();                                                                       // 999\n                    $scope.refreshButton();                                                                                                                 \n                }                                                                                                      // 1001\n            });                                                                                                        // 1002\n                                                                                                                       // 1003\n            // watch for changes in directive state (disabled or enabled)                                              // 1004\n            $scope.$watch( 'isDisabled' , function( newVal ) {                                                         // 1005\n                $scope.isDisabled = newVal;                                                                            // 1006\n            });                                                                                                        // 1007\n                                                                                                                       // 1008\n            // this is for touch enabled devices. We don't want to hide checkboxes on scroll.                          // 1009\n            var onTouchStart = function( e ) {                                                                         // 1010\n            \t$scope.$apply( function() {                                                                               // 1011\n            \t\t$scope.scrolled = false;                                                                                 // 1012\n            \t});                                                                                                       // 1013\n            };                                                                                                         // 1014\n            angular.element( document ).bind( 'touchstart', onTouchStart);                                             // 1015\n            var onTouchMove = function( e ) {                                                                          // 1016\n            \t$scope.$apply( function() {                                                                               // 1017\n            \t\t$scope.scrolled = true;                                                                                  // 1018\n            \t});                                                                                                       // 1019\n            };                                                                                                         // 1020\n            angular.element( document ).bind( 'touchmove', onTouchMove);                                               // 1021\n                                                                                                                       // 1022\n            // unbind document events to prevent memory leaks                                                          // 1023\n            $scope.$on( '$destroy', function () {                                                                      // 1024\n\t\t\t    angular.element( document ).unbind( 'touchstart', onTouchStart);                                                // 1025\n            \tangular.element( document ).unbind( 'touchmove', onTouchMove);                                            // 1026\n            });                                                                                                        // 1027\n        }                                                                                                              // 1028\n    }                                                                                                                  // 1029\n}]).run( [ '$templateCache' , function( $templateCache ) {                                                             // 1030\n    var template =                                                                                                     // 1031\n        '<span class=\"multiSelect inlineBlock\">' +                                                                     // 1032\n            // main button                                                                                             // 1033\n            '<button id=\"{{directiveId}}\" type=\"button\"' +                                                             // 1034\n                'ng-click=\"toggleCheckboxes( $event ); refreshSelectedItems(); refreshButton(); prepareGrouping; prepareIndex();\"' +\n                'ng-bind-html=\"varButtonLabel\"' +                                                                      // 1036\n                'ng-disabled=\"disable-button\"' +                                                                       // 1037\n            '>' +                                                                                                      // 1038\n            '</button>' +                                                                                              // 1039\n            // overlay layer                                                                                           // 1040\n            '<div class=\"checkboxLayer\">' +                                                                            // 1041\n                // container of the helper elements                                                                    // 1042\n                '<div class=\"helperContainer\" ng-if=\"helperStatus.filter || helperStatus.all || helperStatus.none || helperStatus.reset \">' +\n                    // container of the first 3 buttons, select all, none and reset                                    // 1044\n                    '<div class=\"line\" ng-if=\"helperStatus.all || helperStatus.none || helperStatus.reset \">' +        // 1045\n                        // select all                                                                                  // 1046\n                        '<button type=\"button\" class=\"helperButton\"' +                                                 // 1047\n                            'ng-disabled=\"isDisabled\"' +                                                               // 1048\n                            'ng-if=\"helperStatus.all\"' +                                                               // 1049\n                            'ng-click=\"select( \\'all\\', $event );\"' +                                                  // 1050\n                            'ng-bind-html=\"lang.selectAll\">' +                                                         // 1051\n                        '</button>'+                                                                                   // 1052\n                        // select none                                                                                 // 1053\n                        '<button type=\"button\" class=\"helperButton\"' +                                                 // 1054\n                            'ng-disabled=\"isDisabled\"' +                                                               // 1055\n                            'ng-if=\"helperStatus.none\"' +                                                              // 1056\n                            'ng-click=\"select( \\'none\\', $event );\"' +                                                 // 1057\n                            'ng-bind-html=\"lang.selectNone\">' +                                                        // 1058\n                        '</button>'+                                                                                   // 1059\n                        // reset                                                                                       // 1060\n                        '<button type=\"button\" class=\"helperButton reset\"' +                                           // 1061\n                            'ng-disabled=\"isDisabled\"' +                                                               // 1062\n                            'ng-if=\"helperStatus.reset\"' +                                                             // 1063\n                            'ng-click=\"select( \\'reset\\', $event );\"' +                                                // 1064\n                            'ng-bind-html=\"lang.reset\">'+                                                              // 1065\n                        '</button>' +                                                                                  // 1066\n                    '</div>' +                                                                                         // 1067\n                    // the search box                                                                                  // 1068\n                    '<div class=\"line\" style=\"position:relative\" ng-if=\"helperStatus.filter\">'+                        // 1069\n                        // textfield                                                                                   // 1070\n                        '<input placeholder=\"{{lang.search}}\" type=\"text\"' +                                           // 1071\n                            'ng-click=\"select( \\'filter\\', $event )\" '+                                                // 1072\n                            'ng-model=\"inputLabel.labelFilter\" '+                                                      // 1073\n                            'ng-change=\"searchChanged()\" class=\"inputFilter\"'+                                         // 1074\n                            '/>'+                                                                                      // 1075\n                        // clear button                                                                                // 1076\n                        '<button type=\"button\" class=\"clearButton\" ng-click=\"clearClicked( $event )\" >×</button> '+    // 1077\n                    '</div> '+                                                                                         // 1078\n                '</div> '+                                                                                             // 1079\n                // selection items                                                                                     // 1080\n                '<div class=\"checkBoxContainer\">'+                                                                     // 1081\n                    '<div '+                                                                                           // 1082\n                        'ng-repeat=\"item in filteredModel | filter:removeGroupEndMarker\" class=\"multiSelectItem\"'+     // 1083\n                        'ng-class=\"{selected: item[ tickProperty ], horizontal: orientationH, vertical: orientationV, multiSelectGroup:item[ groupProperty ], disabled:itemIsDisabled( item )}\"'+\n                        'ng-click=\"syncItems( item, $event, $index );\" '+                                              // 1085\n                        'ng-mouseleave=\"removeFocusStyle( tabIndex );\"> '+                                             // 1086\n                        // this is the spacing for grouped items                                                       // 1087\n                        '<div class=\"acol\" ng-if=\"item[ spacingProperty ] > 0\" ng-repeat=\"i in numberToArray( item[ spacingProperty ] ) track by $index\">'+                        \n                    '</div>  '+                                                                                        // 1089\n                    '<div class=\"acol\">'+                                                                              // 1090\n                        '<label>'+                                                                                     // 1091\n                            // input, so that it can accept focus on keyboard click                                    // 1092\n                            '<input class=\"checkbox focusable\" type=\"checkbox\" '+                                      // 1093\n                                'ng-disabled=\"itemIsDisabled( item )\" '+                                               // 1094\n                                'ng-checked=\"item[ tickProperty ]\" '+                                                  // 1095\n                                'ng-click=\"syncItems( item, $event, $index )\" />'+                                     // 1096\n                            // item label using ng-bind-hteml                                                          // 1097\n                            '<span '+                                                                                  // 1098\n                                'ng-class=\"{disabled:itemIsDisabled( item )}\" '+                                       // 1099\n                                'ng-bind-html=\"writeLabel( item, \\'itemLabel\\' )\">'+                                   // 1100\n                            '</span>'+                                                                                 // 1101\n                        '</label>'+                                                                                    // 1102\n                    '</div>'+                                                                                          // 1103\n                    // the tick/check mark                                                                             // 1104\n                    '<span class=\"tickMark\" ng-if=\"item[ groupProperty ] !== true && item[ tickProperty ] === true\" ng-bind-html=\"icon.tickMark\"></span>'+\n                '</div>'+                                                                                              // 1106\n            '</div>'+                                                                                                  // 1107\n        '</div>'+                                                                                                      // 1108\n    '</span>';                                                                                                         // 1109\n\t$templateCache.put( 'isteven-multi-select.htm' , template );                                                          // 1110\n}]);                                                                                                                   // 1111\n                                                                                                                       // 1112\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                     // 1122\n}).call(this);                                                       // 1123\n                                                                     // 1124\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['jortizsao:isteven-angular-multiselect'] = {};\n\n})();\n","servePath":"/packages/jortizsao_isteven-angular-multiselect.js"}]