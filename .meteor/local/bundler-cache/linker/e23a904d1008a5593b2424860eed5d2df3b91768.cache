[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar meteorInstall = Package['modules-runtime'].meteorInstall;\n\n/* Package-scope variables */\nvar Buffer, process;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"modules\":{\"server.js\":[\"./install-packages.js\",\"./buffer.js\",\"./process.js\",\"reify/lib/runtime\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/modules/server.js                                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nrequire(\"./install-packages.js\");\nrequire(\"./buffer.js\");\nrequire(\"./process.js\");\nrequire(\"reify/lib/runtime\").enable(module.constructor);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"buffer.js\":[\"buffer\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/modules/buffer.js                                                                                     //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\ntry {\n  Buffer = global.Buffer || require(\"buffer\").Buffer;\n} catch (noBuffer) {}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"install-packages.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/modules/install-packages.js                                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nfunction install(name, mainModule) {\n  var meteorDir = {};\n\n  // Given a package name <name>, install a stub module in the\n  // /node_modules/meteor directory called <name>.js, so that\n  // require.resolve(\"meteor/<name>\") will always return\n  // /node_modules/meteor/<name>.js instead of something like\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event\n  // that the package contains a file called index.js (#6590).\n\n  if (mainModule) {\n    meteorDir[name + \".js\"] = [mainModule, function (require, e, module) {\n      module.exports = require(mainModule);\n    }];\n  } else {\n    // back compat with old Meteor packages\n    meteorDir[name + \".js\"] = function (r, e, module) {\n      module.exports = Package[name];\n    };\n  }\n\n  meteorInstall({\n    node_modules: {\n      meteor: meteorDir\n    }\n  });\n}\n\n// This file will be modified during computeJsOutputFilesMap to include\n// install(<name>) calls for every Meteor package.\n\ninstall(\"underscore\");\ninstall(\"meteor\");\ninstall(\"meteor-base\");\ninstall(\"mobile-experience\");\ninstall(\"npm-mongo\");\ninstall(\"modules-runtime\");\ninstall(\"modules\", \"meteor/modules/server.js\");\ninstall(\"promise\", \"meteor/promise/server.js\");\ninstall(\"ecmascript-runtime\", \"meteor/ecmascript-runtime/runtime.js\");\ninstall(\"babel-compiler\");\ninstall(\"ecmascript\");\ninstall(\"base64\");\ninstall(\"ejson\");\ninstall(\"id-map\");\ninstall(\"ordered-dict\");\ninstall(\"tracker\");\ninstall(\"babel-runtime\", \"meteor/babel-runtime/babel-runtime.js\");\ninstall(\"random\");\ninstall(\"mongo-id\");\ninstall(\"diff-sequence\");\ninstall(\"geojson-utils\", \"meteor/geojson-utils/main.js\");\ninstall(\"minimongo\");\ninstall(\"check\", \"meteor/check/match.js\");\ninstall(\"retry\");\ninstall(\"ddp-common\");\ninstall(\"ddp-client\");\ninstall(\"rate-limit\");\ninstall(\"ddp-rate-limiter\");\ninstall(\"logging\");\ninstall(\"routepolicy\");\ninstall(\"deps\");\ninstall(\"htmljs\");\ninstall(\"html-tools\");\ninstall(\"blaze-tools\");\ninstall(\"spacebars-compiler\");\ninstall(\"observe-sequence\");\ninstall(\"jquery\");\ninstall(\"reactive-var\");\ninstall(\"blaze\");\ninstall(\"spacebars\");\ninstall(\"ui\");\ninstall(\"boilerplate-generator\");\ninstall(\"webapp-hashing\");\ninstall(\"webapp\");\ninstall(\"callback-hook\");\ninstall(\"ddp-server\");\ninstall(\"ddp\");\ninstall(\"allow-deny\");\ninstall(\"binary-heap\");\ninstall(\"insecure\");\ninstall(\"mongo\");\ninstall(\"session\");\ninstall(\"fourseven:scss\");\ninstall(\"reywood:bootstrap3-sass\");\ninstall(\"reywood:font-awesome-sass\");\ninstall(\"angular\");\ninstall(\"angular:angular-sanitize\");\ninstall(\"angular:angular-animate\");\ninstall(\"angular:angular-cookies\");\ninstall(\"angularui:angular-ui-router\");\ninstall(\"s2corp:angular-ui-grid\");\ninstall(\"dvelopment:angular-datepicker\");\ninstall(\"npm-bcrypt\", \"meteor/npm-bcrypt/wrapper.js\");\ninstall(\"accounts-base\", \"meteor/accounts-base/server_main.js\");\ninstall(\"sha\");\ninstall(\"srp\");\ninstall(\"email\");\ninstall(\"accounts-password\");\ninstall(\"vishalm:angular-toastr\");\ninstall(\"mizzao:jquery-ui\");\ninstall(\"alanning:roles\");\ninstall(\"momentjs:moment\");\ninstall(\"angularui:angular-ui-bootstrap\");\ninstall(\"reywood:publish-composite\");\ninstall(\"templating-compiler\");\ninstall(\"templating-runtime\");\ninstall(\"templating\");\ninstall(\"less\");\ninstall(\"mdg:camera\");\ninstall(\"zuuk:stale-session\");\ninstall(\"standard-minifier-css\");\ninstall(\"standard-minifier-js\");\ninstall(\"natestrauser:select2\");\ninstall(\"huei90:angular-validation\");\ninstall(\"rshashkov:angular-meteor-breadcrumb\");\ninstall(\"tmeasday:publish-counts\");\ninstall(\"angularutils:pagination\");\ninstall(\"huaming:js-xlsx\");\ninstall(\"shell-server\", \"meteor/shell-server/main.js\");\ninstall(\"mrt:nprogress\");\ninstall(\"angularui:ui-select\");\ninstall(\"jortizsao:isteven-angular-multiselect\");\ninstall(\"phund:angularjs-dropdown-multiselect\");\ninstall(\"emdagon:bootstrap-multiselect\");\ninstall(\"zimme:select2-bootstrap3-css\");\ninstall(\"livedata\");\ninstall(\"hot-code-push\");\ninstall(\"launch-screen\");\ninstall(\"benjamine:jsondiffpatch\");\ninstall(\"angular-meteor-data\");\ninstall(\"angular-templates\");\ninstall(\"pbastowski:angular-babel\");\ninstall(\"autoupdate\");\ninstall(\"reload\");\ninstall(\"service-configuration\");\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"process.js\":[\"process\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/modules/process.js                                                                                    //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\ntry {\n  // The application can run `npm install process` to provide its own\n  // process stub; otherwise this module will provide a partial stub.\n  process = global.process || require(\"process\");\n} catch (noProcess) {\n  process = {};\n}\n\nif (Meteor.isServer) {\n  // Make require(\"process\") work on the server in all versions of Node.\n  meteorInstall({\n    node_modules: {\n      \"process.js\": function (r, e, module) {\n        module.exports = process;\n      }\n    }\n  });\n} else {\n  process.platform = \"browser\";\n  process.nextTick = process.nextTick || Meteor._setImmediate;\n}\n\nif (typeof process.env !== \"object\") {\n  process.env = {};\n}\n\n_.extend(process.env, meteorEnv);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"node_modules\":{\"reify\":{\"lib\":{\"runtime.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/meteor/modules/node_modules/reify/lib/runtime.js                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar Entry = require(\"./entry.js\").Entry;\nvar utils = require(\"./utils.js\");\n\nexports.enable = function (Module) {\n  var Mp = Module.prototype;\n\n  if (typeof Mp.import === \"function\" &&\n      typeof Mp.export === \"function\") {\n    // If the Mp.{import,export} methods have already been\n    // defined, abandon reification immediately.\n    return Module;\n  }\n\n  // Platform-specific code should implement this method however\n  // appropriate. Module.prototype.resolve(id) should return an absolute\n  // version of the given module identifier, like require.resolve.\n  Mp.resolve = Mp.resolve || function resolve(id) {\n    throw new Error(\"Module.prototype.resolve not implemented\");\n  };\n\n  // Platform-specific code should find a way to call this method whenever\n  // the module system is about to return module.exports from require. This\n  // might happen more than once per module, in case of dependency cycles,\n  // so we want Module.prototype.runModuleSetters to run each time.\n  Mp.runModuleSetters = function runModuleSetters(valueToPassThrough) {\n    var entry = Entry.get(this.id);\n    if (entry) {\n      entry.runModuleSetters(this);\n    }\n\n    // Assignments to exported local variables get wrapped with calls to\n    // module.runModuleSetters, so module.runModuleSetters returns the\n    // valueToPassThrough parameter to allow the value of the original\n    // expression to pass through. For example,\n    //\n    //   export var a = 1;\n    //   console.log(a += 3);\n    //\n    // becomes\n    //\n    //   module.export(\"a\", () => a);\n    //   var a = 1;\n    //   console.log(module.runModuleSetters(a += 3));\n    //\n    // This ensures module.runModuleSetters runs immediately after the\n    // assignment, and does not interfere with the larger computation.\n    return valueToPassThrough;\n  };\n\n  function setESModule(module) {\n    var exports = module.exports;\n    if (exports && typeof exports === \"object\") {\n      exports.__esModule = true;\n    }\n  }\n\n  // If key is provided, it will be used to identify the given setters so\n  // that they can be replaced if module.import is called again with the\n  // same key. This avoids potential memory leaks from import declarations\n  // inside loops. The compiler generates these keys automatically (and\n  // deterministically) when compiling nested import declarations.\n  Mp.import = function (id, setters, key) {\n    var module = this;\n    setESModule(module);\n\n    var absoluteId = module.resolve(id);\n\n    if (setters && typeof setters === \"object\") {\n      var entry = Entry.getOrCreate(absoluteId);\n      entry.addSetters(module, setters, key);\n    }\n\n    var countBefore = entry && entry.runCount;\n    var exports = typeof module.require === \"function\"\n      ? module.require(absoluteId)\n      : require(absoluteId);\n\n    if (entry && entry.runCount === countBefore) {\n      // If require(absoluteId) didn't run any setters for this entry,\n      // perhaps because it's not the first time this module has been\n      // required, run the setters now using an object that passes as the\n      // real module object.\n      entry.runModuleSetters({\n        id: absoluteId,\n        exports: exports,\n        getExportByName: Mp.getExportByName\n      });\n    }\n  };\n\n  // Register getter functions for local variables in the scope of an\n  // export statement. The keys of the getters object are exported names,\n  // and the values are functions that return local values.\n  Mp.export = function (getters) {\n    var module = this;\n    setESModule(module);\n\n    if (utils.isPlainObject(getters)) {\n      Entry.getOrCreate(module.id).addGetters(getters);\n    }\n\n    if (module.loaded) {\n      // If the module has already been evaluated, then we need to trigger\n      // another round of entry.runModuleSetters calls, which begins by\n      // calling entry.runModuleGetters(module).\n      module.runModuleSetters();\n    }\n  };\n\n  // This method can be overridden by client code to implement custom export\n  // naming logic. The current implementation works well with Babel's\n  // __esModule convention.\n  Mp.getExportByName = function (name) {\n    var exports = this.exports;\n\n    if (name === \"*\") {\n      return exports;\n    }\n\n    if (name === \"default\" &&\n        ! (exports &&\n           typeof exports === \"object\" &&\n           exports.__esModule &&\n           \"default\" in exports)) {\n      return exports;\n    }\n\n    return exports && exports[name];\n  };\n\n  return Module;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},\"docxtemplater\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/docxtemplater/package.json                                                                        //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"docxtemplater\";\nexports.version = \"3.1.10\";\nexports.main = \"js/docxtemplater.js\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"js\":{\"docxtemplater.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/docxtemplater/js/docxtemplater.js                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DocUtils = require(\"./doc-utils\");\nDocUtils.traits = require(\"./traits\");\nDocUtils.moduleWrapper = require(\"./module-wrapper\");\nvar defaults = DocUtils.defaults,\n    str2xml = DocUtils.str2xml,\n    xml2str = DocUtils.xml2str,\n    moduleWrapper = DocUtils.moduleWrapper,\n    concatArrays = DocUtils.concatArrays;\n\nvar _require = require(\"./errors\"),\n    XTInternalError = _require.XTInternalError,\n    throwFileTypeNotIdentified = _require.throwFileTypeNotIdentified,\n    throwFileTypeNotHandled = _require.throwFileTypeNotHandled;\n\nvar Docxtemplater = function () {\n\tfunction Docxtemplater() {\n\t\t_classCallCheck(this, Docxtemplater);\n\n\t\tif (arguments.length > 0) {\n\t\t\tthrow new Error(\"The constructor with parameters has been removed in docxtemplater 3.0, please check the upgrade guide.\");\n\t\t}\n\t\tthis.compiled = {};\n\t\tthis.modules = [];\n\t\tthis.setOptions({});\n\t}\n\n\t_createClass(Docxtemplater, [{\n\t\tkey: \"setModules\",\n\t\tvalue: function setModules(obj) {\n\t\t\tthis.modules.forEach(function (module) {\n\t\t\t\tmodule.set(obj);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"sendEvent\",\n\t\tvalue: function sendEvent(eventName) {\n\t\t\tthis.modules.forEach(function (module) {\n\t\t\t\tmodule.on(eventName);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"attachModule\",\n\t\tvalue: function attachModule(module) {\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\tvar prefix = options.prefix;\n\n\t\t\tif (prefix) {\n\t\t\t\tmodule.prefix = prefix;\n\t\t\t}\n\t\t\tthis.modules.push(moduleWrapper(module));\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"setOptions\",\n\t\tvalue: function setOptions(options) {\n\t\t\tvar _this = this;\n\n\t\t\tthis.options = options;\n\t\t\tObject.keys(defaults).forEach(function (key) {\n\t\t\t\tvar defaultValue = defaults[key];\n\t\t\t\t_this[key] = _this.options[key] != null ? _this.options[key] : defaultValue;\n\t\t\t});\n\t\t\tif (this.zip) {\n\t\t\t\tthis.updateFileTypeConfig();\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"loadZip\",\n\t\tvalue: function loadZip(zip) {\n\t\t\tif (zip.loadAsync) {\n\t\t\t\tthrow new XTInternalError(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\");\n\t\t\t}\n\t\t\tthis.zip = zip;\n\t\t\tthis.updateFileTypeConfig();\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"compileFile\",\n\t\tvalue: function compileFile(fileName) {\n\t\t\tvar currentFile = this.createTemplateClass(fileName);\n\t\t\tcurrentFile.parse();\n\t\t\tthis.compiled[fileName] = currentFile;\n\t\t}\n\t}, {\n\t\tkey: \"compile\",\n\t\tvalue: function compile() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (Object.keys(this.compiled).length) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.options.xmlFileNames = [];\n\t\t\tthis.modules = concatArrays([this.fileTypeConfig.baseModules.map(function (moduleFunction) {\n\t\t\t\treturn moduleFunction();\n\t\t\t}), this.modules]);\n\t\t\tthis.options = this.modules.reduce(function (options, module) {\n\t\t\t\treturn module.optionsTransformer(options, _this2);\n\t\t\t}, this.options);\n\t\t\tthis.xmlDocuments = this.options.xmlFileNames.reduce(function (xmlDocuments, fileName) {\n\t\t\t\tvar content = _this2.zip.files[fileName].asText();\n\t\t\t\txmlDocuments[fileName] = str2xml(content);\n\t\t\t\treturn xmlDocuments;\n\t\t\t}, {});\n\t\t\tthis.setModules({ zip: this.zip, xmlDocuments: this.xmlDocuments, data: this.data });\n\t\t\tthis.getTemplatedFiles();\n\t\t\tthis.setModules({ compiled: this.compiled });\n\t\t\t// Loop inside all templatedFiles (ie xml files with content).\n\t\t\t// Sometimes they don't exist (footer.xml for example)\n\t\t\tthis.templatedFiles.forEach(function (fileName) {\n\t\t\t\tif (_this2.zip.files[fileName] != null) {\n\t\t\t\t\t_this2.compileFile(fileName);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"updateFileTypeConfig\",\n\t\tvalue: function updateFileTypeConfig() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar fileTypeIdentifiers = {\n\t\t\t\tdocx: \"word/document.xml\",\n\t\t\t\tpptx: \"ppt/presentation.xml\",\n\t\t\t\todt: \"mimetype\"\n\t\t\t};\n\n\t\t\tvar fileType = Object.keys(fileTypeIdentifiers).reduce(function (fileType, key) {\n\t\t\t\tif (fileType) {\n\t\t\t\t\treturn fileType;\n\t\t\t\t}\n\t\t\t\tif (_this3.zip.files[fileTypeIdentifiers[key]]) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t\treturn fileType;\n\t\t\t}, null);\n\n\t\t\tif (fileType === \"odt\") {\n\t\t\t\tthrowFileTypeNotHandled(fileType);\n\t\t\t}\n\t\t\tif (!fileType) {\n\t\t\t\tthrowFileTypeNotIdentified();\n\t\t\t}\n\t\t\tthis.fileType = fileType;\n\t\t\tthis.fileTypeConfig = this.options.fileTypeConfig || Docxtemplater.FileTypeConfig[this.fileType];\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar _this4 = this;\n\n\t\t\tthis.compile();\n\t\t\tthis.mapper = this.modules.reduce(function (value, module) {\n\t\t\t\treturn module.getRenderedMap(value);\n\t\t\t}, {});\n\n\t\t\tObject.keys(this.mapper).forEach(function (to) {\n\t\t\t\tvar _mapper$to = _this4.mapper[to],\n\t\t\t\t    from = _mapper$to.from,\n\t\t\t\t    data = _mapper$to.data;\n\n\t\t\t\tvar currentFile = _this4.compiled[from];\n\t\t\t\tcurrentFile.setTags(data);\n\t\t\t\tcurrentFile.render(to);\n\t\t\t\t_this4.zip.file(to, currentFile.content, { createFolders: true });\n\t\t\t});\n\t\t\tthis.sendEvent(\"syncing-zip\");\n\t\t\tthis.syncZip();\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"syncZip\",\n\t\tvalue: function syncZip() {\n\t\t\tvar _this5 = this;\n\n\t\t\tObject.keys(this.xmlDocuments).forEach(function (fileName) {\n\t\t\t\t_this5.zip.remove(fileName);\n\t\t\t\tvar content = xml2str(_this5.xmlDocuments[fileName]);\n\t\t\t\treturn _this5.zip.file(fileName, content, { createFolders: true });\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"setData\",\n\t\tvalue: function setData(data) {\n\t\t\tthis.data = data;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: \"getZip\",\n\t\tvalue: function getZip() {\n\t\t\treturn this.zip;\n\t\t}\n\t}, {\n\t\tkey: \"createTemplateClass\",\n\t\tvalue: function createTemplateClass(path) {\n\t\t\tvar usedData = this.zip.files[path].asText();\n\t\t\treturn this.createTemplateClassFromContent(usedData, path);\n\t\t}\n\t}, {\n\t\tkey: \"createTemplateClassFromContent\",\n\t\tvalue: function createTemplateClassFromContent(content, filePath) {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar xmltOptions = {\n\t\t\t\tfilePath: filePath\n\t\t\t};\n\t\t\tObject.keys(defaults).forEach(function (key) {\n\t\t\t\txmltOptions[key] = _this6[key];\n\t\t\t});\n\t\t\txmltOptions.fileTypeConfig = this.fileTypeConfig;\n\t\t\txmltOptions.modules = this.modules;\n\t\t\treturn new Docxtemplater.XmlTemplater(content, xmltOptions);\n\t\t}\n\t}, {\n\t\tkey: \"getFullText\",\n\t\tvalue: function getFullText(path) {\n\t\t\treturn this.createTemplateClass(path || this.fileTypeConfig.textPath).getFullText();\n\t\t}\n\t}, {\n\t\tkey: \"getTemplatedFiles\",\n\t\tvalue: function getTemplatedFiles() {\n\t\t\tthis.templatedFiles = this.fileTypeConfig.getTemplatedFiles(this.zip);\n\t\t\treturn this.templatedFiles;\n\t\t}\n\t}]);\n\n\treturn Docxtemplater;\n}();\n\nDocxtemplater.DocUtils = DocUtils;\nDocxtemplater.Errors = require(\"./errors\");\nDocxtemplater.XmlTemplater = require(\"./xml-templater\");\nDocxtemplater.FileTypeConfig = require(\"./file-type-config\");\nDocxtemplater.XmlMatcher = require(\"./xml-matcher\");\nmodule.exports = Docxtemplater;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"jszip\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/jszip/package.json                                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"jszip\";\nexports.version = \"2.6.1\";\nexports.main = \"./lib/index\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/jszip/lib/index.js                                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n'use strict';\n\nvar base64 = require('./base64');\n\n/**\nUsage:\n   zip = new JSZip();\n   zip.file(\"hello.txt\", \"Hello, World!\").file(\"tempfile\", \"nothing\");\n   zip.folder(\"images\").file(\"smile.gif\", base64Data, {base64: true});\n   zip.file(\"Xmas.txt\", \"Ho ho ho !\", {date : new Date(\"December 25, 2007 00:00:01\")});\n   zip.remove(\"tempfile\");\n\n   base64zip = zip.generate();\n\n**/\n\n/**\n * Representation a of zip file in js\n * @constructor\n * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).\n * @param {Object=} options the options for creating this objects (optional).\n */\nfunction JSZip(data, options) {\n    // if this constructor is used without `new`, it adds `new` before itself:\n    if(!(this instanceof JSZip)) return new JSZip(data, options);\n\n    // object containing the files :\n    // {\n    //   \"folder/\" : {...},\n    //   \"folder/data.txt\" : {...}\n    // }\n    this.files = {};\n\n    this.comment = null;\n\n    // Where we are in the hierarchy\n    this.root = \"\";\n    if (data) {\n        this.load(data, options);\n    }\n    this.clone = function() {\n        var newObj = new JSZip();\n        for (var i in this) {\n            if (typeof this[i] !== \"function\") {\n                newObj[i] = this[i];\n            }\n        }\n        return newObj;\n    };\n}\nJSZip.prototype = require('./object');\nJSZip.prototype.load = require('./load');\nJSZip.support = require('./support');\nJSZip.defaults = require('./defaults');\n\n/**\n * @deprecated\n * This namespace will be removed in a future version without replacement.\n */\nJSZip.utils = require('./deprecatedPublicUtils');\n\nJSZip.base64 = {\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    encode : function(input) {\n        return base64.encode(input);\n    },\n    /**\n     * @deprecated\n     * This method will be removed in a future version without replacement.\n     */\n    decode : function(input) {\n        return base64.decode(input);\n    }\n};\nJSZip.compressions = require('./compressions');\nmodule.exports = JSZip;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"better-unoconv\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/better-unoconv/package.json                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"better-unoconv\";\nexports.version = \"1.0.3\";\nexports.main = \"./index\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/better-unoconv/index.js                                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n'use strict';\n\nvar _ = require('underscore'),\n    childProcess = require('child_process'),\n    mime = require('mime');\n\nvar unoconv = exports = module.exports = {};\n\n/**\n* Convert a document.\n*\n* @param {String} file\n* @param {String} outputFormat\n* @param {Object|Function} options\n* @param {Function} callback\n* @api public\n*/\nunoconv.convert = function(file, outputFormat, options, callback) {\n    var self = this,\n        args,\n        bin = 'unoconv',\n        child,\n        stdout = [],\n        stderr = [];\n\n    if (_.isFunction(options)) {\n        callback = options;\n        options = null;\n    }\n\n    args = [\n        '-f' + outputFormat,\n        '--stdout'\n    ];\n\n    if (options && options.port) {\n        args.push('-p' + options.port)\n    }\n\n    args.push(file);\n\n    if (options && options.bin) {\n        bin = options.bin;\n    }\n\n    child = childProcess.spawn(bin, args);\n\n    child.stdout.on('data', function (data) {\n        stdout.push(data);\n    });\n\n    child.stderr.on('data', function (data) {\n        stderr.push(data);\n    });\n\n    child.on('error', function (err) {\n        return callback(new Error(err));\n    });\n\n    child.on('exit', function () {\n        if (stderr.length) {\n            return callback(new Error(Buffer.concat(stderr).toString()));\n        }\n\n        callback(null, Buffer.concat(stdout));\n    });\n};\n\n/**\n* Start a listener.\n*\n* @param {Object} options\n* @return {ChildProcess}\n* @api public\n*/\nunoconv.listen = function (options) {\n    var self = this,\n        args,\n        bin = 'unoconv';\n\n    args = [ '--listener' ];\n\n    if (options && options.port) {\n        args.push('-p' + options.port);\n    }\n\n    if (options && options.bin) {\n        bin = options.bin;\n    }\n\n    return childProcess.spawn(bin, args);\n};\n\n/**\n* Detect supported conversion formats.\n*\n* @param {Object|Function} options\n* @param {Function} callback\n*/\nunoconv.detectSupportedFormats = function (options, callback) {\n    var self = this,\n        docType,\n        detectedFormats = {\n            document: [],\n            graphics: [],\n            presentation: [],\n            spreadsheet: []\n        },\n        bin = 'unoconv';\n\n    if (_.isFunction(options)) {\n        callback = options;\n        options = null;\n    }\n\n    if (options && options.bin) {\n        bin = options.bin;\n    }\n\n    childProcess.execFile(bin, [ '--show' ], function (err, stdout, stderr) {\n        if (err) {\n            return callback(err);\n        }\n\n        // For some reason --show outputs to stderr instead of stdout\n        var lines = stderr.split('\\n');\n\n        lines.forEach(function (line) {\n            if (line === 'The following list of document formats are currently available:') {\n                docType = 'document';\n            } else if (line === 'The following list of graphics formats are currently available:') {\n                docType = 'graphics';\n            } else if (line === 'The following list of presentation formats are currently available:') {\n                docType = 'presentation';\n            } else if (line === 'The following list of spreadsheet formats are currently available:') {\n                docType = 'spreadsheet';\n            } else {\n                var format = line.match(/^(.*)-/);\n\n                if (format) {\n                    format = format[1].trim();\n                }\n\n                var extension = line.match(/\\[(.*)\\]/);\n\n                if (extension) {\n                    extension = extension[1].trim().replace('.', '');\n                }\n\n                var description = line.match(/-(.*)\\[/);\n\n                if (description) {\n                    description = description[1].trim();\n                }\n\n                if (format && extension && description) {\n                    detectedFormats[docType].push({\n                        'format': format,\n                        'extension': extension,\n                        'description': description,\n                        'mime': mime.lookup(extension)\n                    });\n                }\n            }\n        });\n\n        if (detectedFormats.document.length < 1 &&\n            detectedFormats.graphics.length < 1 &&\n            detectedFormats.presentation.length < 1 &&\n            detectedFormats.spreadsheet.length < 1) {\n            return callback(new Error('Unable to detect supported formats'));\n        }\n\n        callback(null, detectedFormats);\n    });\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fibers\":{\"future.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/fibers/future.js                                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\nvar Fiber = require('./fibers');\nvar util = require('util');\nmodule.exports = Future;\nFunction.prototype.future = function(detach) {\n\tvar fn = this;\n\tvar ret = function() {\n\t\tvar future = new FiberFuture(fn, this, arguments);\n\t\tif (detach) {\n\t\t\tfuture.detach();\n\t\t}\n\t\treturn future;\n\t};\n\tret.toString = function() {\n\t\treturn '<<Future '+ fn+ '.future()>>';\n\t};\n\treturn ret;\n};\n\nfunction Future() {}\n\n/**\n * Run a function(s) in a future context, and return a future to their return value. This is useful\n * for instances where you want a closure to be able to `.wait()`. This also lets you wait for\n * mulitple parallel opertions to run.\n */\nFuture.task = function(fn) {\n\tif (arguments.length === 1) {\n\t\treturn fn.future()();\n\t} else {\n\t\tvar future = new Future, pending = arguments.length, error, values = new Array(arguments.length);\n\t\tfor (var ii = 0; ii < arguments.length; ++ii) {\n\t\t\targuments[ii].future()().resolve(function(ii, err, val) {\n\t\t\t\tif (err) {\n\t\t\t\t\terror = err;\n\t\t\t\t}\n\t\t\t\tvalues[ii] = val;\n\t\t\t\tif (--pending === 0) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tfuture.throw(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfuture.return(values);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(null, ii));\n\t\t}\n\t\treturn future;\n\t}\n};\n\n/**\n * Wrap node-style async functions to instead return futures. This assumes that the last parameter\n * of the function is a callback.\n *\n * If a single function is passed a future-returning function is created. If an object is passed a\n * new object is returned with all functions wrapped.\n *\n * The value that is returned from the invocation of the underlying function is assigned to the\n * property `_` on the future. This is useful for functions like `execFile` which take a callback,\n * but also return meaningful information.\n *\n * `multi` indicates that this callback will return more than 1 argument after `err`. For example,\n * `child_process.exec()`\n *\n * `suffix` will append a string to every method that was overridden, if you pass an object to\n * `Future.wrap()`. Default is 'Future'.\n *\n * var readFileFuture = Future.wrap(require('fs').readFile);\n * var fs = Future.wrap(require('fs'));\n * fs.readFileFuture('example.txt').wait();\n */\nFuture.wrap = function(fnOrObject, multi, suffix, stop) {\n\tif (typeof fnOrObject === 'object') {\n\t\tvar wrapped = Object.create(fnOrObject);\n\t\tfor (var ii in fnOrObject) {\n\t\t\tif (wrapped[ii] instanceof Function) {\n\t\t\t\twrapped[suffix === undefined ? ii+ 'Future' : ii+ suffix] = Future.wrap(wrapped[ii], multi, suffix, stop);\n\t\t\t}\n\t\t}\n\t\treturn wrapped;\n\t} else if (typeof fnOrObject === 'function') {\n\t\tvar fn = function() {\n\t\t\tvar future = new Future;\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tif (multi) {\n\t\t\t\tvar cb = future.resolver();\n\t\t\t\targs.push(function(err) {\n\t\t\t\t\tcb(err, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\targs.push(future.resolver());\n\t\t\t}\n\t\t\tfuture._ = fnOrObject.apply(this, args);\n\t\t\treturn future;\n\t\t}\n\t\t// Modules like `request` return a function that has more functions as properties. Handle this\n\t\t// in some kind of reasonable way.\n\t\tif (!stop) {\n\t\t\tvar proto = Object.create(fnOrObject);\n\t\t\tfor (var ii in fnOrObject) {\n\t\t\t\tif (fnOrObject.hasOwnProperty(ii) && fnOrObject[ii] instanceof Function) {\n\t\t\t\t\tproto[ii] = proto[ii];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfn.__proto__ = Future.wrap(proto, multi, suffix, true);\n\t\t}\n\t\treturn fn;\n\t}\n};\n\n/**\n * Wait on a series of futures and then return. If the futures throw an exception this function\n * /won't/ throw it back. You can get the value of the future by calling get() on it directly. If\n * you want to wait on a single future you're better off calling future.wait() on the instance.\n */\nFuture.wait = function wait(/* ... */) {\n\n\t// Normalize arguments + pull out a FiberFuture for reuse if possible\n\tvar futures = [], singleFiberFuture;\n\tfor (var ii = 0; ii < arguments.length; ++ii) {\n\t\tvar arg = arguments[ii];\n\t\tif (arg instanceof Future) {\n\t\t\t// Ignore already resolved fibers\n\t\t\tif (arg.isResolved()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Look for fiber reuse\n\t\t\tif (!singleFiberFuture && arg instanceof FiberFuture && !arg.started) {\n\t\t\t\tsingleFiberFuture = arg;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfutures.push(arg);\n\t\t} else if (arg instanceof Array) {\n\t\t\tfor (var jj = 0; jj < arg.length; ++jj) {\n\t\t\t\tvar aarg = arg[jj];\n\t\t\t\tif (aarg instanceof Future) {\n\t\t\t\t\t// Ignore already resolved fibers\n\t\t\t\t\tif (aarg.isResolved()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// Look for fiber reuse\n\t\t\t\t\tif (!singleFiberFuture && aarg instanceof FiberFuture && !aarg.started) {\n\t\t\t\t\t\tsingleFiberFuture = aarg;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfutures.push(aarg);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(aarg+ ' is not a future');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(arg+ ' is not a future');\n\t\t}\n\t}\n\n\t// Resumes current fiber\n\tvar fiber = Fiber.current;\n\tif (!fiber) {\n\t\tthrow new Error('Can\\'t wait without a fiber');\n\t}\n\n\t// Resolve all futures\n\tvar pending = futures.length + (singleFiberFuture ? 1 : 0);\n\tfunction cb() {\n\t\tif (!--pending) {\n\t\t\tfiber.run();\n\t\t}\n\t}\n\tfor (var ii = 0; ii < futures.length; ++ii) {\n\t\tfutures[ii].resolve(cb);\n\t}\n\n\t// Reusing a fiber?\n\tif (singleFiberFuture) {\n\t\tsingleFiberFuture.started = true;\n\t\ttry {\n\t\t\tsingleFiberFuture.return(\n\t\t\t\tsingleFiberFuture.fn.apply(singleFiberFuture.context, singleFiberFuture.args));\n\t\t} catch(e) {\n\t\t\tsingleFiberFuture.throw(e);\n\t\t}\n\t\t--pending;\n\t}\n\n\t// Yield this fiber\n\tif (pending) {\n\t\tFiber.yield();\n\t}\n};\n\n/**\n * Return a Future that waits on an ES6 Promise.\n */\nFuture.fromPromise = function(promise) {\n\tvar future = new Future;\n\tpromise.then(function(val) {\n\t\tfuture.return(val);\n\t}, function(err) {\n\t\tfuture.throw(err);\n\t});\n\treturn future;\n};\n\nFuture.prototype = {\n\t/**\n\t * Return the value of this future. If the future hasn't resolved yet this will throw an error.\n\t */\n\tget: function() {\n\t\tif (!this.resolved) {\n\t\t\tthrow new Error('Future must resolve before value is ready');\n\t\t} else if (this.error) {\n\t\t\t// Link the stack traces up\n\t\t\tvar error = this.error;\n\t\t\tvar localStack = {};\n\t\t\tError.captureStackTrace(localStack, Future.prototype.get);\n\t\t\tvar futureStack = Object.getOwnPropertyDescriptor(error, 'futureStack');\n\t\t\tif (!futureStack) {\n\t\t\t\tfutureStack = Object.getOwnPropertyDescriptor(error, 'stack');\n\t\t\t\tif (futureStack) {\n\t\t\t\t\tObject.defineProperty(error, 'futureStack', futureStack);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (futureStack && futureStack.get) {\n\t\t\t\tObject.defineProperty(error, 'stack', {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tvar stack = futureStack.get.apply(error);\n\t\t\t\t\t\tif (stack) {\n\t\t\t\t\t\t\tstack = stack.split('\\n');\n\t\t\t\t\t\t\treturn [stack[0]]\n\t\t\t\t\t\t\t\t.concat(localStack.stack.split('\\n').slice(1))\n\t\t\t\t\t\t\t\t.concat('    - - - - -')\n\t\t\t\t\t\t\t\t.concat(stack.slice(1))\n\t\t\t\t\t\t\t\t.join('\\n');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn localStack.stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function(stack) {\n\t\t\t\t\t\tObject.defineProperty(error, 'stack', {\n\t\t\t\t\t\t\tvalue: stack,\n\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn this.value;\n\t\t}\n\t},\n\n\t/**\n\t * Mark this future as returned. All pending callbacks will be invoked immediately.\n\t */\n\t\"return\": function(value) {\n\t\tif (this.resolved) {\n\t\t\tthrow new Error('Future resolved more than once');\n\t\t}\n\t\tthis.value = value;\n\t\tthis.resolved = true;\n\n\t\tvar callbacks = this.callbacks;\n\t\tif (callbacks) {\n\t\t\tdelete this.callbacks;\n\t\t\tfor (var ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\ttry {\n\t\t\t\t\tvar ref = callbacks[ii];\n\t\t\t\t\tif (ref[1]) {\n\t\t\t\t\t\tref[1](value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref[0](undefined, value);\n\t\t\t\t\t}\n\t\t\t\t} catch(ex) {\n\t\t\t\t\t// console.log('Resolve cb threw', String(ex.stack || ex.message || ex));\n\t\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\t\tthrow(ex);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Throw from this future as returned. All pending callbacks will be invoked immediately.\n\t */\n\t\"throw\": function(error) {\n\t\tif (this.resolved) {\n\t\t\tthrow new Error('Future resolved more than once');\n\t\t} else if (!error) {\n\t\t\tthrow new Error('Must throw non-empty error');\n\t\t}\n\t\tthis.error = error;\n\t\tthis.resolved = true;\n\n\t\tvar callbacks = this.callbacks;\n\t\tif (callbacks) {\n\t\t\tdelete this.callbacks;\n\t\t\tfor (var ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\ttry {\n\t\t\t\t\tvar ref = callbacks[ii];\n\t\t\t\t\tif (ref[1]) {\n\t\t\t\t\t\tref[0].throw(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref[0](error);\n\t\t\t\t\t}\n\t\t\t\t} catch(ex) {\n\t\t\t\t\t// console.log('Resolve cb threw', String(ex.stack || ex.message || ex));\n\t\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\t\tthrow(ex);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * \"detach\" this future. Basically this is useful if you want to run a task in a future, you\n\t * aren't interested in its return value, but if it throws you don't want the exception to be\n\t * lost. If this fiber throws, an exception will be thrown to the event loop and node will\n\t * probably fall down.\n\t */\n\tdetach: function() {\n\t\tthis.resolve(function(err) {\n\t\t\tif (err) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Returns whether or not this future has resolved yet.\n\t */\n\tisResolved: function() {\n\t\treturn this.resolved === true;\n\t},\n\n\t/**\n\t * Returns a node-style function which will mark this future as resolved when called.\n\t */\n\tresolver: function() {\n\t\treturn function(err, val) {\n\t\t\tif (err) {\n\t\t\t\tthis.throw(err);\n\t\t\t} else {\n\t\t\t\tthis.return(val);\n\t\t\t}\n\t\t}.bind(this);\n\t},\n\n\t/**\n\t * Waits for this future to resolve and then invokes a callback.\n\t *\n\t * If two arguments are passed, the first argument is a future which will be thrown to in the case\n\t * of error, and the second is a function(val){} callback.\n\t *\n\t * If only one argument is passed it is a standard function(err, val){} callback.\n\t */\n\tresolve: function(arg1, arg2) {\n\t\tif (this.resolved) {\n\t\t\tif (arg2) {\n\t\t\t\tif (this.error) {\n\t\t\t\t\targ1.throw(this.error);\n\t\t\t\t} else {\n\t\t\t\t\targ2(this.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\targ1(this.error, this.value);\n\t\t\t}\n\t\t} else {\n\t\t\t(this.callbacks = this.callbacks || []).push([arg1, arg2]);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/**\n\t * Resolve only in the case of success\n\t */\n\tresolveSuccess: function(cb) {\n\t\tthis.resolve(function(err, val) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcb(val);\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Propogate results to another future.\n\t */\n\tproxy: function(future) {\n\t\tthis.resolve(function(err, val) {\n\t\t\tif (err) {\n\t\t\t\tfuture.throw(err);\n\t\t\t} else {\n\t\t\t\tfuture.return(val);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Propogate only errors to an another future or array of futures.\n\t */\n\tproxyErrors: function(futures) {\n\t\tthis.resolve(function(err) {\n\t\t\tif (!err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (futures instanceof Array) {\n\t\t\t\tfor (var ii = 0; ii < futures.length; ++ii) {\n\t\t\t\t\tfutures[ii].throw(err);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfutures.throw(err);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns an ES6 Promise\n\t */\n\tpromise: function() {\n\t\tvar that = this;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tthat.resolve(function(err, val) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(val);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Differs from its functional counterpart in that it actually resolves the future. Thus if the\n\t * future threw, future.wait() will throw.\n\t */\n\twait: function() {\n\t\tif (this.isResolved()) {\n\t\t\treturn this.get();\n\t\t}\n\t\tFuture.wait(this);\n\t\treturn this.get();\n\t},\n};\n\n/**\n * A function call which loads inside a fiber automatically and returns a future.\n */\nfunction FiberFuture(fn, context, args) {\n\tthis.fn = fn;\n\tthis.context = context;\n\tthis.args = args;\n\tthis.started = false;\n\tvar that = this;\n\tprocess.nextTick(function() {\n\t\tif (!that.started) {\n\t\t\tthat.started = true;\n\t\t\tFiber(function() {\n\t\t\t\ttry {\n\t\t\t\t\tthat.return(fn.apply(context, args));\n\t\t\t\t} catch(e) {\n\t\t\t\t\tthat.throw(e);\n\t\t\t\t}\n\t\t\t}).run();\n\t\t}\n\t});\n}\nutil.inherits(FiberFuture, Future);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/fibers/package.json                                                                               //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"fibers\";\nexports.version = \"2.0.0\";\nexports.main = \"fibers\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fibers.js\":function(require,exports,module,__filename,__dirname){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/fibers/fibers.js                                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nif (process.fiberLib) {\n\tmodule.exports = process.fiberLib;\n} else {\n\tvar fs = require('fs'), path = require('path');\n\n\t// Seed random numbers [gh-82]\n\tMath.random();\n\n\t// Look for binary for this platform\n\tvar modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch+ '-'+ process.versions.modules, 'fibers');\n\ttry {\n\t\tfs.statSync(modPath+ '.node');\n\t} catch (ex) {\n\t\t// No binary!\n\t\tconsole.error(\n\t\t\t'## There is an issue with `node-fibers` ##\\n'+\n\t\t\t'`'+ modPath+ '.node` is missing.\\n\\n'+\n\t\t\t'Try running this to fix the issue: '+ process.execPath+ ' '+ __dirname.replace(' ', '\\\\ ')+ '/build'\n\t\t);\n\t\tthrow new Error('Missing binary. See message above.');\n\t}\n\n\t// Pull in fibers implementation\n\tprocess.fiberLib = module.exports = require(modPath).Fiber;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"babel-runtime\":{\"regenerator\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/babel-runtime/regenerator/index.js                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nmodule.exports = require(\"regenerator-runtime\");\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"helpers\":{\"typeof.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/babel-runtime/helpers/typeof.js                                                                   //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"classCallCheck.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/babel-runtime/helpers/classCallCheck.js                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"possibleConstructorReturn.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/babel-runtime/helpers/possibleConstructorReturn.js                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inherits.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/babel-runtime/helpers/inherits.js                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"bcrypt\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/bcrypt/package.json                                                                               //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"bcrypt\";\nexports.version = \"1.0.3\";\nexports.main = \"./bcrypt\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"bcrypt.js\":function(require,exports,module,__filename,__dirname){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/bcrypt/bcrypt.js                                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n'use strict';\n\nvar binary = require('node-pre-gyp');\nvar path = require('path');\nvar binding_path = binary.find(path.resolve(path.join(__dirname, './package.json')));\nvar bindings = require(binding_path);\n\nvar crypto = require('crypto');\n\nvar promises = require('./lib/promises');\n\n/// generate a salt (sync)\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @return {String} salt\nmodule.exports.genSaltSync = function genSaltSync(rounds) {\n    // default 10 rounds\n    if (!rounds) {\n        rounds = 10;\n    } else if (typeof rounds !== 'number') {\n        throw new Error('rounds must be a number');\n    }\n\n    return bindings.gen_salt_sync(rounds, crypto.randomBytes(16));\n};\n\n/// generate a salt\n/// @param {Number} [rounds] number of rounds (default 10)\n/// @param {Function} cb callback(err, salt)\nmodule.exports.genSalt = function genSalt(rounds, ignore, cb) {\n    // if callback is first argument, then use defaults for others\n    if (typeof arguments[0] === 'function') {\n        // have to set callback first otherwise arguments are overriden\n        cb = arguments[0];\n        rounds = 10;\n    // callback is second argument\n    } else if (typeof arguments[1] === 'function') {\n        // have to set callback first otherwise arguments are overriden\n        cb = arguments[1];\n    }\n\n    if (!cb) {\n        return promises.promise(genSalt, this, [rounds, ignore]);\n    }\n\n    // default 10 rounds\n    if (!rounds) {\n        rounds = 10;\n    } else if (typeof rounds !== 'number') {\n        // callback error asynchronously\n        return process.nextTick(function() {\n            cb(new Error('rounds must be a number'));\n        });\n    }\n\n    crypto.randomBytes(16, function(error, randomBytes) {\n        if (error) {\n            cb(error);\n            return;\n        }\n\n        bindings.gen_salt(rounds, randomBytes, cb);\n    });\n};\n\n/// hash data using a salt\n/// @param {String} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @return {String} hash\nmodule.exports.hashSync = function hashSync(data, salt) {\n    if (data == null || salt == null) {\n        throw new Error('data and salt arguments required');\n    }\n\n    if (typeof data !== 'string' || (typeof salt !== 'string' && typeof salt !== 'number')) {\n        throw new Error('data must be a string and salt must either be a salt string or a number of rounds');\n    }\n\n    if (typeof salt === 'number') {\n        salt = module.exports.genSaltSync(salt);\n    }\n\n    return bindings.encrypt_sync(data, salt);\n};\n\n/// hash data using a salt\n/// @param {String} data the data to encrypt\n/// @param {String} salt the salt to use when hashing\n/// @param {Function} cb callback(err, hash)\nmodule.exports.hash = function hash(data, salt, cb) {\n    if (typeof data === 'function') {\n        return process.nextTick(function() {\n            data(new Error('data must be a string and salt must either be a salt string or a number of rounds'));\n        });\n    }\n\n    if (typeof salt === 'function') {\n        return process.nextTick(function() {\n            salt(new Error('data must be a string and salt must either be a salt string or a number of rounds'));\n        });\n    }\n\n    // cb exists but is not a function\n    // return a rejecting promise\n    if (cb && typeof cb !== 'function') {\n        return promises.reject(new Error('cb must be a function or null to return a Promise'));\n    }\n\n    if (!cb) {\n        return promises.promise(hash, this, [data, salt]);\n    }\n\n    if (data == null || salt == null) {\n        return process.nextTick(function() {\n            cb(new Error('data and salt arguments required'));\n        });\n    }\n\n    if (typeof data !== 'string' || (typeof salt !== 'string' && typeof salt !== 'number')) {\n        return process.nextTick(function() {\n            cb(new Error('data must be a string and salt must either be a salt string or a number of rounds'));\n        });\n    }\n\n\n    if (typeof salt === 'number') {\n        return module.exports.genSalt(salt, function(err, salt) {\n            return bindings.encrypt(data, salt, cb);\n        });\n    }\n\n    return bindings.encrypt(data, salt, cb);\n};\n\n/// compare raw data to hash\n/// @param {String} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @return {bool} true if hashed data matches hash\nmodule.exports.compareSync = function compareSync(data, hash) {\n    if (data == null || hash == null) {\n        throw new Error('data and hash arguments required');\n    }\n\n    if (typeof data !== 'string' || typeof hash !== 'string') {\n        throw new Error('data and hash must be strings');\n    }\n\n    return bindings.compare_sync(data, hash);\n};\n\n/// compare raw data to hash\n/// @param {String} data the data to hash and compare\n/// @param {String} hash expected hash\n/// @param {Function} cb callback(err, matched) - matched is true if hashed data matches hash\nmodule.exports.compare = function compare(data, hash, cb) {\n    if (typeof data === 'function') {\n        return process.nextTick(function() {\n            data(new Error('data and hash arguments required'));\n        });\n    }\n\n    if (typeof hash === 'function') {\n        return process.nextTick(function() {\n            hash(new Error('data and hash arguments required'));\n        });\n    }\n\n    // cb exists but is not a function\n    // return a rejecting promise\n    if (cb && typeof cb !== 'function') {\n        return promises.reject(new Error('cb must be a function or null to return a Promise'));\n    }\n\n    if (!cb) {\n        return promises.promise(compare, this, [data, hash]);\n    }\n\n    if (data == null || hash == null) {\n        return process.nextTick(function() {\n            cb(new Error('data and hash arguments required'));\n        });\n    }\n\n    if (typeof data !== 'string' || typeof hash !== 'string') {\n        return process.nextTick(function() {\n            cb(new Error('data and hash must be strings'));\n        });\n    }\n\n    return bindings.compare(data, hash, cb);\n};\n\n/// @param {String} hash extract rounds from this hash\n/// @return {Number} the number of rounds used to encrypt a given hash\nmodule.exports.getRounds = function getRounds(hash) {\n    if (hash == null) {\n        throw new Error('hash argument required');\n    }\n\n    if (typeof hash !== 'string') {\n        throw new Error('hash must be a string');\n    }\n\n    return bindings.get_rounds(hash);\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"underscore\":{\"package.json\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/underscore/package.json                                                                           //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.name = \"underscore\";\nexports.version = \"1.4.4\";\nexports.main = \"underscore.js\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"underscore.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// node_modules/underscore/underscore.js                                                                          //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/modules/server.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.modules = exports, {\n  meteorInstall: meteorInstall,\n  Buffer: Buffer,\n  process: process\n});\n\n})();\n","servePath":"/packages/modules.js"}]