[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/angular_angular-cookies/angular-cookies.js                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n/**                                                                                                            // 1\n * @license AngularJS v1.5.3                                                                                   // 2\n * (c) 2010-2016 Google, Inc. http://angularjs.org                                                             // 3\n * License: MIT                                                                                                // 4\n */                                                                                                            // 5\n(function(window, angular, undefined) {'use strict';                                                           // 6\n                                                                                                               // 7\n/**                                                                                                            // 8\n * @ngdoc module                                                                                               // 9\n * @name ngCookies                                                                                             // 10\n * @description                                                                                                // 11\n *                                                                                                             // 12\n * # ngCookies                                                                                                 // 13\n *                                                                                                             // 14\n * The `ngCookies` module provides a convenient wrapper for reading and writing browser cookies.               // 15\n *                                                                                                             // 16\n *                                                                                                             // 17\n * <div doc-module-components=\"ngCookies\"></div>                                                               // 18\n *                                                                                                             // 19\n * See {@link ngCookies.$cookies `$cookies`} for usage.                                                        // 20\n */                                                                                                            // 21\n                                                                                                               // 22\n                                                                                                               // 23\nangular.module('ngCookies', ['ng']).                                                                           // 24\n  /**                                                                                                          // 25\n   * @ngdoc provider                                                                                           // 26\n   * @name $cookiesProvider                                                                                    // 27\n   * @description                                                                                              // 28\n   * Use `$cookiesProvider` to change the default behavior of the {@link ngCookies.$cookies $cookies} service.\n   * */                                                                                                        // 30\n   provider('$cookies', [function $CookiesProvider() {                                                         // 31\n    /**                                                                                                        // 32\n     * @ngdoc property                                                                                         // 33\n     * @name $cookiesProvider#defaults                                                                         // 34\n     * @description                                                                                            // 35\n     *                                                                                                         // 36\n     * Object containing default options to pass when setting cookies.                                         // 37\n     *                                                                                                         // 38\n     * The object may have following properties:                                                               // 39\n     *                                                                                                         // 40\n     * - **path** - `{string}` - The cookie will be available only for this path and its                       // 41\n     *   sub-paths. By default, this is the URL that appears in your `<base>` tag.                             // 42\n     * - **domain** - `{string}` - The cookie will be available only for this domain and                       // 43\n     *   its sub-domains. For security reasons the user agent will not accept the cookie                       // 44\n     *   if the current domain is not a sub-domain of this domain or equal to it.                              // 45\n     * - **expires** - `{string|Date}` - String of the form \"Wdy, DD Mon YYYY HH:MM:SS GMT\"                    // 46\n     *   or a Date object indicating the exact date/time this cookie will expire.                              // 47\n     * - **secure** - `{boolean}` - If `true`, then the cookie will only be available through a                // 48\n     *   secured connection.                                                                                   // 49\n     *                                                                                                         // 50\n     * Note: By default, the address that appears in your `<base>` tag will be used as the path.               // 51\n     * This is important so that cookies will be visible for all routes when html5mode is enabled.             // 52\n     *                                                                                                         // 53\n     **/                                                                                                       // 54\n    var defaults = this.defaults = {};                                                                         // 55\n                                                                                                               // 56\n    function calcOptions(options) {                                                                            // 57\n      return options ? angular.extend({}, defaults, options) : defaults;                                       // 58\n    }                                                                                                          // 59\n                                                                                                               // 60\n    /**                                                                                                        // 61\n     * @ngdoc service                                                                                          // 62\n     * @name $cookies                                                                                          // 63\n     *                                                                                                         // 64\n     * @description                                                                                            // 65\n     * Provides read/write access to browser's cookies.                                                        // 66\n     *                                                                                                         // 67\n     * <div class=\"alert alert-info\">                                                                          // 68\n     * Up until Angular 1.3, `$cookies` exposed properties that represented the                                // 69\n     * current browser cookie values. In version 1.4, this behavior has changed, and                           // 70\n     * `$cookies` now provides a standard api of getters, setters etc.                                         // 71\n     * </div>                                                                                                  // 72\n     *                                                                                                         // 73\n     * Requires the {@link ngCookies `ngCookies`} module to be installed.                                      // 74\n     *                                                                                                         // 75\n     * @example                                                                                                // 76\n     *                                                                                                         // 77\n     * ```js                                                                                                   // 78\n     * angular.module('cookiesExample', ['ngCookies'])                                                         // 79\n     *   .controller('ExampleController', ['$cookies', function($cookies) {                                    // 80\n     *     // Retrieving a cookie                                                                              // 81\n     *     var favoriteCookie = $cookies.get('myFavorite');                                                    // 82\n     *     // Setting a cookie                                                                                 // 83\n     *     $cookies.put('myFavorite', 'oatmeal');                                                              // 84\n     *   }]);                                                                                                  // 85\n     * ```                                                                                                     // 86\n     */                                                                                                        // 87\n    this.$get = ['$$cookieReader', '$$cookieWriter', function($$cookieReader, $$cookieWriter) {                // 88\n      return {                                                                                                 // 89\n        /**                                                                                                    // 90\n         * @ngdoc method                                                                                       // 91\n         * @name $cookies#get                                                                                  // 92\n         *                                                                                                     // 93\n         * @description                                                                                        // 94\n         * Returns the value of given cookie key                                                               // 95\n         *                                                                                                     // 96\n         * @param {string} key Id to use for lookup.                                                           // 97\n         * @returns {string} Raw cookie value.                                                                 // 98\n         */                                                                                                    // 99\n        get: function(key) {                                                                                   // 100\n          return $$cookieReader()[key];                                                                        // 101\n        },                                                                                                     // 102\n                                                                                                               // 103\n        /**                                                                                                    // 104\n         * @ngdoc method                                                                                       // 105\n         * @name $cookies#getObject                                                                            // 106\n         *                                                                                                     // 107\n         * @description                                                                                        // 108\n         * Returns the deserialized value of given cookie key                                                  // 109\n         *                                                                                                     // 110\n         * @param {string} key Id to use for lookup.                                                           // 111\n         * @returns {Object} Deserialized cookie value.                                                        // 112\n         */                                                                                                    // 113\n        getObject: function(key) {                                                                             // 114\n          var value = this.get(key);                                                                           // 115\n          return value ? angular.fromJson(value) : value;                                                      // 116\n        },                                                                                                     // 117\n                                                                                                               // 118\n        /**                                                                                                    // 119\n         * @ngdoc method                                                                                       // 120\n         * @name $cookies#getAll                                                                               // 121\n         *                                                                                                     // 122\n         * @description                                                                                        // 123\n         * Returns a key value object with all the cookies                                                     // 124\n         *                                                                                                     // 125\n         * @returns {Object} All cookies                                                                       // 126\n         */                                                                                                    // 127\n        getAll: function() {                                                                                   // 128\n          return $$cookieReader();                                                                             // 129\n        },                                                                                                     // 130\n                                                                                                               // 131\n        /**                                                                                                    // 132\n         * @ngdoc method                                                                                       // 133\n         * @name $cookies#put                                                                                  // 134\n         *                                                                                                     // 135\n         * @description                                                                                        // 136\n         * Sets a value for given cookie key                                                                   // 137\n         *                                                                                                     // 138\n         * @param {string} key Id for the `value`.                                                             // 139\n         * @param {string} value Raw value to be stored.                                                       // 140\n         * @param {Object=} options Options object.                                                            // 141\n         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}                        // 142\n         */                                                                                                    // 143\n        put: function(key, value, options) {                                                                   // 144\n          $$cookieWriter(key, value, calcOptions(options));                                                    // 145\n        },                                                                                                     // 146\n                                                                                                               // 147\n        /**                                                                                                    // 148\n         * @ngdoc method                                                                                       // 149\n         * @name $cookies#putObject                                                                            // 150\n         *                                                                                                     // 151\n         * @description                                                                                        // 152\n         * Serializes and sets a value for given cookie key                                                    // 153\n         *                                                                                                     // 154\n         * @param {string} key Id for the `value`.                                                             // 155\n         * @param {Object} value Value to be stored.                                                           // 156\n         * @param {Object=} options Options object.                                                            // 157\n         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}                        // 158\n         */                                                                                                    // 159\n        putObject: function(key, value, options) {                                                             // 160\n          this.put(key, angular.toJson(value), options);                                                       // 161\n        },                                                                                                     // 162\n                                                                                                               // 163\n        /**                                                                                                    // 164\n         * @ngdoc method                                                                                       // 165\n         * @name $cookies#remove                                                                               // 166\n         *                                                                                                     // 167\n         * @description                                                                                        // 168\n         * Remove given cookie                                                                                 // 169\n         *                                                                                                     // 170\n         * @param {string} key Id of the key-value pair to delete.                                             // 171\n         * @param {Object=} options Options object.                                                            // 172\n         *    See {@link ngCookies.$cookiesProvider#defaults $cookiesProvider.defaults}                        // 173\n         */                                                                                                    // 174\n        remove: function(key, options) {                                                                       // 175\n          $$cookieWriter(key, undefined, calcOptions(options));                                                // 176\n        }                                                                                                      // 177\n      };                                                                                                       // 178\n    }];                                                                                                        // 179\n  }]);                                                                                                         // 180\n                                                                                                               // 181\nangular.module('ngCookies').                                                                                   // 182\n/**                                                                                                            // 183\n * @ngdoc service                                                                                              // 184\n * @name $cookieStore                                                                                          // 185\n * @deprecated                                                                                                 // 186\n * @requires $cookies                                                                                          // 187\n *                                                                                                             // 188\n * @description                                                                                                // 189\n * Provides a key-value (string-object) storage, that is backed by session cookies.                            // 190\n * Objects put or retrieved from this storage are automatically serialized or                                  // 191\n * deserialized by angular's toJson/fromJson.                                                                  // 192\n *                                                                                                             // 193\n * Requires the {@link ngCookies `ngCookies`} module to be installed.                                          // 194\n *                                                                                                             // 195\n * <div class=\"alert alert-danger\">                                                                            // 196\n * **Note:** The $cookieStore service is **deprecated**.                                                       // 197\n * Please use the {@link ngCookies.$cookies `$cookies`} service instead.                                       // 198\n * </div>                                                                                                      // 199\n *                                                                                                             // 200\n * @example                                                                                                    // 201\n *                                                                                                             // 202\n * ```js                                                                                                       // 203\n * angular.module('cookieStoreExample', ['ngCookies'])                                                         // 204\n *   .controller('ExampleController', ['$cookieStore', function($cookieStore) {                                // 205\n *     // Put cookie                                                                                           // 206\n *     $cookieStore.put('myFavorite','oatmeal');                                                               // 207\n *     // Get cookie                                                                                           // 208\n *     var favoriteCookie = $cookieStore.get('myFavorite');                                                    // 209\n *     // Removing a cookie                                                                                    // 210\n *     $cookieStore.remove('myFavorite');                                                                      // 211\n *   }]);                                                                                                      // 212\n * ```                                                                                                         // 213\n */                                                                                                            // 214\n factory('$cookieStore', ['$cookies', function($cookies) {                                                     // 215\n                                                                                                               // 216\n    return {                                                                                                   // 217\n      /**                                                                                                      // 218\n       * @ngdoc method                                                                                         // 219\n       * @name $cookieStore#get                                                                                // 220\n       *                                                                                                       // 221\n       * @description                                                                                          // 222\n       * Returns the value of given cookie key                                                                 // 223\n       *                                                                                                       // 224\n       * @param {string} key Id to use for lookup.                                                             // 225\n       * @returns {Object} Deserialized cookie value, undefined if the cookie does not exist.                  // 226\n       */                                                                                                      // 227\n      get: function(key) {                                                                                     // 228\n        return $cookies.getObject(key);                                                                        // 229\n      },                                                                                                       // 230\n                                                                                                               // 231\n      /**                                                                                                      // 232\n       * @ngdoc method                                                                                         // 233\n       * @name $cookieStore#put                                                                                // 234\n       *                                                                                                       // 235\n       * @description                                                                                          // 236\n       * Sets a value for given cookie key                                                                     // 237\n       *                                                                                                       // 238\n       * @param {string} key Id for the `value`.                                                               // 239\n       * @param {Object} value Value to be stored.                                                             // 240\n       */                                                                                                      // 241\n      put: function(key, value) {                                                                              // 242\n        $cookies.putObject(key, value);                                                                        // 243\n      },                                                                                                       // 244\n                                                                                                               // 245\n      /**                                                                                                      // 246\n       * @ngdoc method                                                                                         // 247\n       * @name $cookieStore#remove                                                                             // 248\n       *                                                                                                       // 249\n       * @description                                                                                          // 250\n       * Remove given cookie                                                                                   // 251\n       *                                                                                                       // 252\n       * @param {string} key Id of the key-value pair to delete.                                               // 253\n       */                                                                                                      // 254\n      remove: function(key) {                                                                                  // 255\n        $cookies.remove(key);                                                                                  // 256\n      }                                                                                                        // 257\n    };                                                                                                         // 258\n                                                                                                               // 259\n  }]);                                                                                                         // 260\n                                                                                                               // 261\n/**                                                                                                            // 262\n * @name $$cookieWriter                                                                                        // 263\n * @requires $document                                                                                         // 264\n *                                                                                                             // 265\n * @description                                                                                                // 266\n * This is a private service for writing cookies                                                               // 267\n *                                                                                                             // 268\n * @param {string} name Cookie name                                                                            // 269\n * @param {string=} value Cookie value (if undefined, cookie will be deleted)                                  // 270\n * @param {Object=} options Object with options that need to be stored for the cookie.                         // 271\n */                                                                                                            // 272\nfunction $$CookieWriter($document, $log, $browser) {                                                           // 273\n  var cookiePath = $browser.baseHref();                                                                        // 274\n  var rawDocument = $document[0];                                                                              // 275\n                                                                                                               // 276\n  function buildCookieString(name, value, options) {                                                           // 277\n    var path, expires;                                                                                         // 278\n    options = options || {};                                                                                   // 279\n    expires = options.expires;                                                                                 // 280\n    path = angular.isDefined(options.path) ? options.path : cookiePath;                                        // 281\n    if (angular.isUndefined(value)) {                                                                          // 282\n      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';                                                               // 283\n      value = '';                                                                                              // 284\n    }                                                                                                          // 285\n    if (angular.isString(expires)) {                                                                           // 286\n      expires = new Date(expires);                                                                             // 287\n    }                                                                                                          // 288\n                                                                                                               // 289\n    var str = encodeURIComponent(name) + '=' + encodeURIComponent(value);                                      // 290\n    str += path ? ';path=' + path : '';                                                                        // 291\n    str += options.domain ? ';domain=' + options.domain : '';                                                  // 292\n    str += expires ? ';expires=' + expires.toUTCString() : '';                                                 // 293\n    str += options.secure ? ';secure' : '';                                                                    // 294\n                                                                                                               // 295\n    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:                                  // 296\n    // - 300 cookies                                                                                           // 297\n    // - 20 cookies per unique domain                                                                          // 298\n    // - 4096 bytes per cookie                                                                                 // 299\n    var cookieLength = str.length + 1;                                                                         // 300\n    if (cookieLength > 4096) {                                                                                 // 301\n      $log.warn(\"Cookie '\" + name +                                                                            // 302\n        \"' possibly not set or overflowed because it was too large (\" +                                        // 303\n        cookieLength + \" > 4096 bytes)!\");                                                                     // 304\n    }                                                                                                          // 305\n                                                                                                               // 306\n    return str;                                                                                                // 307\n  }                                                                                                            // 308\n                                                                                                               // 309\n  return function(name, value, options) {                                                                      // 310\n    rawDocument.cookie = buildCookieString(name, value, options);                                              // 311\n  };                                                                                                           // 312\n}                                                                                                              // 313\n                                                                                                               // 314\n$$CookieWriter.$inject = ['$document', '$log', '$browser'];                                                    // 315\n                                                                                                               // 316\nangular.module('ngCookies').provider('$$cookieWriter', function $$CookieWriterProvider() {                     // 317\n  this.$get = $$CookieWriter;                                                                                  // 318\n});                                                                                                            // 319\n                                                                                                               // 320\n                                                                                                               // 321\n})(window, window.angular);                                                                                    // 322\n                                                                                                               // 323\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['angular:angular-cookies'] = {};\n\n})();\n","servePath":"/packages/angular_angular-cookies.js"}]