[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/rshashkov_angular-meteor-breadcrumb/packages/rshashkov_angular-meteor-breadcrumb.js                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n(function () {                                                                                                       // 1\n                                                                                                                     // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                                            //     // 4\n// packages/rshashkov:angular-meteor-breadcrumb/src/angular-breadcrumb.js                                     //     // 5\n//                                                                                                            //     // 6\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                              //     // 8\n/*! angular-breadcrumb - v0.4.0-dev-2015-08-07                                                                // 1   // 9\n * http://ncuillery.github.io/angular-breadcrumb                                                              // 2   // 10\n * Copyright (c) 2015 Nicolas Cuillery; Licensed MIT */                                                       // 3   // 11\n                                                                                                              // 4   // 12\n(function(window, angular, undefined) {                                                                       // 5   // 13\n\t'use strict';                                                                                                // 6   // 14\n                                                                                                              // 7   // 15\n\tfunction isAOlderThanB(scopeA, scopeB) {                                                                     // 8   // 16\n\t\tif(angular.equals(scopeA.length, scopeB.length)) {                                                          // 9   // 17\n\t\t\treturn scopeA > scopeB;                                                                                    // 10  // 18\n\t\t} else {                                                                                                    // 11  // 19\n\t\t\treturn scopeA.length > scopeB.length;                                                                      // 12  // 20\n\t\t}                                                                                                           // 13  // 21\n\t}                                                                                                            // 14  // 22\n                                                                                                              // 15  // 23\n\tfunction parseStateRef(ref) {                                                                                // 16  // 24\n\t\tvar parsed = ref.replace(/\\n/g, \" \").match(/^([^(]+?)\\s*(\\((.*)\\))?$/);                                     // 17  // 25\n\t\tif(!parsed || parsed.length !== 4) {                                                                        // 18  // 26\n\t\t\tthrow new Error(\"Invalid state ref '\" + ref + \"'\");                                                        // 19  // 27\n\t\t}                                                                                                           // 20  // 28\n\t\treturn {                                                                                                    // 21  // 29\n\t\t\tstate: parsed[1],                                                                                          // 22  // 30\n\t\t\tparamExpr: parsed[3] || null                                                                               // 23  // 31\n\t\t};                                                                                                          // 24  // 32\n\t}                                                                                                            // 25  // 33\n                                                                                                              // 26  // 34\n\tfunction $Breadcrumb() {                                                                                     // 27  // 35\n                                                                                                              // 28  // 36\n\t\tvar $$options = {                                                                                           // 29  // 37\n\t\t\tprefixStateName: null,                                                                                     // 30  // 38\n\t\t\ttemplate: 'bootstrap3',                                                                                    // 31  // 39\n\t\t\ttemplateUrl: null,                                                                                         // 32  // 40\n\t\t\tincludeAbstract: false                                                                                     // 33  // 41\n\t\t};                                                                                                          // 34  // 42\n                                                                                                              // 35  // 43\n\t\tthis.setOptions = function(options) {                                                                       // 36  // 44\n\t\t\tangular.extend($$options, options);                                                                        // 37  // 45\n\t\t};                                                                                                          // 38  // 46\n                                                                                                              // 39  // 47\n\t\tthis.$get = ['$state', '$stateParams', '$rootScope', function($state, $stateParams, $rootScope) {           // 40  // 48\n                                                                                                              // 41  // 49\n\t\t\tvar $lastViewScope = $rootScope;                                                                           // 42  // 50\n                                                                                                              // 43  // 51\n\t\t\t// Early catch of $viewContentLoaded event                                                                 // 44  // 52\n\t\t\t$rootScope.$on('$viewContentLoaded', function(event) {                                                     // 45  // 53\n\t\t\t\t// With nested views, the event occur several times, in \"wrong\" order                                     // 46  // 54\n\t\t\t\tif(!event.targetScope.ncyBreadcrumbIgnore &&                                                              // 47  // 55\n\t\t\t\t\tisAOlderThanB(event.targetScope.$id, $lastViewScope.$id)) {                                              // 48  // 56\n\t\t\t\t\t$lastViewScope = event.targetScope;                                                                      // 49  // 57\n\t\t\t\t}                                                                                                         // 50  // 58\n\t\t\t});                                                                                                        // 51  // 59\n                                                                                                              // 52  // 60\n\t\t\t// Get the parent state                                                                                    // 53  // 61\n\t\t\tvar $$parentState = function(state) {                                                                      // 54  // 62\n\t\t\t\t// Check if state has explicit parent OR we try guess parent from its name                                // 55  // 63\n\t\t\t\tvar parent = state.parent || (/^(.+)\\.[^.]+$/.exec(state.name) || [])[1];                                 // 56  // 64\n\t\t\t\tvar isObjectParent = typeof parent === \"object\";                                                          // 57  // 65\n\t\t\t\t// if parent is a object reference, then extract the name                                                 // 58  // 66\n\t\t\t\treturn isObjectParent ? parent.name : parent;                                                             // 59  // 67\n\t\t\t};                                                                                                         // 60  // 68\n                                                                                                              // 61  // 69\n\t\t\t// Add the state in the chain if not already in and if not abstract                                        // 62  // 70\n\t\t\tvar $$addStateInChain = function(chain, stateRef) {                                                        // 63  // 71\n\t\t\t\tvar conf,                                                                                                 // 64  // 72\n\t\t\t\t\tparentParams,                                                                                            // 65  // 73\n\t\t\t\t\tref = parseStateRef(stateRef),                                                                           // 66  // 74\n\t\t\t\t\tforce = false,                                                                                           // 67  // 75\n\t\t\t\t\tskip = false;                                                                                            // 68  // 76\n                                                                                                              // 69  // 77\n\t\t\t\tfor(var i = 0, l = chain.length; i < l; i += 1) {                                                         // 70  // 78\n\t\t\t\t\tif(chain[i].name === ref.state) {                                                                        // 71  // 79\n\t\t\t\t\t\treturn;                                                                                                 // 72  // 80\n\t\t\t\t\t}                                                                                                        // 73  // 81\n\t\t\t\t}                                                                                                         // 74  // 82\n                                                                                                              // 75  // 83\n\t\t\t\tconf = $state.get(ref.state);                                                                             // 76  // 84\n\t\t\t\t// Get breadcrumb options                                                                                 // 77  // 85\n\t\t\t\tif(conf.ncyBreadcrumb) {                                                                                  // 78  // 86\n\t\t\t\t\tif(conf.ncyBreadcrumb.force) {                                                                           // 79  // 87\n\t\t\t\t\t\tforce = true;                                                                                           // 80  // 88\n\t\t\t\t\t}                                                                                                        // 81  // 89\n\t\t\t\t\tif(conf.ncyBreadcrumb.skip) {                                                                            // 82  // 90\n\t\t\t\t\t\tskip = true;                                                                                            // 83  // 91\n\t\t\t\t\t}                                                                                                        // 84  // 92\n\t\t\t\t}                                                                                                         // 85  // 93\n\t\t\t\tif((!conf.abstract || $$options.includeAbstract || force) && !skip) {                                     // 86  // 94\n\t\t\t\t\tif(ref.paramExpr) {                                                                                      // 87  // 95\n\t\t\t\t\t\tparentParams = $lastViewScope.$eval(ref.paramExpr);                                                     // 88  // 96\n\t\t\t\t\t}                                                                                                        // 89  // 97\n                                                                                                              // 90  // 98\n\t\t\t\t\tconf.ncyBreadcrumbLink = $state.href(ref.state, parentParams || $stateParams || {});                     // 91  // 99\n\t\t\t\t\tchain.unshift(conf);                                                                                     // 92  // 100\n\t\t\t\t}                                                                                                         // 93  // 101\n\t\t\t};                                                                                                         // 94  // 102\n                                                                                                              // 95  // 103\n\t\t\t// Get the state for the parent step in the breadcrumb                                                     // 96  // 104\n\t\t\tvar $$breadcrumbParentState = function(stateRef) {                                                         // 97  // 105\n\t\t\t\tvar ref = parseStateRef(stateRef),                                                                        // 98  // 106\n\t\t\t\t\tconf = $state.get(ref.state);                                                                            // 99  // 107\n                                                                                                              // 100\n\t\t\t\tif(conf.ncyBreadcrumb && conf.ncyBreadcrumb.parent) {                                                     // 101\n\t\t\t\t\t// Handle the \"parent\" property of the breadcrumb, override the parent/child relation of the state       // 102\n\t\t\t\t\tvar isFunction = typeof conf.ncyBreadcrumb.parent === 'function';                                        // 103\n\t\t\t\t\tvar parentStateRef = isFunction ? conf.ncyBreadcrumb.parent($lastViewScope) : conf.ncyBreadcrumb.parent; // 104\n\t\t\t\t\tif(parentStateRef) {                                                                                     // 105\n\t\t\t\t\t\treturn parentStateRef;                                                                                  // 106\n\t\t\t\t\t}                                                                                                        // 107\n\t\t\t\t}                                                                                                         // 108\n                                                                                                              // 109\n\t\t\t\treturn $$parentState(conf);                                                                               // 110\n\t\t\t};                                                                                                         // 111\n                                                                                                              // 112\n\t\t\treturn {                                                                                                   // 113\n                                                                                                              // 114\n\t\t\t\tgetTemplate: function(templates) {                                                                        // 115\n\t\t\t\t\tif($$options.templateUrl) {                                                                              // 116\n\t\t\t\t\t\t// templateUrl takes precedence over template                                                           // 117\n\t\t\t\t\t\treturn null;                                                                                            // 118\n\t\t\t\t\t} else if(templates[$$options.template]) {                                                               // 119\n\t\t\t\t\t\t// Predefined templates (bootstrap, ...)                                                                // 120\n\t\t\t\t\t\treturn templates[$$options.template];                                                                   // 121\n\t\t\t\t\t} else {                                                                                                 // 122\n\t\t\t\t\t\treturn $$options.template;                                                                              // 123\n\t\t\t\t\t}                                                                                                        // 124\n\t\t\t\t},                                                                                                        // 125\n                                                                                                              // 126\n\t\t\t\tgetTemplateUrl: function() {                                                                              // 127\n\t\t\t\t\treturn $$options.templateUrl;                                                                            // 128\n\t\t\t\t},                                                                                                        // 129\n                                                                                                              // 130\n\t\t\t\tgetStatesChain: function(exitOnFirst) { // Deliberately undocumented param, see getLastStep               // 131\n\t\t\t\t\tvar chain = [];                                                                                          // 132\n                                                                                                              // 133\n\t\t\t\t\t// From current state to the root                                                                        // 134\n\t\t\t\t\tfor(var stateRef = $state.$current.self.name; stateRef; stateRef = $$breadcrumbParentState(stateRef)) {  // 135\n\t\t\t\t\t\t$$addStateInChain(chain, stateRef);                                                                     // 136\n\t\t\t\t\t\tif(exitOnFirst && chain.length) {                                                                       // 137\n\t\t\t\t\t\t\treturn chain;                                                                                          // 138\n\t\t\t\t\t\t}                                                                                                       // 139\n\t\t\t\t\t}                                                                                                        // 140\n                                                                                                              // 141\n\t\t\t\t\t// Prefix state treatment                                                                                // 142\n\t\t\t\t\tif($$options.prefixStateName) {                                                                          // 143\n\t\t\t\t\t\t$$addStateInChain(chain, $$options.prefixStateName);                                                    // 144\n\t\t\t\t\t}                                                                                                        // 145\n                                                                                                              // 146\n\t\t\t\t\treturn chain;                                                                                            // 147\n\t\t\t\t},                                                                                                        // 148\n                                                                                                              // 149\n\t\t\t\tgetLastStep: function() {                                                                                 // 150\n\t\t\t\t\tvar chain = this.getStatesChain(true);                                                                   // 151\n\t\t\t\t\treturn chain.length ? chain[0] : undefined;                                                              // 152\n\t\t\t\t},                                                                                                        // 153\n                                                                                                              // 154\n\t\t\t\t$getLastViewScope: function() {                                                                           // 155\n\t\t\t\t\treturn $lastViewScope;                                                                                   // 156\n\t\t\t\t}                                                                                                         // 157\n\t\t\t};                                                                                                         // 158\n\t\t}];                                                                                                         // 159\n\t}                                                                                                            // 160\n                                                                                                              // 161\n\tvar getExpression = function(interpolationFunction) {                                                        // 162\n\t\tif(interpolationFunction.expressions) {                                                                     // 163\n\t\t\treturn interpolationFunction.expressions;                                                                  // 164\n\t\t} else {                                                                                                    // 165\n\t\t\tvar expressions = [];                                                                                      // 166\n\t\t\tangular.forEach(interpolationFunction.parts, function(part) {                                              // 167\n\t\t\t\tif(angular.isFunction(part)) {                                                                            // 168\n\t\t\t\t\texpressions.push(part.exp);                                                                              // 169\n\t\t\t\t}                                                                                                         // 170\n\t\t\t});                                                                                                        // 171\n\t\t\treturn expressions;                                                                                        // 172\n\t\t}                                                                                                           // 173\n\t};                                                                                                           // 174\n                                                                                                              // 175\n\tvar registerWatchers = function(labelWatcherArray, interpolationFunction, viewScope, step) {                 // 176\n\t\tangular.forEach(getExpression(interpolationFunction), function(expression) {                                // 177\n\t\t\tvar watcher = viewScope.$watch(expression, function() {                                                    // 178\n\t\t\t\tstep.ncyBreadcrumbLabel = interpolationFunction(viewScope);                                               // 179\n\t\t\t});                                                                                                        // 180\n\t\t\tlabelWatcherArray.push(watcher);                                                                           // 181\n\t\t});                                                                                                         // 182\n                                                                                                              // 183\n\t};                                                                                                           // 184\n                                                                                                              // 185\n\tvar deregisterWatchers = function(labelWatcherArray) {                                                       // 186\n\t\tangular.forEach(labelWatcherArray, function(deregisterWatch) {                                              // 187\n\t\t\tderegisterWatch();                                                                                         // 188\n\t\t});                                                                                                         // 189\n\t};                                                                                                           // 190\n                                                                                                              // 191\n\tfunction BreadcrumbDirective($interpolate, $breadcrumb, $rootScope) {                                        // 192\n\t\tvar $$templates = {                                                                                         // 193\n\t\t\tbootstrap2: '<ul class=\"breadcrumb\">' +                                                                    // 194\n\t\t\t\t'<li ng-repeat=\"step in steps\" ng-switch=\"$last || !!step.abstract\" ng-class=\"{active: $last}\">' +        // 195\n\t\t\t\t'<a ng-switch-when=\"false\" href=\"{{step.ncyBreadcrumbLink}}\">{{step.ncyBreadcrumbLabel}}</a>' +           // 196\n\t\t\t\t'<span ng-switch-when=\"true\">{{step.ncyBreadcrumbLabel}}</span>' +                                        // 197\n\t\t\t\t'<span class=\"divider\" ng-hide=\"$last\">/</span>' +                                                        // 198\n\t\t\t\t'</li>' +                                                                                                 // 199\n\t\t\t\t'</ul>',                                                                                                  // 200\n\t\t\tbootstrap3: '<ol class=\"breadcrumb\">' +                                                                    // 201\n\t\t\t\t'<li ng-repeat=\"step in steps\" ng-class=\"{active: $last}\" ng-switch=\"$last || !!step.abstract\">' +        // 202\n\t\t\t\t'<a ng-switch-when=\"false\" href=\"{{step.ncyBreadcrumbLink}}\">{{step.ncyBreadcrumbLabel}}</a>' +           // 203\n\t\t\t\t'<span ng-switch-when=\"true\">{{step.ncyBreadcrumbLabel}}</span>' +                                        // 204\n\t\t\t\t'</li>' +                                                                                                 // 205\n\t\t\t\t'</ol>'                                                                                                   // 206\n\t\t};                                                                                                          // 207\n                                                                                                              // 208\n\t\treturn {                                                                                                    // 209\n\t\t\trestrict: 'AE',                                                                                            // 210\n\t\t\treplace: true,                                                                                             // 211\n\t\t\tscope: {},                                                                                                 // 212\n\t\t\ttemplate: $breadcrumb.getTemplate($$templates),                                                            // 213\n\t\t\ttemplateUrl: $breadcrumb.getTemplateUrl(),                                                                 // 214\n\t\t\tlink: {                                                                                                    // 215\n\t\t\t\tpost: function postLink(scope) {                                                                          // 216\n\t\t\t\t\tvar labelWatchers = [];                                                                                  // 217\n                                                                                                              // 218\n\t\t\t\t\tvar renderBreadcrumb = function() {                                                                      // 219\n\t\t\t\t\t\tderegisterWatchers(labelWatchers);                                                                      // 220\n\t\t\t\t\t\tlabelWatchers = [];                                                                                     // 221\n                                                                                                              // 222\n\t\t\t\t\t\tvar viewScope = $breadcrumb.$getLastViewScope();                                                        // 223\n\t\t\t\t\t\tscope.steps = $breadcrumb.getStatesChain();                                                             // 224\n\t\t\t\t\t\tangular.forEach(scope.steps, function(step) {                                                           // 225\n\t\t\t\t\t\t\tif(step.ncyBreadcrumb && step.ncyBreadcrumb.label) {                                                   // 226\n\t\t\t\t\t\t\t\tvar parseLabel = $interpolate(step.ncyBreadcrumb.label);                                              // 227\n\t\t\t\t\t\t\t\tstep.ncyBreadcrumbLabel = parseLabel(viewScope);                                                      // 228\n\t\t\t\t\t\t\t\t// Watcher for further viewScope updates                                                              // 229\n\t\t\t\t\t\t\t\tregisterWatchers(labelWatchers, parseLabel, viewScope, step);                                         // 230\n\t\t\t\t\t\t\t} else {                                                                                               // 231\n\t\t\t\t\t\t\t\tstep.ncyBreadcrumbLabel = step.name;                                                                  // 232\n\t\t\t\t\t\t\t}                                                                                                      // 233\n\t\t\t\t\t\t});                                                                                                     // 234\n\t\t\t\t\t};                                                                                                       // 235\n                                                                                                              // 236\n\t\t\t\t\t$rootScope.$on('$viewContentLoaded', function(event) {                                                   // 237\n\t\t\t\t\t\tif(!event.targetScope.ncyBreadcrumbIgnore) {                                                            // 238\n\t\t\t\t\t\t\trenderBreadcrumb();                                                                                    // 239\n\t\t\t\t\t\t}                                                                                                       // 240\n\t\t\t\t\t});                                                                                                      // 241\n                                                                                                              // 242\n\t\t\t\t\t// View(s) may be already loaded while the directive's linking                                           // 243\n\t\t\t\t\trenderBreadcrumb();                                                                                      // 244\n\t\t\t\t}                                                                                                         // 245\n\t\t\t}                                                                                                          // 246\n\t\t};                                                                                                          // 247\n\t}                                                                                                            // 248\n\tBreadcrumbDirective.$inject = ['$interpolate', '$breadcrumb', '$rootScope'];                                 // 249\n                                                                                                              // 250\n\tfunction BreadcrumbLastDirective($interpolate, $breadcrumb, $rootScope) {                                    // 251\n                                                                                                              // 252\n\t\treturn {                                                                                                    // 253\n\t\t\trestrict: 'A',                                                                                             // 254\n\t\t\tscope: {},                                                                                                 // 255\n\t\t\ttemplate: '{{ncyBreadcrumbLabel}}',                                                                        // 256\n\t\t\tcompile: function(cElement, cAttrs) {                                                                      // 257\n                                                                                                              // 258\n\t\t\t\t// Override the default template if ncyBreadcrumbLast has a value                                         // 259\n\t\t\t\tvar template = cElement.attr(cAttrs.$attr.ncyBreadcrumbLast);                                             // 260\n\t\t\t\tif(template) {                                                                                            // 261\n\t\t\t\t\tcElement.html(template);                                                                                 // 262\n\t\t\t\t}                                                                                                         // 263\n                                                                                                              // 264\n\t\t\t\treturn {                                                                                                  // 265\n\t\t\t\t\tpost: function postLink(scope) {                                                                         // 266\n\t\t\t\t\t\tvar labelWatchers = [];                                                                                 // 267\n                                                                                                              // 268\n\t\t\t\t\t\tvar renderLabel = function() {                                                                          // 269\n\t\t\t\t\t\t\tderegisterWatchers(labelWatchers);                                                                     // 270\n\t\t\t\t\t\t\tlabelWatchers = [];                                                                                    // 271\n                                                                                                              // 272\n\t\t\t\t\t\t\tvar viewScope = $breadcrumb.$getLastViewScope();                                                       // 273\n\t\t\t\t\t\t\tvar lastStep = $breadcrumb.getLastStep();                                                              // 274\n\t\t\t\t\t\t\tif(lastStep) {                                                                                         // 275\n\t\t\t\t\t\t\t\tscope.ncyBreadcrumbLink = lastStep.ncyBreadcrumbLink;                                                 // 276\n\t\t\t\t\t\t\t\tif(lastStep.ncyBreadcrumb && lastStep.ncyBreadcrumb.label) {                                          // 277\n\t\t\t\t\t\t\t\t\tvar parseLabel = $interpolate(lastStep.ncyBreadcrumb.label);                                         // 278\n\t\t\t\t\t\t\t\t\tscope.ncyBreadcrumbLabel = parseLabel(viewScope);                                                    // 279\n\t\t\t\t\t\t\t\t\t// Watcher for further viewScope updates                                                             // 280\n\t\t\t\t\t\t\t\t\t// Tricky last arg: the last step is the entire scope of the directive !                             // 281\n\t\t\t\t\t\t\t\t\tregisterWatchers(labelWatchers, parseLabel, viewScope, scope);                                       // 282\n\t\t\t\t\t\t\t\t} else {                                                                                              // 283\n\t\t\t\t\t\t\t\t\tscope.ncyBreadcrumbLabel = lastStep.name;                                                            // 284\n\t\t\t\t\t\t\t\t}                                                                                                     // 285\n\t\t\t\t\t\t\t}                                                                                                      // 286\n\t\t\t\t\t\t};                                                                                                      // 287\n                                                                                                              // 288\n\t\t\t\t\t\t$rootScope.$on('$viewContentLoaded', function(event) {                                                  // 289\n\t\t\t\t\t\t\tif(!event.targetScope.ncyBreadcrumbIgnore) {                                                           // 290\n\t\t\t\t\t\t\t\trenderLabel();                                                                                        // 291\n\t\t\t\t\t\t\t}                                                                                                      // 292\n\t\t\t\t\t\t});                                                                                                     // 293\n                                                                                                              // 294\n\t\t\t\t\t\t// View(s) may be already loaded while the directive's linking                                          // 295\n\t\t\t\t\t\trenderLabel();                                                                                          // 296\n\t\t\t\t\t}                                                                                                        // 297\n\t\t\t\t};                                                                                                        // 298\n                                                                                                              // 299\n\t\t\t}                                                                                                          // 300\n\t\t};                                                                                                          // 301\n\t}                                                                                                            // 302\n\tBreadcrumbLastDirective.$inject = ['$interpolate', '$breadcrumb', '$rootScope'];                             // 303\n                                                                                                              // 304\n\tfunction BreadcrumbTextDirective($interpolate, $breadcrumb, $rootScope) {                                    // 305\n                                                                                                              // 306\n\t\treturn {                                                                                                    // 307\n\t\t\trestrict: 'A',                                                                                             // 308\n\t\t\tscope: {},                                                                                                 // 309\n\t\t\ttemplate: '{{ncyBreadcrumbChain}}',                                                                        // 310\n                                                                                                              // 311\n\t\t\tcompile: function(cElement, cAttrs) {                                                                      // 312\n\t\t\t\t// Override the default template if ncyBreadcrumbText has a value                                         // 313\n\t\t\t\tvar template = cElement.attr(cAttrs.$attr.ncyBreadcrumbText);                                             // 314\n\t\t\t\tif(template) {                                                                                            // 315\n\t\t\t\t\tcElement.html(template);                                                                                 // 316\n\t\t\t\t}                                                                                                         // 317\n                                                                                                              // 318\n\t\t\t\tvar separator = cElement.attr(cAttrs.$attr.ncyBreadcrumbTextSeparator) || ' / ';                          // 319\n                                                                                                              // 320\n\t\t\t\treturn {                                                                                                  // 321\n\t\t\t\t\tpost: function postLink(scope) {                                                                         // 322\n\t\t\t\t\t\tvar labelWatchers = [];                                                                                 // 323\n                                                                                                              // 324\n\t\t\t\t\t\tvar registerWatchersText = function(labelWatcherArray, interpolationFunction, viewScope) {              // 325\n\t\t\t\t\t\t\tangular.forEach(getExpression(interpolationFunction), function(expression) {                           // 326\n\t\t\t\t\t\t\t\tvar watcher = viewScope.$watch(expression, function(newValue, oldValue) {                             // 327\n\t\t\t\t\t\t\t\t\tif(newValue !== oldValue) {                                                                          // 328\n\t\t\t\t\t\t\t\t\t\trenderLabel();                                                                                      // 329\n\t\t\t\t\t\t\t\t\t}                                                                                                    // 330\n\t\t\t\t\t\t\t\t});                                                                                                   // 331\n\t\t\t\t\t\t\t\tlabelWatcherArray.push(watcher);                                                                      // 332\n\t\t\t\t\t\t\t});                                                                                                    // 333\n\t\t\t\t\t\t};                                                                                                      // 334\n                                                                                                              // 335\n\t\t\t\t\t\tvar renderLabel = function() {                                                                          // 336\n\t\t\t\t\t\t\tderegisterWatchers(labelWatchers);                                                                     // 337\n\t\t\t\t\t\t\tlabelWatchers = [];                                                                                    // 338\n                                                                                                              // 339\n\t\t\t\t\t\t\tvar viewScope = $breadcrumb.$getLastViewScope();                                                       // 340\n\t\t\t\t\t\t\tvar steps = $breadcrumb.getStatesChain();                                                              // 341\n\t\t\t\t\t\t\tvar combinedLabels = [];                                                                               // 342\n\t\t\t\t\t\t\tangular.forEach(steps, function(step) {                                                                // 343\n\t\t\t\t\t\t\t\tif(step.ncyBreadcrumb && step.ncyBreadcrumb.label) {                                                  // 344\n\t\t\t\t\t\t\t\t\tvar parseLabel = $interpolate(step.ncyBreadcrumb.label);                                             // 345\n\t\t\t\t\t\t\t\t\tcombinedLabels.push(parseLabel(viewScope));                                                          // 346\n\t\t\t\t\t\t\t\t\t// Watcher for further viewScope updates                                                             // 347\n\t\t\t\t\t\t\t\t\tregisterWatchersText(labelWatchers, parseLabel, viewScope);                                          // 348\n\t\t\t\t\t\t\t\t} else {                                                                                              // 349\n\t\t\t\t\t\t\t\t\tcombinedLabels.push(step.name);                                                                      // 350\n\t\t\t\t\t\t\t\t}                                                                                                     // 351\n\t\t\t\t\t\t\t});                                                                                                    // 352\n                                                                                                              // 353\n\t\t\t\t\t\t\tscope.ncyBreadcrumbChain = combinedLabels.join(separator);                                             // 354\n\t\t\t\t\t\t};                                                                                                      // 355\n                                                                                                              // 356\n\t\t\t\t\t\t$rootScope.$on('$viewContentLoaded', function(event) {                                                  // 357\n\t\t\t\t\t\t\tif(!event.targetScope.ncyBreadcrumbIgnore) {                                                           // 358\n\t\t\t\t\t\t\t\trenderLabel();                                                                                        // 359\n\t\t\t\t\t\t\t}                                                                                                      // 360\n\t\t\t\t\t\t});                                                                                                     // 361\n                                                                                                              // 362\n\t\t\t\t\t\t// View(s) may be already loaded while the directive's linking                                          // 363\n\t\t\t\t\t\trenderLabel();                                                                                          // 364\n\t\t\t\t\t}                                                                                                        // 365\n\t\t\t\t};                                                                                                        // 366\n                                                                                                              // 367\n\t\t\t}                                                                                                          // 368\n\t\t};                                                                                                          // 369\n\t}                                                                                                            // 370\n\tBreadcrumbTextDirective.$inject = ['$interpolate', '$breadcrumb', '$rootScope'];                             // 371\n                                                                                                              // 372\n\tangular.module('ncy-angular-breadcrumb', ['ui.router.state'])                                                // 373\n\t\t.provider('$breadcrumb', $Breadcrumb)                                                                       // 374\n\t\t.directive('ncyBreadcrumb', BreadcrumbDirective)                                                            // 375\n\t\t.directive('ncyBreadcrumbLast', BreadcrumbLastDirective)                                                    // 376\n\t\t.directive('ncyBreadcrumbText', BreadcrumbTextDirective);                                                   // 377\n})(window, window.angular);                                                                                   // 378\n                                                                                                              // 379\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 388\n                                                                                                                     // 389\n}).call(this);                                                                                                       // 390\n                                                                                                                     // 391\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['rshashkov:angular-meteor-breadcrumb'] = {};\n\n})();\n","servePath":"/packages/rshashkov_angular-meteor-breadcrumb.js"}]