[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar data, selected;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/emdagon_bootstrap-multiselect/packages/emdagon_bootstrap-multiselect.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/emdagon:bootstrap-multiselect/bootstrap-multiselect/dist/js/bootstrap-multiselect.js                    //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n/**                                                                                                                 // 1\n * Bootstrap Multiselect (https://github.com/davidstutz/bootstrap-multiselect)                                      // 2\n *                                                                                                                  // 3\n * Apache License, Version 2.0:                                                                                     // 4\n * Copyright (c) 2012 - 2015 David Stutz                                                                            // 5\n *                                                                                                                  // 6\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not                                      // 7\n * use this file except in compliance with the License. You may obtain a                                            // 8\n * copy of the License at http://www.apache.org/licenses/LICENSE-2.0                                                // 9\n *                                                                                                                  // 10\n * Unless required by applicable law or agreed to in writing, software                                              // 11\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT                                        // 12\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the                                         // 13\n * License for the specific language governing permissions and limitations                                          // 14\n * under the License.                                                                                               // 15\n *                                                                                                                  // 16\n * BSD 3-Clause License:                                                                                            // 17\n * Copyright (c) 2012 - 2015 David Stutz                                                                            // 18\n * All rights reserved.                                                                                             // 19\n *                                                                                                                  // 20\n * Redistribution and use in source and binary forms, with or without                                               // 21\n * modification, are permitted provided that the following conditions are met:                                      // 22\n *    - Redistributions of source code must retain the above copyright notice,                                      // 23\n *      this list of conditions and the following disclaimer.                                                       // 24\n *    - Redistributions in binary form must reproduce the above copyright notice,                                   // 25\n *      this list of conditions and the following disclaimer in the documentation                                   // 26\n *      and/or other materials provided with the distribution.                                                      // 27\n *    - Neither the name of David Stutz nor the names of its contributors may be                                    // 28\n *      used to endorse or promote products derived from this software without                                      // 29\n *      specific prior written permission.                                                                          // 30\n *                                                                                                                  // 31\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"                                      // 32\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,                                            // 33\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR                                           // 34\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR                                                // 35\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,                                            // 36\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,                                              // 37\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;                                      // 38\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,                                         // 39\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR                                          // 40\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF                                           // 41\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                                                                       // 42\n */                                                                                                                 // 43\n!function ($) {                                                                                                     // 44\n    \"use strict\";// jshint ;_;                                                                                      // 45\n                                                                                                                    // 46\n    if (typeof ko !== 'undefined' && ko.bindingHandlers && !ko.bindingHandlers.multiselect) {                       // 47\n        ko.bindingHandlers.multiselect = {                                                                          // 48\n            after: ['options', 'value', 'selectedOptions'],                                                         // 49\n                                                                                                                    // 50\n            init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {                        // 51\n                var $element = $(element);                                                                          // 52\n                var config = ko.toJS(valueAccessor());                                                              // 53\n                                                                                                                    // 54\n                $element.multiselect(config);                                                                       // 55\n                                                                                                                    // 56\n                if (allBindings.has('options')) {                                                                   // 57\n                    var options = allBindings.get('options');                                                       // 58\n                    if (ko.isObservable(options)) {                                                                 // 59\n                        ko.computed({                                                                               // 60\n                            read: function() {                                                                      // 61\n                                options();                                                                          // 62\n                                setTimeout(function() {                                                             // 63\n                                    var ms = $element.data('multiselect');                                          // 64\n                                    if (ms)                                                                         // 65\n                                        ms.updateOriginalOptions();//Not sure how beneficial this is.               // 66\n                                    $element.multiselect('rebuild');                                                // 67\n                                }, 1);                                                                              // 68\n                            },                                                                                      // 69\n                            disposeWhenNodeIsRemoved: element                                                       // 70\n                        });                                                                                         // 71\n                    }                                                                                               // 72\n                }                                                                                                   // 73\n                                                                                                                    // 74\n                //value and selectedOptions are two-way, so these will be triggered even by our own actions.        // 75\n                //It needs some way to tell if they are triggered because of us or because of outside change.       // 76\n                //It doesn't loop but it's a waste of processing.                                                   // 77\n                if (allBindings.has('value')) {                                                                     // 78\n                    var value = allBindings.get('value');                                                           // 79\n                    if (ko.isObservable(value)) {                                                                   // 80\n                        ko.computed({                                                                               // 81\n                            read: function() {                                                                      // 82\n                                value();                                                                            // 83\n                                setTimeout(function() {                                                             // 84\n                                    $element.multiselect('refresh');                                                // 85\n                                }, 1);                                                                              // 86\n                            },                                                                                      // 87\n                            disposeWhenNodeIsRemoved: element                                                       // 88\n                        }).extend({ rateLimit: 100, notifyWhenChangesStop: true });                                 // 89\n                    }                                                                                               // 90\n                }                                                                                                   // 91\n                                                                                                                    // 92\n                //Switched from arrayChange subscription to general subscription using 'refresh'.                   // 93\n                //Not sure performance is any better using 'select' and 'deselect'.                                 // 94\n                if (allBindings.has('selectedOptions')) {                                                           // 95\n                    var selectedOptions = allBindings.get('selectedOptions');                                       // 96\n                    if (ko.isObservable(selectedOptions)) {                                                         // 97\n                        ko.computed({                                                                               // 98\n                            read: function() {                                                                      // 99\n                                selectedOptions();                                                                  // 100\n                                setTimeout(function() {                                                             // 101\n                                    $element.multiselect('refresh');                                                // 102\n                                }, 1);                                                                              // 103\n                            },                                                                                      // 104\n                            disposeWhenNodeIsRemoved: element                                                       // 105\n                        }).extend({ rateLimit: 100, notifyWhenChangesStop: true });                                 // 106\n                    }                                                                                               // 107\n                }                                                                                                   // 108\n                                                                                                                    // 109\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {                                   // 110\n                    $element.multiselect('destroy');                                                                // 111\n                });                                                                                                 // 112\n            },                                                                                                      // 113\n                                                                                                                    // 114\n            update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {                      // 115\n                var $element = $(element);                                                                          // 116\n                var config = ko.toJS(valueAccessor());                                                              // 117\n                                                                                                                    // 118\n                $element.multiselect('setOptions', config);                                                         // 119\n                $element.multiselect('rebuild');                                                                    // 120\n            }                                                                                                       // 121\n        };                                                                                                          // 122\n    }                                                                                                               // 123\n                                                                                                                    // 124\n    function forEach(array, callback) {                                                                             // 125\n        for (var index = 0; index < array.length; ++index) {                                                        // 126\n            callback(array[index], index);                                                                          // 127\n        }                                                                                                           // 128\n    }                                                                                                               // 129\n                                                                                                                    // 130\n    /**                                                                                                             // 131\n     * Constructor to create a new multiselect using the given select.                                              // 132\n     *                                                                                                              // 133\n     * @param {jQuery} select                                                                                       // 134\n     * @param {Object} options                                                                                      // 135\n     * @returns {Multiselect}                                                                                       // 136\n     */                                                                                                             // 137\n    function Multiselect(select, options) {                                                                         // 138\n                                                                                                                    // 139\n        this.$select = $(select);                                                                                   // 140\n                                                                                                                    // 141\n        // Placeholder via data attributes                                                                          // 142\n        if (this.$select.attr(\"data-placeholder\")) {                                                                // 143\n            options.nonSelectedText = this.$select.data(\"placeholder\");                                             // 144\n        }                                                                                                           // 145\n                                                                                                                    // 146\n        this.options = this.mergeOptions($.extend({}, options, this.$select.data()));                               // 147\n                                                                                                                    // 148\n        // Initialization.                                                                                          // 149\n        // We have to clone to create a new reference.                                                              // 150\n        this.originalOptions = this.$select.clone()[0].options;                                                     // 151\n        this.query = '';                                                                                            // 152\n        this.searchTimeout = null;                                                                                  // 153\n        this.lastToggledInput = null                                                                                // 154\n                                                                                                                    // 155\n        this.options.multiple = this.$select.attr('multiple') === \"multiple\";                                       // 156\n        this.options.onChange = $.proxy(this.options.onChange, this);                                               // 157\n        this.options.onDropdownShow = $.proxy(this.options.onDropdownShow, this);                                   // 158\n        this.options.onDropdownHide = $.proxy(this.options.onDropdownHide, this);                                   // 159\n        this.options.onDropdownShown = $.proxy(this.options.onDropdownShown, this);                                 // 160\n        this.options.onDropdownHidden = $.proxy(this.options.onDropdownHidden, this);                               // 161\n                                                                                                                    // 162\n        // Build select all if enabled.                                                                             // 163\n        this.buildContainer();                                                                                      // 164\n        this.buildButton();                                                                                         // 165\n        this.buildDropdown();                                                                                       // 166\n        this.buildSelectAll();                                                                                      // 167\n        this.buildDropdownOptions();                                                                                // 168\n        this.buildFilter();                                                                                         // 169\n                                                                                                                    // 170\n        this.updateButtonText();                                                                                    // 171\n        this.updateSelectAll();                                                                                     // 172\n                                                                                                                    // 173\n        if (this.options.disableIfEmpty && $('option', this.$select).length <= 0) {                                 // 174\n            this.disable();                                                                                         // 175\n        }                                                                                                           // 176\n                                                                                                                    // 177\n        this.$select.hide().after(this.$container);                                                                 // 178\n    };                                                                                                              // 179\n                                                                                                                    // 180\n    Multiselect.prototype = {                                                                                       // 181\n                                                                                                                    // 182\n        defaults: {                                                                                                 // 183\n            /**                                                                                                     // 184\n             * Default text function will either print 'None selected' in case no                                   // 185\n             * option is selected or a list of the selected options up to a length                                  // 186\n             * of 3 selected options.                                                                               // 187\n             *                                                                                                      // 188\n             * @param {jQuery} options                                                                              // 189\n             * @param {jQuery} select                                                                               // 190\n             * @returns {String}                                                                                    // 191\n             */                                                                                                     // 192\n            buttonText: function(options, select) {                                                                 // 193\n                if (options.length === 0) {                                                                         // 194\n                    return this.nonSelectedText;                                                                    // 195\n                }                                                                                                   // 196\n                else if (this.allSelectedText                                                                       // 197\n                            && options.length === $('option', $(select)).length                                     // 198\n                            && $('option', $(select)).length !== 1                                                  // 199\n                            && this.multiple) {                                                                     // 200\n                                                                                                                    // 201\n                    if (this.selectAllNumber) {                                                                     // 202\n                        return this.allSelectedText + ' (' + options.length + ')';                                  // 203\n                    }                                                                                               // 204\n                    else {                                                                                          // 205\n                        return this.allSelectedText;                                                                // 206\n                    }                                                                                               // 207\n                }                                                                                                   // 208\n                else if (options.length > this.numberDisplayed) {                                                   // 209\n                    return options.length + ' ' + this.nSelectedText;                                               // 210\n                }                                                                                                   // 211\n                else {                                                                                              // 212\n                    var selected = '';                                                                              // 213\n                    var delimiter = this.delimiterText;                                                             // 214\n                                                                                                                    // 215\n                    options.each(function() {                                                                       // 216\n                        var label = ($(this).attr('label') !== undefined) ? $(this).attr('label') : $(this).text(); // 217\n                        selected += label + delimiter;                                                              // 218\n                    });                                                                                             // 219\n                                                                                                                    // 220\n                    return selected.substr(0, selected.length - 2);                                                 // 221\n                }                                                                                                   // 222\n            },                                                                                                      // 223\n            /**                                                                                                     // 224\n             * Updates the title of the button similar to the buttonText function.                                  // 225\n             *                                                                                                      // 226\n             * @param {jQuery} options                                                                              // 227\n             * @param {jQuery} select                                                                               // 228\n             * @returns {@exp;selected@call;substr}                                                                 // 229\n             */                                                                                                     // 230\n            buttonTitle: function(options, select) {                                                                // 231\n                if (options.length === 0) {                                                                         // 232\n                    return this.nonSelectedText;                                                                    // 233\n                }                                                                                                   // 234\n                else {                                                                                              // 235\n                    var selected = '';                                                                              // 236\n                    var delimiter = this.delimiterText;                                                             // 237\n                                                                                                                    // 238\n                    options.each(function () {                                                                      // 239\n                        var label = ($(this).attr('label') !== undefined) ? $(this).attr('label') : $(this).text(); // 240\n                        selected += label + delimiter;                                                              // 241\n                    });                                                                                             // 242\n                    return selected.substr(0, selected.length - 2);                                                 // 243\n                }                                                                                                   // 244\n            },                                                                                                      // 245\n            /**                                                                                                     // 246\n             * Create a label.                                                                                      // 247\n             *                                                                                                      // 248\n             * @param {jQuery} element                                                                              // 249\n             * @returns {String}                                                                                    // 250\n             */                                                                                                     // 251\n            optionLabel: function(element){                                                                         // 252\n                return $(element).attr('label') || $(element).text();                                               // 253\n            },                                                                                                      // 254\n            /**                                                                                                     // 255\n             * Triggered on change of the multiselect.                                                              // 256\n             *                                                                                                      // 257\n             * Not triggered when selecting/deselecting options manually.                                           // 258\n             *                                                                                                      // 259\n             * @param {jQuery} option                                                                               // 260\n             * @param {Boolean} checked                                                                             // 261\n             */                                                                                                     // 262\n            onChange : function(option, checked) {                                                                  // 263\n                                                                                                                    // 264\n            },                                                                                                      // 265\n            /**                                                                                                     // 266\n             * Triggered when the dropdown is shown.                                                                // 267\n             *                                                                                                      // 268\n             * @param {jQuery} event                                                                                // 269\n             */                                                                                                     // 270\n            onDropdownShow: function(event) {                                                                       // 271\n                                                                                                                    // 272\n            },                                                                                                      // 273\n            /**                                                                                                     // 274\n             * Triggered when the dropdown is hidden.                                                               // 275\n             *                                                                                                      // 276\n             * @param {jQuery} event                                                                                // 277\n             */                                                                                                     // 278\n            onDropdownHide: function(event) {                                                                       // 279\n                                                                                                                    // 280\n            },                                                                                                      // 281\n            /**                                                                                                     // 282\n             * Triggered after the dropdown is shown.                                                               // 283\n             *                                                                                                      // 284\n             * @param {jQuery} event                                                                                // 285\n             */                                                                                                     // 286\n            onDropdownShown: function(event) {                                                                      // 287\n                                                                                                                    // 288\n            },                                                                                                      // 289\n            /**                                                                                                     // 290\n             * Triggered after the dropdown is hidden.                                                              // 291\n             *                                                                                                      // 292\n             * @param {jQuery} event                                                                                // 293\n             */                                                                                                     // 294\n            onDropdownHidden: function(event) {                                                                     // 295\n                                                                                                                    // 296\n            },                                                                                                      // 297\n            /**                                                                                                     // 298\n             * Triggered on select all.                                                                             // 299\n             */                                                                                                     // 300\n            onSelectAll: function() {                                                                               // 301\n                                                                                                                    // 302\n            },                                                                                                      // 303\n            enableHTML: false,                                                                                      // 304\n            buttonClass: 'btn btn-default',                                                                         // 305\n            inheritClass: false,                                                                                    // 306\n            buttonWidth: 'auto',                                                                                    // 307\n            buttonContainer: '<div class=\"btn-group\" />',                                                           // 308\n            dropRight: false,                                                                                       // 309\n            selectedClass: 'active',                                                                                // 310\n            // Maximum height of the dropdown menu.                                                                 // 311\n            // If maximum height is exceeded a scrollbar will be displayed.                                         // 312\n            maxHeight: false,                                                                                       // 313\n            checkboxName: false,                                                                                    // 314\n            includeSelectAllOption: false,                                                                          // 315\n            includeSelectAllIfMoreThan: 0,                                                                          // 316\n            selectAllText: ' Select all',                                                                           // 317\n            selectAllValue: 'multiselect-all',                                                                      // 318\n            selectAllName: false,                                                                                   // 319\n            selectAllNumber: true,                                                                                  // 320\n            enableFiltering: false,                                                                                 // 321\n            enableCaseInsensitiveFiltering: false,                                                                  // 322\n            enableClickableOptGroups: false,                                                                        // 323\n            filterPlaceholder: 'Search',                                                                            // 324\n            // possible options: 'text', 'value', 'both'                                                            // 325\n            filterBehavior: 'text',                                                                                 // 326\n            includeFilterClearBtn: true,                                                                            // 327\n            preventInputChangeEvent: false,                                                                         // 328\n            nonSelectedText: 'None selected',                                                                       // 329\n            nSelectedText: 'selected',                                                                              // 330\n            allSelectedText: 'All selected',                                                                        // 331\n            numberDisplayed: 3,                                                                                     // 332\n            disableIfEmpty: false,                                                                                  // 333\n            delimiterText: ', ',                                                                                    // 334\n            templates: {                                                                                            // 335\n                button: '<button type=\"button\" class=\"multiselect dropdown-toggle\" data-toggle=\"dropdown\"><span class=\"multiselect-selected-text\"></span> <b class=\"caret\"></b></button>',\n                ul: '<ul class=\"multiselect-container dropdown-menu\"></ul>',                                        // 337\n                filter: '<li class=\"multiselect-item filter\"><div class=\"input-group\"><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span><input class=\"form-control multiselect-search\" type=\"text\"></div></li>',\n                filterClearBtn: '<span class=\"input-group-btn\"><button class=\"btn btn-default multiselect-clear-filter\" type=\"button\"><i class=\"glyphicon glyphicon-remove-circle\"></i></button></span>',\n                li: '<li><a tabindex=\"0\"><label></label></a></li>',                                                 // 340\n                divider: '<li class=\"multiselect-item divider\"></li>',                                              // 341\n                liGroup: '<li class=\"multiselect-item multiselect-group\"><label></label></li>'                      // 342\n            }                                                                                                       // 343\n        },                                                                                                          // 344\n                                                                                                                    // 345\n        constructor: Multiselect,                                                                                   // 346\n                                                                                                                    // 347\n        /**                                                                                                         // 348\n         * Builds the container of the multiselect.                                                                 // 349\n         */                                                                                                         // 350\n        buildContainer: function() {                                                                                // 351\n            this.$container = $(this.options.buttonContainer);                                                      // 352\n            this.$container.on('show.bs.dropdown', this.options.onDropdownShow);                                    // 353\n            this.$container.on('hide.bs.dropdown', this.options.onDropdownHide);                                    // 354\n            this.$container.on('shown.bs.dropdown', this.options.onDropdownShown);                                  // 355\n            this.$container.on('hidden.bs.dropdown', this.options.onDropdownHidden);                                // 356\n        },                                                                                                          // 357\n                                                                                                                    // 358\n        /**                                                                                                         // 359\n         * Builds the button of the multiselect.                                                                    // 360\n         */                                                                                                         // 361\n        buildButton: function() {                                                                                   // 362\n            this.$button = $(this.options.templates.button).addClass(this.options.buttonClass);                     // 363\n            if (this.$select.attr('class') && this.options.inheritClass) {                                          // 364\n                this.$button.addClass(this.$select.attr('class'));                                                  // 365\n            }                                                                                                       // 366\n            // Adopt active state.                                                                                  // 367\n            if (this.$select.prop('disabled')) {                                                                    // 368\n                this.disable();                                                                                     // 369\n            }                                                                                                       // 370\n            else {                                                                                                  // 371\n                this.enable();                                                                                      // 372\n            }                                                                                                       // 373\n                                                                                                                    // 374\n            // Manually add button width if set.                                                                    // 375\n            if (this.options.buttonWidth && this.options.buttonWidth !== 'auto') {                                  // 376\n                this.$button.css({                                                                                  // 377\n                    'width' : this.options.buttonWidth,                                                             // 378\n                    'overflow' : 'hidden',                                                                          // 379\n                    'text-overflow' : 'ellipsis'                                                                    // 380\n                });                                                                                                 // 381\n                this.$container.css({                                                                               // 382\n                    'width': this.options.buttonWidth                                                               // 383\n                });                                                                                                 // 384\n            }                                                                                                       // 385\n                                                                                                                    // 386\n            // Keep the tab index from the select.                                                                  // 387\n            var tabindex = this.$select.attr('tabindex');                                                           // 388\n            if (tabindex) {                                                                                         // 389\n                this.$button.attr('tabindex', tabindex);                                                            // 390\n            }                                                                                                       // 391\n                                                                                                                    // 392\n            this.$container.prepend(this.$button);                                                                  // 393\n        },                                                                                                          // 394\n                                                                                                                    // 395\n        /**                                                                                                         // 396\n         * Builds the ul representing the dropdown menu.                                                            // 397\n         */                                                                                                         // 398\n        buildDropdown: function() {                                                                                 // 399\n                                                                                                                    // 400\n            // Build ul.                                                                                            // 401\n            this.$ul = $(this.options.templates.ul);                                                                // 402\n                                                                                                                    // 403\n            if (this.options.dropRight) {                                                                           // 404\n                this.$ul.addClass('pull-right');                                                                    // 405\n            }                                                                                                       // 406\n                                                                                                                    // 407\n            // Set max height of dropdown menu to activate auto scrollbar.                                          // 408\n            if (this.options.maxHeight) {                                                                           // 409\n                // TODO: Add a class for this option to move the css declarations.                                  // 410\n                this.$ul.css({                                                                                      // 411\n                    'max-height': this.options.maxHeight + 'px',                                                    // 412\n                    'overflow-y': 'auto',                                                                           // 413\n                    'overflow-x': 'hidden'                                                                          // 414\n                });                                                                                                 // 415\n            }                                                                                                       // 416\n                                                                                                                    // 417\n            this.$container.append(this.$ul);                                                                       // 418\n        },                                                                                                          // 419\n                                                                                                                    // 420\n        /**                                                                                                         // 421\n         * Build the dropdown options and binds all nessecary events.                                               // 422\n         *                                                                                                          // 423\n         * Uses createDivider and createOptionValue to create the necessary options.                                // 424\n         */                                                                                                         // 425\n        buildDropdownOptions: function() {                                                                          // 426\n                                                                                                                    // 427\n            this.$select.children().each($.proxy(function(index, element) {                                         // 428\n                                                                                                                    // 429\n                var $element = $(element);                                                                          // 430\n                // Support optgroups and options without a group simultaneously.                                    // 431\n                var tag = $element.prop('tagName')                                                                  // 432\n                    .toLowerCase();                                                                                 // 433\n                                                                                                                    // 434\n                if ($element.prop('value') === this.options.selectAllValue) {                                       // 435\n                    return;                                                                                         // 436\n                }                                                                                                   // 437\n                                                                                                                    // 438\n                if (tag === 'optgroup') {                                                                           // 439\n                    this.createOptgroup(element);                                                                   // 440\n                }                                                                                                   // 441\n                else if (tag === 'option') {                                                                        // 442\n                                                                                                                    // 443\n                    if ($element.data('role') === 'divider') {                                                      // 444\n                        this.createDivider();                                                                       // 445\n                    }                                                                                               // 446\n                    else {                                                                                          // 447\n                        this.createOptionValue(element);                                                            // 448\n                    }                                                                                               // 449\n                                                                                                                    // 450\n                }                                                                                                   // 451\n                                                                                                                    // 452\n                // Other illegal tags will be ignored.                                                              // 453\n            }, this));                                                                                              // 454\n                                                                                                                    // 455\n            // Bind the change event on the dropdown elements.                                                      // 456\n            $('li input', this.$ul).on('change', $.proxy(function(event) {                                          // 457\n                var $target = $(event.target);                                                                      // 458\n                                                                                                                    // 459\n                var checked = $target.prop('checked') || false;                                                     // 460\n                var isSelectAllOption = $target.val() === this.options.selectAllValue;                              // 461\n                                                                                                                    // 462\n                // Apply or unapply the configured selected class.                                                  // 463\n                if (this.options.selectedClass) {                                                                   // 464\n                    if (checked) {                                                                                  // 465\n                        $target.closest('li')                                                                       // 466\n                            .addClass(this.options.selectedClass);                                                  // 467\n                    }                                                                                               // 468\n                    else {                                                                                          // 469\n                        $target.closest('li')                                                                       // 470\n                            .removeClass(this.options.selectedClass);                                               // 471\n                    }                                                                                               // 472\n                }                                                                                                   // 473\n                                                                                                                    // 474\n                // Get the corresponding option.                                                                    // 475\n                var value = $target.val();                                                                          // 476\n                var $option = this.getOptionByValue(value);                                                         // 477\n                                                                                                                    // 478\n                var $optionsNotThis = $('option', this.$select).not($option);                                       // 479\n                var $checkboxesNotThis = $('input', this.$container).not($target);                                  // 480\n                                                                                                                    // 481\n                if (isSelectAllOption) {                                                                            // 482\n                    if (checked) {                                                                                  // 483\n                        this.selectAll();                                                                           // 484\n                    }                                                                                               // 485\n                    else {                                                                                          // 486\n                        this.deselectAll();                                                                         // 487\n                    }                                                                                               // 488\n                }                                                                                                   // 489\n                                                                                                                    // 490\n                if(!isSelectAllOption){                                                                             // 491\n                    if (checked) {                                                                                  // 492\n                        $option.prop('selected', true);                                                             // 493\n                                                                                                                    // 494\n                        if (this.options.multiple) {                                                                // 495\n                            // Simply select additional option.                                                     // 496\n                            $option.prop('selected', true);                                                         // 497\n                        }                                                                                           // 498\n                        else {                                                                                      // 499\n                            // Unselect all other options and corresponding checkboxes.                             // 500\n                            if (this.options.selectedClass) {                                                       // 501\n                                $($checkboxesNotThis).closest('li').removeClass(this.options.selectedClass);        // 502\n                            }                                                                                       // 503\n                                                                                                                    // 504\n                            $($checkboxesNotThis).prop('checked', false);                                           // 505\n                            $optionsNotThis.prop('selected', false);                                                // 506\n                                                                                                                    // 507\n                            // It's a single selection, so close.                                                   // 508\n                            this.$button.click();                                                                   // 509\n                        }                                                                                           // 510\n                                                                                                                    // 511\n                        if (this.options.selectedClass === \"active\") {                                              // 512\n                            $optionsNotThis.closest(\"a\").css(\"outline\", \"\");                                        // 513\n                        }                                                                                           // 514\n                    }                                                                                               // 515\n                    else {                                                                                          // 516\n                        // Unselect option.                                                                         // 517\n                        $option.prop('selected', false);                                                            // 518\n                    }                                                                                               // 519\n                }                                                                                                   // 520\n                                                                                                                    // 521\n                this.$select.change();                                                                              // 522\n                                                                                                                    // 523\n                this.updateButtonText();                                                                            // 524\n                this.updateSelectAll();                                                                             // 525\n                                                                                                                    // 526\n                this.options.onChange($option, checked);                                                            // 527\n                                                                                                                    // 528\n                if(this.options.preventInputChangeEvent) {                                                          // 529\n                    return false;                                                                                   // 530\n                }                                                                                                   // 531\n            }, this));                                                                                              // 532\n                                                                                                                    // 533\n            $('li a', this.$ul).on('mousedown', function(e) {                                                       // 534\n                if (e.shiftKey) {                                                                                   // 535\n                    // Prevent selecting text by Shift+click                                                        // 536\n                    return false;                                                                                   // 537\n                }                                                                                                   // 538\n            });                                                                                                     // 539\n                                                                                                                    // 540\n            $('li a', this.$ul).on('touchstart click', $.proxy(function(event) {                                    // 541\n                event.stopPropagation();                                                                            // 542\n                                                                                                                    // 543\n                var $target = $(event.target);                                                                      // 544\n                                                                                                                    // 545\n                if (event.shiftKey && this.options.multiple) {                                                      // 546\n                    if($target.is(\"label\")){ // Handles checkbox selection manually (see https://github.com/davidstutz/bootstrap-multiselect/issues/431)\n                        event.preventDefault();                                                                     // 548\n                        $target = $target.find(\"input\");                                                            // 549\n                        $target.prop(\"checked\", !$target.prop(\"checked\"));                                          // 550\n                    }                                                                                               // 551\n                    var checked = $target.prop('checked') || false;                                                 // 552\n                                                                                                                    // 553\n                    if (this.lastToggledInput !== null && this.lastToggledInput !== $target) { // Make sure we actually have a range\n                        var from = $target.closest(\"li\").index();                                                   // 555\n                        var to = this.lastToggledInput.closest(\"li\").index();                                       // 556\n                                                                                                                    // 557\n                        if (from > to) { // Swap the indices                                                        // 558\n                            var tmp = to;                                                                           // 559\n                            to = from;                                                                              // 560\n                            from = tmp;                                                                             // 561\n                        }                                                                                           // 562\n                                                                                                                    // 563\n                        // Make sure we grab all elements since slice excludes the last index                       // 564\n                        ++to;                                                                                       // 565\n                                                                                                                    // 566\n                        // Change the checkboxes and underlying options                                             // 567\n                        var range = this.$ul.find(\"li\").slice(from, to).find(\"input\");                              // 568\n                                                                                                                    // 569\n                        range.prop('checked', checked);                                                             // 570\n                                                                                                                    // 571\n                        if (this.options.selectedClass) {                                                           // 572\n                            range.closest('li')                                                                     // 573\n                                .toggleClass(this.options.selectedClass, checked);                                  // 574\n                        }                                                                                           // 575\n                                                                                                                    // 576\n                        for (var i = 0, j = range.length; i < j; i++) {                                             // 577\n                            var $checkbox = $(range[i]);                                                            // 578\n                                                                                                                    // 579\n                            var $option = this.getOptionByValue($checkbox.val());                                   // 580\n                                                                                                                    // 581\n                            $option.prop('selected', checked);                                                      // 582\n                        }                                                                                           // 583\n                    }                                                                                               // 584\n                                                                                                                    // 585\n                    // Trigger the select \"change\" event                                                            // 586\n                    $target.trigger(\"change\");                                                                      // 587\n                }                                                                                                   // 588\n                                                                                                                    // 589\n                // Remembers last clicked option                                                                    // 590\n                if($target.is(\"input\") && !$target.closest(\"li\").is(\".multiselect-item\")){                          // 591\n                    this.lastToggledInput = $target;                                                                // 592\n                }                                                                                                   // 593\n                                                                                                                    // 594\n                $target.blur();                                                                                     // 595\n            }, this));                                                                                              // 596\n                                                                                                                    // 597\n            // Keyboard support.                                                                                    // 598\n            this.$container.off('keydown.multiselect').on('keydown.multiselect', $.proxy(function(event) {          // 599\n                if ($('input[type=\"text\"]', this.$container).is(':focus')) {                                        // 600\n                    return;                                                                                         // 601\n                }                                                                                                   // 602\n                                                                                                                    // 603\n                if (event.keyCode === 9 && this.$container.hasClass('open')) {                                      // 604\n                    this.$button.click();                                                                           // 605\n                }                                                                                                   // 606\n                else {                                                                                              // 607\n                    var $items = $(this.$container).find(\"li:not(.divider):not(.disabled) a\").filter(\":visible\");   // 608\n                                                                                                                    // 609\n                    if (!$items.length) {                                                                           // 610\n                        return;                                                                                     // 611\n                    }                                                                                               // 612\n                                                                                                                    // 613\n                    var index = $items.index($items.filter(':focus'));                                              // 614\n                                                                                                                    // 615\n                    // Navigation up.                                                                               // 616\n                    if (event.keyCode === 38 && index > 0) {                                                        // 617\n                        index--;                                                                                    // 618\n                    }                                                                                               // 619\n                    // Navigate down.                                                                               // 620\n                    else if (event.keyCode === 40 && index < $items.length - 1) {                                   // 621\n                        index++;                                                                                    // 622\n                    }                                                                                               // 623\n                    else if (!~index) {                                                                             // 624\n                        index = 0;                                                                                  // 625\n                    }                                                                                               // 626\n                                                                                                                    // 627\n                    var $current = $items.eq(index);                                                                // 628\n                    $current.focus();                                                                               // 629\n                                                                                                                    // 630\n                    if (event.keyCode === 32 || event.keyCode === 13) {                                             // 631\n                        var $checkbox = $current.find('input');                                                     // 632\n                                                                                                                    // 633\n                        $checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"));                                      // 634\n                        $checkbox.change();                                                                         // 635\n                    }                                                                                               // 636\n                                                                                                                    // 637\n                    event.stopPropagation();                                                                        // 638\n                    event.preventDefault();                                                                         // 639\n                }                                                                                                   // 640\n            }, this));                                                                                              // 641\n                                                                                                                    // 642\n            if(this.options.enableClickableOptGroups && this.options.multiple) {                                    // 643\n                $('li.multiselect-group', this.$ul).on('click', $.proxy(function(event) {                           // 644\n                    event.stopPropagation();                                                                        // 645\n                                                                                                                    // 646\n                    var group = $(event.target).parent();                                                           // 647\n                                                                                                                    // 648\n                    // Search all option in optgroup                                                                // 649\n                    var $options = group.nextUntil('li.multiselect-group');                                         // 650\n                    var $visibleOptions = $options.filter(\":visible:not(.disabled)\");                               // 651\n                                                                                                                    // 652\n                    // check or uncheck items                                                                       // 653\n                    var allChecked = true;                                                                          // 654\n                    var optionInputs = $visibleOptions.find('input');                                               // 655\n                    optionInputs.each(function() {                                                                  // 656\n                        allChecked = allChecked && $(this).prop('checked');                                         // 657\n                    });                                                                                             // 658\n                                                                                                                    // 659\n                    optionInputs.prop('checked', !allChecked).trigger('change');                                    // 660\n               }, this));                                                                                           // 661\n            }                                                                                                       // 662\n        },                                                                                                          // 663\n                                                                                                                    // 664\n        /**                                                                                                         // 665\n         * Create an option using the given select option.                                                          // 666\n         *                                                                                                          // 667\n         * @param {jQuery} element                                                                                  // 668\n         */                                                                                                         // 669\n        createOptionValue: function(element) {                                                                      // 670\n            var $element = $(element);                                                                              // 671\n            if ($element.is(':selected')) {                                                                         // 672\n                $element.prop('selected', true);                                                                    // 673\n            }                                                                                                       // 674\n                                                                                                                    // 675\n            // Support the label attribute on options.                                                              // 676\n            var label = this.options.optionLabel(element);                                                          // 677\n            var value = $element.val();                                                                             // 678\n            var inputType = this.options.multiple ? \"checkbox\" : \"radio\";                                           // 679\n                                                                                                                    // 680\n            var $li = $(this.options.templates.li);                                                                 // 681\n            var $label = $('label', $li);                                                                           // 682\n            $label.addClass(inputType);                                                                             // 683\n                                                                                                                    // 684\n            if (this.options.enableHTML) {                                                                          // 685\n                $label.html(\" \" + label);                                                                           // 686\n            }                                                                                                       // 687\n            else {                                                                                                  // 688\n                $label.text(\" \" + label);                                                                           // 689\n            }                                                                                                       // 690\n                                                                                                                    // 691\n            var $checkbox = $('<input/>').attr('type', inputType);                                                  // 692\n                                                                                                                    // 693\n            if (this.options.checkboxName) {                                                                        // 694\n                $checkbox.attr('name', this.options.checkboxName);                                                  // 695\n            }                                                                                                       // 696\n            $label.prepend($checkbox);                                                                              // 697\n                                                                                                                    // 698\n            var selected = $element.prop('selected') || false;                                                      // 699\n            $checkbox.val(value);                                                                                   // 700\n                                                                                                                    // 701\n            if (value === this.options.selectAllValue) {                                                            // 702\n                $li.addClass(\"multiselect-item multiselect-all\");                                                   // 703\n                $checkbox.parent().parent()                                                                         // 704\n                    .addClass('multiselect-all');                                                                   // 705\n            }                                                                                                       // 706\n                                                                                                                    // 707\n            $label.attr('title', $element.attr('title'));                                                           // 708\n                                                                                                                    // 709\n            this.$ul.append($li);                                                                                   // 710\n                                                                                                                    // 711\n            if ($element.is(':disabled')) {                                                                         // 712\n                $checkbox.attr('disabled', 'disabled')                                                              // 713\n                    .prop('disabled', true)                                                                         // 714\n                    .closest('a')                                                                                   // 715\n                    .attr(\"tabindex\", \"-1\")                                                                         // 716\n                    .closest('li')                                                                                  // 717\n                    .addClass('disabled');                                                                          // 718\n            }                                                                                                       // 719\n                                                                                                                    // 720\n            $checkbox.prop('checked', selected);                                                                    // 721\n                                                                                                                    // 722\n            if (selected && this.options.selectedClass) {                                                           // 723\n                $checkbox.closest('li')                                                                             // 724\n                    .addClass(this.options.selectedClass);                                                          // 725\n            }                                                                                                       // 726\n        },                                                                                                          // 727\n                                                                                                                    // 728\n        /**                                                                                                         // 729\n         * Creates a divider using the given select option.                                                         // 730\n         *                                                                                                          // 731\n         * @param {jQuery} element                                                                                  // 732\n         */                                                                                                         // 733\n        createDivider: function(element) {                                                                          // 734\n            var $divider = $(this.options.templates.divider);                                                       // 735\n            this.$ul.append($divider);                                                                              // 736\n        },                                                                                                          // 737\n                                                                                                                    // 738\n        /**                                                                                                         // 739\n         * Creates an optgroup.                                                                                     // 740\n         *                                                                                                          // 741\n         * @param {jQuery} group                                                                                    // 742\n         */                                                                                                         // 743\n        createOptgroup: function(group) {                                                                           // 744\n            var groupName = $(group).prop('label');                                                                 // 745\n                                                                                                                    // 746\n            // Add a header for the group.                                                                          // 747\n            var $li = $(this.options.templates.liGroup);                                                            // 748\n                                                                                                                    // 749\n            if (this.options.enableHTML) {                                                                          // 750\n                $('label', $li).html(groupName);                                                                    // 751\n            }                                                                                                       // 752\n            else {                                                                                                  // 753\n                $('label', $li).text(groupName);                                                                    // 754\n            }                                                                                                       // 755\n                                                                                                                    // 756\n            if (this.options.enableClickableOptGroups) {                                                            // 757\n                $li.addClass('multiselect-group-clickable');                                                        // 758\n            }                                                                                                       // 759\n                                                                                                                    // 760\n            this.$ul.append($li);                                                                                   // 761\n                                                                                                                    // 762\n            if ($(group).is(':disabled')) {                                                                         // 763\n                $li.addClass('disabled');                                                                           // 764\n            }                                                                                                       // 765\n                                                                                                                    // 766\n            // Add the options of the group.                                                                        // 767\n            $('option', group).each($.proxy(function(index, element) {                                              // 768\n                this.createOptionValue(element);                                                                    // 769\n            }, this));                                                                                              // 770\n        },                                                                                                          // 771\n                                                                                                                    // 772\n        /**                                                                                                         // 773\n         * Build the selct all.                                                                                     // 774\n         *                                                                                                          // 775\n         * Checks if a select all has already been created.                                                         // 776\n         */                                                                                                         // 777\n        buildSelectAll: function() {                                                                                // 778\n            if (typeof this.options.selectAllValue === 'number') {                                                  // 779\n                this.options.selectAllValue = this.options.selectAllValue.toString();                               // 780\n            }                                                                                                       // 781\n                                                                                                                    // 782\n            var alreadyHasSelectAll = this.hasSelectAll();                                                          // 783\n                                                                                                                    // 784\n            if (!alreadyHasSelectAll && this.options.includeSelectAllOption && this.options.multiple                // 785\n                    && $('option', this.$select).length > this.options.includeSelectAllIfMoreThan) {                // 786\n                                                                                                                    // 787\n                // Check whether to add a divider after the select all.                                             // 788\n                if (this.options.includeSelectAllDivider) {                                                         // 789\n                    this.$ul.prepend($(this.options.templates.divider));                                            // 790\n                }                                                                                                   // 791\n                                                                                                                    // 792\n                var $li = $(this.options.templates.li);                                                             // 793\n                $('label', $li).addClass(\"checkbox\");                                                               // 794\n                                                                                                                    // 795\n                if (this.options.enableHTML) {                                                                      // 796\n                    $('label', $li).html(\" \" + this.options.selectAllText);                                         // 797\n                }                                                                                                   // 798\n                else {                                                                                              // 799\n                    $('label', $li).text(\" \" + this.options.selectAllText);                                         // 800\n                }                                                                                                   // 801\n                                                                                                                    // 802\n                if (this.options.selectAllName) {                                                                   // 803\n                    $('label', $li).prepend('<input type=\"checkbox\" name=\"' + this.options.selectAllName + '\" />'); // 804\n                }                                                                                                   // 805\n                else {                                                                                              // 806\n                    $('label', $li).prepend('<input type=\"checkbox\" />');                                           // 807\n                }                                                                                                   // 808\n                                                                                                                    // 809\n                var $checkbox = $('input', $li);                                                                    // 810\n                $checkbox.val(this.options.selectAllValue);                                                         // 811\n                                                                                                                    // 812\n                $li.addClass(\"multiselect-item multiselect-all\");                                                   // 813\n                $checkbox.parent().parent()                                                                         // 814\n                    .addClass('multiselect-all');                                                                   // 815\n                                                                                                                    // 816\n                this.$ul.prepend($li);                                                                              // 817\n                                                                                                                    // 818\n                $checkbox.prop('checked', false);                                                                   // 819\n            }                                                                                                       // 820\n        },                                                                                                          // 821\n                                                                                                                    // 822\n        /**                                                                                                         // 823\n         * Builds the filter.                                                                                       // 824\n         */                                                                                                         // 825\n        buildFilter: function() {                                                                                   // 826\n                                                                                                                    // 827\n            // Build filter if filtering OR case insensitive filtering is enabled and the number of options exceeds (or equals) enableFilterLength.\n            if (this.options.enableFiltering || this.options.enableCaseInsensitiveFiltering) {                      // 829\n                var enableFilterLength = Math.max(this.options.enableFiltering, this.options.enableCaseInsensitiveFiltering);\n                                                                                                                    // 831\n                if (this.$select.find('option').length >= enableFilterLength) {                                     // 832\n                                                                                                                    // 833\n                    this.$filter = $(this.options.templates.filter);                                                // 834\n                    $('input', this.$filter).attr('placeholder', this.options.filterPlaceholder);                   // 835\n                                                                                                                    // 836\n                    // Adds optional filter clear button                                                            // 837\n                    if(this.options.includeFilterClearBtn){                                                         // 838\n                        var clearBtn = $(this.options.templates.filterClearBtn);                                    // 839\n                        clearBtn.on('click', $.proxy(function(event){                                               // 840\n                            clearTimeout(this.searchTimeout);                                                       // 841\n                            this.$filter.find('.multiselect-search').val('');                                       // 842\n                            $('li', this.$ul).show().removeClass(\"filter-hidden\");                                  // 843\n                            this.updateSelectAll();                                                                 // 844\n                        }, this));                                                                                  // 845\n                        this.$filter.find('.input-group').append(clearBtn);                                         // 846\n                    }                                                                                               // 847\n                                                                                                                    // 848\n                    this.$ul.prepend(this.$filter);                                                                 // 849\n                                                                                                                    // 850\n                    this.$filter.val(this.query).on('click', function(event) {                                      // 851\n                        event.stopPropagation();                                                                    // 852\n                    }).on('input keydown', $.proxy(function(event) {                                                // 853\n                        // Cancel enter key default behaviour                                                       // 854\n                        if (event.which === 13) {                                                                   // 855\n                          event.preventDefault();                                                                   // 856\n                        }                                                                                           // 857\n                                                                                                                    // 858\n                        // This is useful to catch \"keydown\" events after the browser has updated the control.      // 859\n                        clearTimeout(this.searchTimeout);                                                           // 860\n                                                                                                                    // 861\n                        this.searchTimeout = this.asyncFunction($.proxy(function() {                                // 862\n                                                                                                                    // 863\n                            if (this.query !== event.target.value) {                                                // 864\n                                this.query = event.target.value;                                                    // 865\n                                                                                                                    // 866\n                                var currentGroup, currentGroupVisible;                                              // 867\n                                $.each($('li', this.$ul), $.proxy(function(index, element) {                        // 868\n                                    var value = $('input', element).length > 0 ? $('input', element).val() : \"\";    // 869\n                                    var text = $('label', element).text();                                          // 870\n                                                                                                                    // 871\n                                    var filterCandidate = '';                                                       // 872\n                                    if ((this.options.filterBehavior === 'text')) {                                 // 873\n                                        filterCandidate = text;                                                     // 874\n                                    }                                                                               // 875\n                                    else if ((this.options.filterBehavior === 'value')) {                           // 876\n                                        filterCandidate = value;                                                    // 877\n                                    }                                                                               // 878\n                                    else if (this.options.filterBehavior === 'both') {                              // 879\n                                        filterCandidate = text + '\\n' + value;                                      // 880\n                                    }                                                                               // 881\n                                                                                                                    // 882\n                                    if (value !== this.options.selectAllValue && text) {                            // 883\n                                        // By default lets assume that element is not                               // 884\n                                        // interesting for this search.                                             // 885\n                                        var showElement = false;                                                    // 886\n                                                                                                                    // 887\n                                        if (this.options.enableCaseInsensitiveFiltering && filterCandidate.toLowerCase().indexOf(this.query.toLowerCase()) > -1) {\n                                            showElement = true;                                                     // 889\n                                        }                                                                           // 890\n                                        else if (filterCandidate.indexOf(this.query) > -1) {                        // 891\n                                            showElement = true;                                                     // 892\n                                        }                                                                           // 893\n                                                                                                                    // 894\n                                        // Toggle current element (group or group item) according to showElement boolean.\n                                        $(element).toggle(showElement).toggleClass('filter-hidden', !showElement);  // 896\n                                                                                                                    // 897\n                                        // Differentiate groups and group items.                                    // 898\n                                        if ($(element).hasClass('multiselect-group')) {                             // 899\n                                            // Remember group status.                                               // 900\n                                            currentGroup = element;                                                 // 901\n                                            currentGroupVisible = showElement;                                      // 902\n                                        }                                                                           // 903\n                                        else {                                                                      // 904\n                                            // Show group name when at least one of its items is visible.           // 905\n                                            if (showElement) {                                                      // 906\n                                                $(currentGroup).show().removeClass('filter-hidden');                // 907\n                                            }                                                                       // 908\n                                                                                                                    // 909\n                                            // Show all group items when group name satisfies filter.               // 910\n                                            if (!showElement && currentGroupVisible) {                              // 911\n                                                $(element).show().removeClass('filter-hidden');                     // 912\n                                            }                                                                       // 913\n                                        }                                                                           // 914\n                                    }                                                                               // 915\n                                }, this));                                                                          // 916\n                            }                                                                                       // 917\n                                                                                                                    // 918\n                            this.updateSelectAll();                                                                 // 919\n                        }, this), 300, this);                                                                       // 920\n                    }, this));                                                                                      // 921\n                }                                                                                                   // 922\n            }                                                                                                       // 923\n        },                                                                                                          // 924\n                                                                                                                    // 925\n        /**                                                                                                         // 926\n         * Unbinds the whole plugin.                                                                                // 927\n         */                                                                                                         // 928\n        destroy: function() {                                                                                       // 929\n            this.$container.remove();                                                                               // 930\n            this.$select.show();                                                                                    // 931\n            this.$select.data('multiselect', null);                                                                 // 932\n        },                                                                                                          // 933\n                                                                                                                    // 934\n        /**                                                                                                         // 935\n         * Refreshs the multiselect based on the selected options of the select.                                    // 936\n         */                                                                                                         // 937\n        refresh: function() {                                                                                       // 938\n            $('option', this.$select).each($.proxy(function(index, element) {                                       // 939\n                var $input = $('li input', this.$ul).filter(function() {                                            // 940\n                    return $(this).val() === $(element).val();                                                      // 941\n                });                                                                                                 // 942\n                                                                                                                    // 943\n                if ($(element).is(':selected')) {                                                                   // 944\n                    $input.prop('checked', true);                                                                   // 945\n                                                                                                                    // 946\n                    if (this.options.selectedClass) {                                                               // 947\n                        $input.closest('li')                                                                        // 948\n                            .addClass(this.options.selectedClass);                                                  // 949\n                    }                                                                                               // 950\n                }                                                                                                   // 951\n                else {                                                                                              // 952\n                    $input.prop('checked', false);                                                                  // 953\n                                                                                                                    // 954\n                    if (this.options.selectedClass) {                                                               // 955\n                        $input.closest('li')                                                                        // 956\n                            .removeClass(this.options.selectedClass);                                               // 957\n                    }                                                                                               // 958\n                }                                                                                                   // 959\n                                                                                                                    // 960\n                if ($(element).is(\":disabled\")) {                                                                   // 961\n                    $input.attr('disabled', 'disabled')                                                             // 962\n                        .prop('disabled', true)                                                                     // 963\n                        .closest('li')                                                                              // 964\n                        .addClass('disabled');                                                                      // 965\n                }                                                                                                   // 966\n                else {                                                                                              // 967\n                    $input.prop('disabled', false)                                                                  // 968\n                        .closest('li')                                                                              // 969\n                        .removeClass('disabled');                                                                   // 970\n                }                                                                                                   // 971\n            }, this));                                                                                              // 972\n                                                                                                                    // 973\n            this.updateButtonText();                                                                                // 974\n            this.updateSelectAll();                                                                                 // 975\n        },                                                                                                          // 976\n                                                                                                                    // 977\n        /**                                                                                                         // 978\n         * Select all options of the given values.                                                                  // 979\n         *                                                                                                          // 980\n         * If triggerOnChange is set to true, the on change event is triggered if                                   // 981\n         * and only if one value is passed.                                                                         // 982\n         *                                                                                                          // 983\n         * @param {Array} selectValues                                                                              // 984\n         * @param {Boolean} triggerOnChange                                                                         // 985\n         */                                                                                                         // 986\n        select: function(selectValues, triggerOnChange) {                                                           // 987\n            if(!$.isArray(selectValues)) {                                                                          // 988\n                selectValues = [selectValues];                                                                      // 989\n            }                                                                                                       // 990\n                                                                                                                    // 991\n            for (var i = 0; i < selectValues.length; i++) {                                                         // 992\n                var value = selectValues[i];                                                                        // 993\n                                                                                                                    // 994\n                if (value === null || value === undefined) {                                                        // 995\n                    continue;                                                                                       // 996\n                }                                                                                                   // 997\n                                                                                                                    // 998\n                var $option = this.getOptionByValue(value);                                                         // 999\n                var $checkbox = this.getInputByValue(value);                                                        // 1000\n                                                                                                                    // 1001\n                if($option === undefined || $checkbox === undefined) {                                              // 1002\n                    continue;                                                                                       // 1003\n                }                                                                                                   // 1004\n                                                                                                                    // 1005\n                if (!this.options.multiple) {                                                                       // 1006\n                    this.deselectAll(false);                                                                        // 1007\n                }                                                                                                   // 1008\n                                                                                                                    // 1009\n                if (this.options.selectedClass) {                                                                   // 1010\n                    $checkbox.closest('li')                                                                         // 1011\n                        .addClass(this.options.selectedClass);                                                      // 1012\n                }                                                                                                   // 1013\n                                                                                                                    // 1014\n                $checkbox.prop('checked', true);                                                                    // 1015\n                $option.prop('selected', true);                                                                     // 1016\n                                                                                                                    // 1017\n                if (triggerOnChange) {                                                                              // 1018\n                    this.options.onChange($option, true);                                                           // 1019\n                }                                                                                                   // 1020\n            }                                                                                                       // 1021\n                                                                                                                    // 1022\n            this.updateButtonText();                                                                                // 1023\n            this.updateSelectAll();                                                                                 // 1024\n        },                                                                                                          // 1025\n                                                                                                                    // 1026\n        /**                                                                                                         // 1027\n         * Clears all selected items.                                                                               // 1028\n         */                                                                                                         // 1029\n        clearSelection: function () {                                                                               // 1030\n            this.deselectAll(false);                                                                                // 1031\n            this.updateButtonText();                                                                                // 1032\n            this.updateSelectAll();                                                                                 // 1033\n        },                                                                                                          // 1034\n                                                                                                                    // 1035\n        /**                                                                                                         // 1036\n         * Deselects all options of the given values.                                                               // 1037\n         *                                                                                                          // 1038\n         * If triggerOnChange is set to true, the on change event is triggered, if                                  // 1039\n         * and only if one value is passed.                                                                         // 1040\n         *                                                                                                          // 1041\n         * @param {Array} deselectValues                                                                            // 1042\n         * @param {Boolean} triggerOnChange                                                                         // 1043\n         */                                                                                                         // 1044\n        deselect: function(deselectValues, triggerOnChange) {                                                       // 1045\n            if(!$.isArray(deselectValues)) {                                                                        // 1046\n                deselectValues = [deselectValues];                                                                  // 1047\n            }                                                                                                       // 1048\n                                                                                                                    // 1049\n            for (var i = 0; i < deselectValues.length; i++) {                                                       // 1050\n                var value = deselectValues[i];                                                                      // 1051\n                                                                                                                    // 1052\n                if (value === null || value === undefined) {                                                        // 1053\n                    continue;                                                                                       // 1054\n                }                                                                                                   // 1055\n                                                                                                                    // 1056\n                var $option = this.getOptionByValue(value);                                                         // 1057\n                var $checkbox = this.getInputByValue(value);                                                        // 1058\n                                                                                                                    // 1059\n                if($option === undefined || $checkbox === undefined) {                                              // 1060\n                    continue;                                                                                       // 1061\n                }                                                                                                   // 1062\n                                                                                                                    // 1063\n                if (this.options.selectedClass) {                                                                   // 1064\n                    $checkbox.closest('li')                                                                         // 1065\n                        .removeClass(this.options.selectedClass);                                                   // 1066\n                }                                                                                                   // 1067\n                                                                                                                    // 1068\n                $checkbox.prop('checked', false);                                                                   // 1069\n                $option.prop('selected', false);                                                                    // 1070\n                                                                                                                    // 1071\n                if (triggerOnChange) {                                                                              // 1072\n                    this.options.onChange($option, false);                                                          // 1073\n                }                                                                                                   // 1074\n            }                                                                                                       // 1075\n                                                                                                                    // 1076\n            this.updateButtonText();                                                                                // 1077\n            this.updateSelectAll();                                                                                 // 1078\n        },                                                                                                          // 1079\n                                                                                                                    // 1080\n        /**                                                                                                         // 1081\n         * Selects all enabled & visible options.                                                                   // 1082\n         *                                                                                                          // 1083\n         * If justVisible is true or not specified, only visible options are selected.                              // 1084\n         *                                                                                                          // 1085\n         * @param {Boolean} justVisible                                                                             // 1086\n         * @param {Boolean} triggerOnSelectAll                                                                      // 1087\n         */                                                                                                         // 1088\n        selectAll: function (justVisible, triggerOnSelectAll) {                                                     // 1089\n            var justVisible = typeof justVisible === 'undefined' ? true : justVisible;                              // 1090\n            var allCheckboxes = $(\"li input[type='checkbox']:enabled\", this.$ul);                                   // 1091\n            var visibleCheckboxes = allCheckboxes.filter(\":visible\");                                               // 1092\n            var allCheckboxesCount = allCheckboxes.length;                                                          // 1093\n            var visibleCheckboxesCount = visibleCheckboxes.length;                                                  // 1094\n                                                                                                                    // 1095\n            if(justVisible) {                                                                                       // 1096\n                visibleCheckboxes.prop('checked', true);                                                            // 1097\n                $(\"li:not(.divider):not(.disabled)\", this.$ul).filter(\":visible\").addClass(this.options.selectedClass);\n            }                                                                                                       // 1099\n            else {                                                                                                  // 1100\n                allCheckboxes.prop('checked', true);                                                                // 1101\n                $(\"li:not(.divider):not(.disabled)\", this.$ul).addClass(this.options.selectedClass);                // 1102\n            }                                                                                                       // 1103\n                                                                                                                    // 1104\n            if (allCheckboxesCount === visibleCheckboxesCount || justVisible === false) {                           // 1105\n                $(\"option:enabled\", this.$select).prop('selected', true);                                           // 1106\n            }                                                                                                       // 1107\n            else {                                                                                                  // 1108\n                var values = visibleCheckboxes.map(function() {                                                     // 1109\n                    return $(this).val();                                                                           // 1110\n                }).get();                                                                                           // 1111\n                                                                                                                    // 1112\n                $(\"option:enabled\", this.$select).filter(function(index) {                                          // 1113\n                    return $.inArray($(this).val(), values) !== -1;                                                 // 1114\n                }).prop('selected', true);                                                                          // 1115\n            }                                                                                                       // 1116\n                                                                                                                    // 1117\n            if (triggerOnSelectAll) {                                                                               // 1118\n                this.options.onSelectAll();                                                                         // 1119\n            }                                                                                                       // 1120\n        },                                                                                                          // 1121\n                                                                                                                    // 1122\n        /**                                                                                                         // 1123\n         * Deselects all options.                                                                                   // 1124\n         *                                                                                                          // 1125\n         * If justVisible is true or not specified, only visible options are deselected.                            // 1126\n         *                                                                                                          // 1127\n         * @param {Boolean} justVisible                                                                             // 1128\n         */                                                                                                         // 1129\n        deselectAll: function (justVisible) {                                                                       // 1130\n            var justVisible = typeof justVisible === 'undefined' ? true : justVisible;                              // 1131\n                                                                                                                    // 1132\n            if(justVisible) {                                                                                       // 1133\n                var visibleCheckboxes = $(\"li input[type='checkbox']:not(:disabled)\", this.$ul).filter(\":visible\"); // 1134\n                visibleCheckboxes.prop('checked', false);                                                           // 1135\n                                                                                                                    // 1136\n                var values = visibleCheckboxes.map(function() {                                                     // 1137\n                    return $(this).val();                                                                           // 1138\n                }).get();                                                                                           // 1139\n                                                                                                                    // 1140\n                $(\"option:enabled\", this.$select).filter(function(index) {                                          // 1141\n                    return $.inArray($(this).val(), values) !== -1;                                                 // 1142\n                }).prop('selected', false);                                                                         // 1143\n                                                                                                                    // 1144\n                if (this.options.selectedClass) {                                                                   // 1145\n                    $(\"li:not(.divider):not(.disabled)\", this.$ul).filter(\":visible\").removeClass(this.options.selectedClass);\n                }                                                                                                   // 1147\n            }                                                                                                       // 1148\n            else {                                                                                                  // 1149\n                $(\"li input[type='checkbox']:enabled\", this.$ul).prop('checked', false);                            // 1150\n                $(\"option:enabled\", this.$select).prop('selected', false);                                          // 1151\n                                                                                                                    // 1152\n                if (this.options.selectedClass) {                                                                   // 1153\n                    $(\"li:not(.divider):not(.disabled)\", this.$ul).removeClass(this.options.selectedClass);         // 1154\n                }                                                                                                   // 1155\n            }                                                                                                       // 1156\n        },                                                                                                          // 1157\n                                                                                                                    // 1158\n        /**                                                                                                         // 1159\n         * Rebuild the plugin.                                                                                      // 1160\n         *                                                                                                          // 1161\n         * Rebuilds the dropdown, the filter and the select all option.                                             // 1162\n         */                                                                                                         // 1163\n        rebuild: function() {                                                                                       // 1164\n            this.$ul.html('');                                                                                      // 1165\n                                                                                                                    // 1166\n            // Important to distinguish between radios and checkboxes.                                              // 1167\n            this.options.multiple = this.$select.attr('multiple') === \"multiple\";                                   // 1168\n                                                                                                                    // 1169\n            this.buildSelectAll();                                                                                  // 1170\n            this.buildDropdownOptions();                                                                            // 1171\n            this.buildFilter();                                                                                     // 1172\n                                                                                                                    // 1173\n            this.updateButtonText();                                                                                // 1174\n            this.updateSelectAll();                                                                                 // 1175\n                                                                                                                    // 1176\n            if (this.options.disableIfEmpty && $('option', this.$select).length <= 0) {                             // 1177\n                this.disable();                                                                                     // 1178\n            }                                                                                                       // 1179\n            else {                                                                                                  // 1180\n                this.enable();                                                                                      // 1181\n            }                                                                                                       // 1182\n                                                                                                                    // 1183\n            if (this.options.dropRight) {                                                                           // 1184\n                this.$ul.addClass('pull-right');                                                                    // 1185\n            }                                                                                                       // 1186\n        },                                                                                                          // 1187\n                                                                                                                    // 1188\n        /**                                                                                                         // 1189\n         * The provided data will be used to build the dropdown.                                                    // 1190\n         */                                                                                                         // 1191\n        dataprovider: function(dataprovider) {                                                                      // 1192\n                                                                                                                    // 1193\n            var groupCounter = 0;                                                                                   // 1194\n            var $select = this.$select.empty();                                                                     // 1195\n                                                                                                                    // 1196\n            $.each(dataprovider, function (index, option) {                                                         // 1197\n                var $tag;                                                                                           // 1198\n                                                                                                                    // 1199\n                if ($.isArray(option.children)) { // create optiongroup tag                                         // 1200\n                    groupCounter++;                                                                                 // 1201\n                                                                                                                    // 1202\n                    $tag = $('<optgroup/>').attr({                                                                  // 1203\n                        label: option.label || 'Group ' + groupCounter,                                             // 1204\n                        disabled: !!option.disabled                                                                 // 1205\n                    });                                                                                             // 1206\n                                                                                                                    // 1207\n                    forEach(option.children, function(subOption) { // add children option tags                      // 1208\n                        $tag.append($('<option/>').attr({                                                           // 1209\n                            value: subOption.value,                                                                 // 1210\n                            label: subOption.label || subOption.value,                                              // 1211\n                            title: subOption.title,                                                                 // 1212\n                            selected: !!subOption.selected,                                                         // 1213\n                            disabled: !!subOption.disabled                                                          // 1214\n                        }));                                                                                        // 1215\n                    });                                                                                             // 1216\n                }                                                                                                   // 1217\n                else {                                                                                              // 1218\n                    $tag = $('<option/>').attr({                                                                    // 1219\n                        value: option.value,                                                                        // 1220\n                        label: option.label || option.value,                                                        // 1221\n                        title: option.title,                                                                        // 1222\n                        selected: !!option.selected,                                                                // 1223\n                        disabled: !!option.disabled                                                                 // 1224\n                    });                                                                                             // 1225\n                }                                                                                                   // 1226\n                                                                                                                    // 1227\n                $select.append($tag);                                                                               // 1228\n            });                                                                                                     // 1229\n                                                                                                                    // 1230\n            this.rebuild();                                                                                         // 1231\n        },                                                                                                          // 1232\n                                                                                                                    // 1233\n        /**                                                                                                         // 1234\n         * Enable the multiselect.                                                                                  // 1235\n         */                                                                                                         // 1236\n        enable: function() {                                                                                        // 1237\n            this.$select.prop('disabled', false);                                                                   // 1238\n            this.$button.prop('disabled', false)                                                                    // 1239\n                .removeClass('disabled');                                                                           // 1240\n        },                                                                                                          // 1241\n                                                                                                                    // 1242\n        /**                                                                                                         // 1243\n         * Disable the multiselect.                                                                                 // 1244\n         */                                                                                                         // 1245\n        disable: function() {                                                                                       // 1246\n            this.$select.prop('disabled', true);                                                                    // 1247\n            this.$button.prop('disabled', true)                                                                     // 1248\n                .addClass('disabled');                                                                              // 1249\n        },                                                                                                          // 1250\n                                                                                                                    // 1251\n        /**                                                                                                         // 1252\n         * Set the options.                                                                                         // 1253\n         *                                                                                                          // 1254\n         * @param {Array} options                                                                                   // 1255\n         */                                                                                                         // 1256\n        setOptions: function(options) {                                                                             // 1257\n            this.options = this.mergeOptions(options);                                                              // 1258\n        },                                                                                                          // 1259\n                                                                                                                    // 1260\n        /**                                                                                                         // 1261\n         * Merges the given options with the default options.                                                       // 1262\n         *                                                                                                          // 1263\n         * @param {Array} options                                                                                   // 1264\n         * @returns {Array}                                                                                         // 1265\n         */                                                                                                         // 1266\n        mergeOptions: function(options) {                                                                           // 1267\n            return $.extend(true, {}, this.defaults, this.options, options);                                        // 1268\n        },                                                                                                          // 1269\n                                                                                                                    // 1270\n        /**                                                                                                         // 1271\n         * Checks whether a select all checkbox is present.                                                         // 1272\n         *                                                                                                          // 1273\n         * @returns {Boolean}                                                                                       // 1274\n         */                                                                                                         // 1275\n        hasSelectAll: function() {                                                                                  // 1276\n            return $('li.multiselect-all', this.$ul).length > 0;                                                    // 1277\n        },                                                                                                          // 1278\n                                                                                                                    // 1279\n        /**                                                                                                         // 1280\n         * Updates the select all checkbox based on the currently displayed and selected checkboxes.                // 1281\n         */                                                                                                         // 1282\n        updateSelectAll: function() {                                                                               // 1283\n            if (this.hasSelectAll()) {                                                                              // 1284\n                var allBoxes = $(\"li:not(.multiselect-item):not(.filter-hidden) input:enabled\", this.$ul);          // 1285\n                var allBoxesLength = allBoxes.length;                                                               // 1286\n                var checkedBoxesLength = allBoxes.filter(\":checked\").length;                                        // 1287\n                var selectAllLi  = $(\"li.multiselect-all\", this.$ul);                                               // 1288\n                var selectAllInput = selectAllLi.find(\"input\");                                                     // 1289\n                                                                                                                    // 1290\n                if (checkedBoxesLength > 0 && checkedBoxesLength === allBoxesLength) {                              // 1291\n                    selectAllInput.prop(\"checked\", true);                                                           // 1292\n                    selectAllLi.addClass(this.options.selectedClass);                                               // 1293\n                    this.options.onSelectAll();                                                                     // 1294\n                }                                                                                                   // 1295\n                else {                                                                                              // 1296\n                    selectAllInput.prop(\"checked\", false);                                                          // 1297\n                    selectAllLi.removeClass(this.options.selectedClass);                                            // 1298\n                }                                                                                                   // 1299\n            }                                                                                                       // 1300\n        },                                                                                                          // 1301\n                                                                                                                    // 1302\n        /**                                                                                                         // 1303\n         * Update the button text and its title based on the currently selected options.                            // 1304\n         */                                                                                                         // 1305\n        updateButtonText: function() {                                                                              // 1306\n            var options = this.getSelected();                                                                       // 1307\n                                                                                                                    // 1308\n            // First update the displayed button text.                                                              // 1309\n            if (this.options.enableHTML) {                                                                          // 1310\n                $('.multiselect .multiselect-selected-text', this.$container).html(this.options.buttonText(options, this.$select));\n            }                                                                                                       // 1312\n            else {                                                                                                  // 1313\n                $('.multiselect .multiselect-selected-text', this.$container).text(this.options.buttonText(options, this.$select));\n            }                                                                                                       // 1315\n                                                                                                                    // 1316\n            // Now update the title attribute of the button.                                                        // 1317\n            $('.multiselect', this.$container).attr('title', this.options.buttonTitle(options, this.$select));      // 1318\n        },                                                                                                          // 1319\n                                                                                                                    // 1320\n        /**                                                                                                         // 1321\n         * Get all selected options.                                                                                // 1322\n         *                                                                                                          // 1323\n         * @returns {jQUery}                                                                                        // 1324\n         */                                                                                                         // 1325\n        getSelected: function() {                                                                                   // 1326\n            return $('option', this.$select).filter(\":selected\");                                                   // 1327\n        },                                                                                                          // 1328\n                                                                                                                    // 1329\n        /**                                                                                                         // 1330\n         * Gets a select option by its value.                                                                       // 1331\n         *                                                                                                          // 1332\n         * @param {String} value                                                                                    // 1333\n         * @returns {jQuery}                                                                                        // 1334\n         */                                                                                                         // 1335\n        getOptionByValue: function (value) {                                                                        // 1336\n                                                                                                                    // 1337\n            var options = $('option', this.$select);                                                                // 1338\n            var valueToCompare = value.toString();                                                                  // 1339\n                                                                                                                    // 1340\n            for (var i = 0; i < options.length; i = i + 1) {                                                        // 1341\n                var option = options[i];                                                                            // 1342\n                if (option.value === valueToCompare) {                                                              // 1343\n                    return $(option);                                                                               // 1344\n                }                                                                                                   // 1345\n            }                                                                                                       // 1346\n        },                                                                                                          // 1347\n                                                                                                                    // 1348\n        /**                                                                                                         // 1349\n         * Get the input (radio/checkbox) by its value.                                                             // 1350\n         *                                                                                                          // 1351\n         * @param {String} value                                                                                    // 1352\n         * @returns {jQuery}                                                                                        // 1353\n         */                                                                                                         // 1354\n        getInputByValue: function (value) {                                                                         // 1355\n                                                                                                                    // 1356\n            var checkboxes = $('li input', this.$ul);                                                               // 1357\n            var valueToCompare = value.toString();                                                                  // 1358\n                                                                                                                    // 1359\n            for (var i = 0; i < checkboxes.length; i = i + 1) {                                                     // 1360\n                var checkbox = checkboxes[i];                                                                       // 1361\n                if (checkbox.value === valueToCompare) {                                                            // 1362\n                    return $(checkbox);                                                                             // 1363\n                }                                                                                                   // 1364\n            }                                                                                                       // 1365\n        },                                                                                                          // 1366\n                                                                                                                    // 1367\n        /**                                                                                                         // 1368\n         * Used for knockout integration.                                                                           // 1369\n         */                                                                                                         // 1370\n        updateOriginalOptions: function() {                                                                         // 1371\n            this.originalOptions = this.$select.clone()[0].options;                                                 // 1372\n        },                                                                                                          // 1373\n                                                                                                                    // 1374\n        asyncFunction: function(callback, timeout, self) {                                                          // 1375\n            var args = Array.prototype.slice.call(arguments, 3);                                                    // 1376\n            return setTimeout(function() {                                                                          // 1377\n                callback.apply(self || window, args);                                                               // 1378\n            }, timeout);                                                                                            // 1379\n        },                                                                                                          // 1380\n                                                                                                                    // 1381\n        setAllSelectedText: function(allSelectedText) {                                                             // 1382\n            this.options.allSelectedText = allSelectedText;                                                         // 1383\n            this.updateButtonText();                                                                                // 1384\n        }                                                                                                           // 1385\n    };                                                                                                              // 1386\n                                                                                                                    // 1387\n    $.fn.multiselect = function(option, parameter, extraOptions) {                                                  // 1388\n        return this.each(function() {                                                                               // 1389\n            var data = $(this).data('multiselect');                                                                 // 1390\n            var options = typeof option === 'object' && option;                                                     // 1391\n                                                                                                                    // 1392\n            // Initialize the multiselect.                                                                          // 1393\n            if (!data) {                                                                                            // 1394\n                data = new Multiselect(this, options);                                                              // 1395\n                $(this).data('multiselect', data);                                                                  // 1396\n            }                                                                                                       // 1397\n                                                                                                                    // 1398\n            // Call multiselect method.                                                                             // 1399\n            if (typeof option === 'string') {                                                                       // 1400\n                data[option](parameter, extraOptions);                                                              // 1401\n                                                                                                                    // 1402\n                if (option === 'destroy') {                                                                         // 1403\n                    $(this).data('multiselect', false);                                                             // 1404\n                }                                                                                                   // 1405\n            }                                                                                                       // 1406\n        });                                                                                                         // 1407\n    };                                                                                                              // 1408\n                                                                                                                    // 1409\n    $.fn.multiselect.Constructor = Multiselect;                                                                     // 1410\n                                                                                                                    // 1411\n    $(function() {                                                                                                  // 1412\n        $(\"select[data-role=multiselect]\").multiselect();                                                           // 1413\n    });                                                                                                             // 1414\n                                                                                                                    // 1415\n}(window.jQuery);                                                                                                   // 1416\n                                                                                                                    // 1417\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1427\n}).call(this);                                                                                                         // 1428\n                                                                                                                       // 1429\n                                                                                                                       // 1430\n                                                                                                                       // 1431\n                                                                                                                       // 1432\n                                                                                                                       // 1433\n                                                                                                                       // 1434\n(function () {                                                                                                         // 1435\n                                                                                                                       // 1436\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/emdagon:bootstrap-multiselect/template.Multiselect.js                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.__checkName(\"Multiselect\");                                                                                // 2\nTemplate[\"Multiselect\"] = new Template(\"Template.Multiselect\", (function() {                                        // 3\n  var view = this;                                                                                                  // 4\n  return HTML.SELECT({                                                                                              // 5\n    name: function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"name\"));                                                               // 7\n    },                                                                                                              // 8\n    multiple: \"multiple\"                                                                                            // 9\n  }, \"\\n    \", Blaze.Each(function() {                                                                              // 10\n    return Spacebars.call(view.lookup(\"options\"));                                                                  // 11\n  }, function() {                                                                                                   // 12\n    return [ \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                             // 13\n      return Blaze._TemplateWith(function() {                                                                       // 14\n        return Spacebars.call(view.lookup(\"args\"));                                                                 // 15\n      }, function() {                                                                                               // 16\n        return Spacebars.include(function() {                                                                       // 17\n          return Spacebars.call(view.templateContentBlock);                                                         // 18\n        });                                                                                                         // 19\n      });                                                                                                           // 20\n    }), \"\\n    \" ];                                                                                                 // 21\n  }), \"\\n  \");                                                                                                      // 22\n}));                                                                                                                // 23\n                                                                                                                    // 24\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1468\n}).call(this);                                                                                                         // 1469\n                                                                                                                       // 1470\n                                                                                                                       // 1471\n                                                                                                                       // 1472\n                                                                                                                       // 1473\n                                                                                                                       // 1474\n                                                                                                                       // 1475\n(function () {                                                                                                         // 1476\n                                                                                                                       // 1477\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/emdagon:bootstrap-multiselect/Multiselect.js                                                            //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.Multiselect.onRendered(function() {                                                                        // 2\n  this.$('select').multiselect({                                                                                    // 3\n    disableIfEmpty: true                                                                                            // 4\n  });                                                                                                               // 5\n});                                                                                                                 // 6\n                                                                                                                    // 7\nTemplate.Multiselect.helpers({                                                                                      // 8\n  args: function() {                                                                                                // 9\n    data = Template.instance().data;                                                                                // 10\n    selected = false;                                                                                               // 11\n    if (data.selected instanceof Array)                                                                             // 12\n      selected = Boolean(data.selected.indexOf(this._id) > -1 );                                                    // 13\n    else                                                                                                            // 14\n      selected = this._id === data.selected;                                                                        // 15\n    return _.extend({}, this, {attrs: (selected ? 'selected' : '')});                                               // 16\n  }                                                                                                                 // 17\n});                                                                                                                 // 18\n                                                                                                                    // 19\n                                                                                                                    // 20\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 1505\n}).call(this);                                                                                                         // 1506\n                                                                                                                       // 1507\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['emdagon:bootstrap-multiselect'] = {};\n\n})();\n","servePath":"/packages/emdagon_bootstrap-multiselect.js"}]